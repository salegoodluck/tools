任务1 

BEGIN

 DECLARE t_error INTEGER DEFAULT 0;  
 DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET t_error=1;  
   -- 开启事物
 START TRANSACTION;  
-- 双11 取消
-- 获取当前日期在本周的周日;星期天不生成拣货单
select @rq:=subdate(curdate(),if(date_format(curdate(),'%w')=0,7,date_format(curdate(),'%w'))-7);
if -- (curdate()<>@rq)  and 
(curdate()<>'2018-02-21')
THEN

set @m=0;
DROP TABLE IF EXISTS assign_a1;
-- 截取现在的订单分配表 东莞仓订单-1035数据,订单分配表是时时增加数据的。;erp已通过,order_is_join未拆单。
CREATE TEMPORARY table assign_a1 
select orders_id,pick_type,status,products_sku,products_location,s_warehouse_id,product_num,assign_num,is_span,left(products_location,1) as floor 
from erp_stock_assign a where status=200 and s_warehouse_id=1035
and EXISTS (select 1 from erp_database_newest.erp_orders b where a.orders_id=b.erp_orders_id and b.orders_status=3 and b.orders_is_join =0 and b.orders_warehouse_id=1035
and IFNULL(b.orders_shipping_code,'')<>'');

-- 创建临时表用于临时存储，避免重复读写系统表

-- erp_pick_product临时表
DROP TABLE IF EXISTS erp_pick_product_ls;
CREATE TEMPORARY table erp_pick_product_ls(
pick_id  int(11) DEFAULT NULL,
orders_id  int(11) DEFAULT NULL,
product_sku  varchar(200) DEFAULT '',
product_num  int(5) DEFAULT NULL,
scan_num  int(5) DEFAULT '0',
scan_uid  int(11) DEFAULT '0',
status  tinyint(5) DEFAULT '1',
scan_time  int(11) DEFAULT '0',
create_time  int(1) DEFAULT NULL,
return_time  int(11) DEFAULT '0',
ship_time  int(11) DEFAULT '0',
page_num  varchar(100) DEFAULT NULL,
basket_num  int(5) DEFAULT '0',
ship_uid  int(11) DEFAULT '0'
);
-- erp_picking_task_details_new临时表
DROP TABLE IF EXISTS erp_picking_task_details_new_ls;
CREATE TEMPORARY table erp_picking_task_details_new_ls(
task_id int(11) NOT NULL DEFAULT '0',
product_sku varchar(200) NOT NULL DEFAULT '0',
products_location varchar(200) NOT NULL DEFAULT '0',
product_num int(11) NOT NULL DEFAULT '0',
actual_num int(11) NOT NULL DEFAULT '0',
box varchar(200) NOT NULL DEFAULT '0',
status int(11) NOT NULL DEFAULT '0',
pick_user varchar(200) NOT NULL DEFAULT '0',
create_time int(11) NOT NULL DEFAULT '0',
assign_time int(11) DEFAULT '0',
box_status int(11) DEFAULT '0',
update_time int(11) NOT NULL
);

/*----------------单单 4F订单------------------*/
-- 取得单单的设计参数
select @n:=value from wms_sys_picktaskrule where Parameter_name='only' and s_warehouse_id='1035';

select @mdd_4:=COUNT(*) from assign_a1 where status=200 and is_span=0 and pick_type=1 and floor='4';
while @mdd_4>=@n do 
-- 订单大于100,循环执行写入
DROP TABLE IF EXISTS assign_dd_4F;
-- 单单 获取100个订单生成拣货任务;4F -- 传入参数
SET @slsql="
CREATE TEMPORARY table assign_dd_4F
select orders_id,pick_type,products_sku,products_location,s_warehouse_id,product_num,assign_num from(
select orders_id,pick_type,products_sku,products_location,s_warehouse_id,product_num,assign_num from assign_a1 
where status=200 and is_span=0 and pick_type=1 and floor='4'
order by products_location,products_sku) a LIMIT ?,?";
PREPARE STMT FROM @slsql;
EXECUTE STMT USING @m,@n;
deallocate prepare STMT;

-- 5F的订单数据组织写入对应表，更新相关标志。非最后一次分配，不满100订单不给分配
IF (select count(*) from assign_dd_4F)=@n
then

-- 根据库存分配表取得订单号，在订单表获取物流ID的结果集
DROP TABLE IF EXISTS a1;
CREATE TEMPORARY table a1 select orders_id from assign_dd_4F;
-- 优化 select @i:=GROUP_CONCAT(DISTINCT shipmentAutoMatched)  From erp_database_newest.erp_orders where erp_orders_id in(select orders_id from a1);


-- 在库存分配表erp_stock_assign组织数据写入拣货汇总表 erp_pick
INSERT into erp_database_newest.erp_pick(status,type,warehouse,create_time,uid,order_num,sku_num,num,shipment_id,order_type,pick_start_time,pick_end_time,pick_uid,pick_warehouse,pick_user,pick_action_time,pick_status)
select 1 as status,pick_type as type,s_warehouse_id as warehouse,UNIX_TIMESTAMP(NOW()) as create_time,0 as uid,count(distinct orders_id) as order_num,count(distinct products_sku) as sku_num,sum(assign_num) as num,
0 as shipment_id,0 as order_type,0 as pick_start_time,0 as pick_end_time,0 as pick_uid,s_warehouse_id as pick_warehouse,0 as pick_user,0 as pick_action_time,0 as pick_status
from assign_dd_4F;-- 拣货单表


-- 取得拣货汇总表的最大id，在库存分配表erp_stock_assign组织数据写入拣货明细表erp_pick_product
SELECT @maxid:=max(id) from erp_database_newest.erp_pick;

INSERT into erp_pick_product_ls(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select @maxid as pick_id,orders_id,products_sku as product_sku,sum(assign_num) as product_num,0 as scan_num,0 as scan_uid,1 as status,0 as scan_time,UNIX_TIMESTAMP(NOW()) as create_time,0 as return_time,
0 as ship_time,0 as page_num,(@i:=@i+1) as basket_num,0 as ship_uid
from assign_dd_4F,(select @i:=0) as it
GROUP BY orders_id,products_sku;-- 拣货详情表 



-- 在库存分配表erp_stock_assign中查询要分配的任务量，数据组织插入任务汇总表erp_picking_task_new
INSERT into erp_picking_task_new(pick_id,pick_type,sku_num,num,status,pick_user,pick_status,create_time,box,floor,update_time,warehouse,floor_num)
select @maxid as pick_id,pick_type,count(distinct products_sku) as sku_num,sum(assign_num) as num,1 as status,'' as pick_user,0 as pick_status,UNIX_TIMESTAMP(NOW()) as create_time,0 as box,0 as floor,0 as update_time,s_warehouse_id as warehouse,4 as floor_num
from assign_dd_4F;

-- 取得任务汇总表的最大task_id，在库存分配表erp_stock_assign组织数据写入任务明细表erp_picking_task_details_new
SELECT @maxtask_id:=max(task_id) from  erp_picking_task_new;

insert into erp_picking_task_details_new_ls(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
SELECT @maxtask_id as task_id,products_sku,products_location,SUM(product_num) as product_num,0 as actual_num,'' as box,0 as status,'' as pick_user,UNIX_TIMESTAMP(NOW()) as create_time,0 as assign_time,0 as box_status,0 as update_time 
from assign_dd_4F
GROUP BY products_sku,products_location
ORDER BY products_location;

-- 回写 erp_stock_assign 的is_sc标志
-- 优化 update erp_stock_assign set status=300 , task_id=@maxtask_id where orders_id in(select orders_id from a1);
update erp_stock_assign a INNER JOIN a1 b on a.orders_id=b.orders_id set status=300,task_id=@maxtask_id;

-- 临时表也回写标志，减去重复插入数据
-- 优化update assign_a1 set status=300 where orders_id in(select orders_id from a1);
update assign_a1 a INNER JOIN a1 b on a.orders_id=b.orders_id set status=300;


-- 删除临时表
drop table a1;
DROP TABLE assign_dd_4F;
end if;
-- 循环一次减100
set @mdd_4=@mdd_4-@n;

-- 单个任务生成
-- erp_pick_product
INSERT into erp_database_newest.erp_pick_product(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid from erp_pick_product_ls;

-- erp_picking_task_details_new
insert into erp_picking_task_details_new(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
select task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time from erp_picking_task_details_new_ls;

-- 取得订单号
DROP TABLE IF EXISTS erp_pick_product_ls2;
CREATE TEMPORARY table erp_pick_product_ls2
select DISTINCT orders_id,pick_id from erp_pick_product_ls;
-- 写入日志表erp_operate_log
INSERT INTO erp_database_newest.erp_operate_log(operateUser,operateType,operateMod,operateKey,operateText)
select '30','update','ordersManage',orders_id,concat('生成拣货单(',pick_id,')，订单状态变为已打印') from erp_pick_product_ls2;

-- 取得订单分配里面的任务号，更新待发货订单表的标志及任务号
DROP TABLE IF EXISTS order_dd;
CREATE TEMPORARY table order_dd
select distinct a.orders_id,a.task_id,b.pick_id from erp_stock_assign a inner join erp_pick_product_ls2 b on a.orders_id=b.orders_id;
-- 回写订单标志
update erp_database_newest.erp_orders a INNER JOIN erp_pick_product_ls2 b on a.erp_orders_id=b.orders_id 
set a.orders_status=4,a.orders_print_time=now() where a.orders_status=3;

-- 回写待发货订单标志
update stock_out a INNER JOIN order_dd b on a.erp_orders_id=b.orders_id
set a.orders_status=30,a.task_num=b.task_id,a.print_time=UNIX_TIMESTAMP(NOW()),a.pick_id=b.pick_id;

truncate table erp_pick_product_ls;
truncate table erp_picking_task_details_new_ls;

end while;

/*----------------单单 5F订单------------------*/
select @mdd_5:=COUNT(*) from assign_a1 where status=200 and is_span=0 and pick_type=1 and floor='5';
while @mdd_5>=@n do 
-- 订单大于100,循环执行写入

DROP TABLE IF EXISTS assign_dd_5F;
-- 单单 获取100个订单生成拣货任务;5F -- 传入参数
SET @slsql="CREATE TEMPORARY table assign_dd_5F
select orders_id,pick_type,products_sku,products_location,s_warehouse_id,product_num,assign_num from(
select orders_id,pick_type,products_sku,products_location,s_warehouse_id,product_num,assign_num from assign_a1 
where status=200 and is_span=0 and pick_type=1 and floor='5'
order by products_location,products_sku) a LIMIT ?,?";
PREPARE STMT FROM @slsql;
EXECUTE STMT USING @m,@n;
deallocate prepare STMT;

-- 5F的订单数据组织写入对应表，更新相关标志。非最后一次分配，不满100订单不给分配
IF (select count(*) from assign_dd_5F)=@n
then

-- 根据库存分配表取得订单号，在订单表获取物流ID的结果集
DROP TABLE IF EXISTS a1;
CREATE TEMPORARY table a1 select orders_id from assign_dd_5F;
-- 优化 select @i:=GROUP_CONCAT(DISTINCT shipmentAutoMatched)  From erp_database_newest.erp_orders  where erp_orders_id in(select orders_id from a1);


-- 在库存分配表erp_stock_assign组织数据写入拣货汇总表 erp_pick
INSERT into erp_database_newest.erp_pick(status,type,warehouse,create_time,uid,order_num,sku_num,num,shipment_id,order_type,pick_start_time,pick_end_time,pick_uid,pick_warehouse,pick_user,pick_action_time,pick_status)
select 1 as status,pick_type as type,s_warehouse_id as warehouse,UNIX_TIMESTAMP(NOW()) as create_time,0 as uid,count(distinct orders_id) as order_num,count(distinct products_sku) as sku_num,sum(assign_num) as num,
0 as shipment_id,0 as order_type,0 as pick_start_time,0 as pick_end_time,0 as pick_uid,s_warehouse_id as pick_warehouse,0 as pick_user,0 as pick_action_time,0 as pick_status
from assign_dd_5F;-- 拣货单表


-- 取得拣货汇总表的最大id，在库存分配表erp_stock_assign组织数据写入拣货明细表erp_pick_product
SELECT @maxid:=max(id) from erp_database_newest.erp_pick;

INSERT into erp_pick_product_ls(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select @maxid as pick_id,orders_id,products_sku as product_sku,sum(assign_num) as product_num,0 as scan_num,0 as scan_uid,1 as status,0 as scan_time,UNIX_TIMESTAMP(NOW()) as create_time,0 as return_time,
0 as ship_time,0 as page_num,(@i:=@i+1) as basket_num,0 as ship_uid
from assign_dd_5F,(select @i:=0) as it
GROUP BY orders_id,products_sku;-- 拣货详情表 



-- 在库存分配表erp_stock_assign中查询要分配的任务量，数据组织插入任务汇总表erp_picking_task_new
INSERT into erp_picking_task_new(pick_id,pick_type,sku_num,num,status,pick_user,pick_status,create_time,box,floor,update_time,warehouse,floor_num)
select @maxid as pick_id,pick_type,count(distinct products_sku) as sku_num,sum(assign_num) as num,1 as status,'' as pick_user,0 as pick_status,UNIX_TIMESTAMP(NOW()) as create_time,0 as box,0 as floor,0 as update_time,s_warehouse_id as warehouse,5 as floor_num
from assign_dd_5F;

-- 取得任务汇总表的最大task_id，在库存分配表erp_stock_assign组织数据写入任务明细表erp_picking_task_details_new
SELECT @maxtask_id:=max(task_id) from  erp_picking_task_new;

insert into erp_picking_task_details_new_ls(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
SELECT @maxtask_id as task_id,products_sku,products_location,SUM(product_num) as product_num,0 as actual_num,'' as box,0 as status,'' as pick_user,UNIX_TIMESTAMP(NOW()) as create_time,0 as assign_time,0 as box_status,0 as update_time 
from assign_dd_5F
GROUP BY products_sku,products_location
ORDER BY products_location;

-- 回写 erp_stock_assign 的is_sc标志
-- 优化 update erp_stock_assign set status=300 , task_id=@maxtask_id where orders_id in(select orders_id from a1);
update erp_stock_assign a INNER JOIN a1 b on a.orders_id=b.orders_id set status=300,task_id=@maxtask_id;

-- 临时表也回写标志，减去重复插入数据
-- 优化update assign_a1 set status=300 where orders_id in(select orders_id from a1);
update assign_a1 a INNER JOIN a1 b on a.orders_id=b.orders_id set status=300;

-- 删除临时表
drop table a1;
DROP TABLE assign_dd_5F;
end if;
-- 循环一次减100
set @mdd_5=@mdd_5-@n;

-- 单个任务生成
-- erp_pick_product
INSERT into erp_database_newest.erp_pick_product(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid from erp_pick_product_ls;

-- erp_picking_task_details_new
insert into erp_picking_task_details_new(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
select task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time from erp_picking_task_details_new_ls;

-- 取得订单号
DROP TABLE IF EXISTS erp_pick_product_ls2;
CREATE TEMPORARY table erp_pick_product_ls2
select DISTINCT orders_id,pick_id from erp_pick_product_ls;
-- 写入日志表erp_operate_log
INSERT INTO erp_database_newest.erp_operate_log(operateUser,operateType,operateMod,operateKey,operateText)
select '30','update','ordersManage',orders_id,concat('生成拣货单(',pick_id,')，订单状态变为已打印') from erp_pick_product_ls2;

-- 取得订单分配里面的任务号，更新待发货订单表的标志及任务号
DROP TABLE IF EXISTS order_dd;
CREATE TEMPORARY table order_dd
select distinct a.orders_id,a.task_id,b.pick_id from erp_stock_assign a inner join erp_pick_product_ls2 b on a.orders_id=b.orders_id;
-- 回写订单标志
update erp_database_newest.erp_orders a INNER JOIN erp_pick_product_ls2 b on a.erp_orders_id=b.orders_id 
set a.orders_status=4,a.orders_print_time=now() where a.orders_status=3;

-- 回写待发货订单标志
update stock_out a INNER JOIN order_dd b on a.erp_orders_id=b.orders_id
set a.orders_status=30,a.task_num=b.task_id,a.print_time=UNIX_TIMESTAMP(NOW()),a.pick_id=b.pick_id;

truncate table erp_pick_product_ls;
truncate table erp_picking_task_details_new_ls;

end while;

/* -----------------------单单  6F订单--------------------------------*/
select @mdd_6:=COUNT(*) from assign_a1 where status=200 and is_span=0 and pick_type=1 and floor='6';
while @mdd_6>=@n do 
-- 订单大于100,循环执行写入
DROP TABLE IF EXISTS assign_dd_6F;
-- 单单 获取100个订单生成拣货任务;6F  -- 传入参数
SET @slsql="CREATE TEMPORARY table assign_dd_6F
select orders_id,pick_type,products_sku,products_location,s_warehouse_id,product_num,assign_num from(
select orders_id,pick_type,products_sku,products_location,s_warehouse_id,product_num,assign_num from assign_a1 
where status=200 and is_span=0 and pick_type=1 and floor='6'
order by products_location,products_sku) a LIMIT ?,?";
PREPARE STMT FROM @slsql;
EXECUTE STMT USING @m,@n;
deallocate prepare STMT;

-- 6F的订单数据组织写入对应表，更新相关标志。非最后一次分配，不满100订单不给分配
IF (select count(*) from assign_dd_6F)=@n
then

-- 根据库存分配表取得订单号，在订单表获取物流ID的结果集
DROP TABLE IF EXISTS a1;
CREATE TEMPORARY table a1 select orders_id from assign_dd_6F;
-- 优化 select @i:=GROUP_CONCAT(DISTINCT shipmentAutoMatched)  From erp_database_newest.erp_orders  where erp_orders_id in(select orders_id from a1);


-- 在库存分配表erp_stock_assign组织数据写入拣货汇总表 erp_pick
INSERT into erp_database_newest.erp_pick(status,type,warehouse,create_time,uid,order_num,sku_num,num,shipment_id,order_type,pick_start_time,pick_end_time,pick_uid,pick_warehouse,pick_user,pick_action_time,pick_status)
select 1 as status,pick_type as type,s_warehouse_id as warehouse,UNIX_TIMESTAMP(NOW()) as create_time,0 as uid,count(distinct orders_id) as order_num,count(distinct products_sku) as sku_num,sum(assign_num) as num,
0 as shipment_id,0 as order_type,0 as pick_start_time,0 as pick_end_time,0 as pick_uid,s_warehouse_id as pick_warehouse,0 as pick_user,0 as pick_action_time,0 as pick_status
from assign_dd_6F;-- 拣货单表


-- 取得拣货汇总表的最大id，在库存分配表erp_stock_assign组织数据写入拣货明细表erp_pick_product
SELECT @maxid:=max(id) from erp_database_newest.erp_pick;

INSERT into erp_pick_product_ls(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select @maxid as pick_id,orders_id,products_sku as product_sku,sum(assign_num) as product_num,0 as scan_num,0 as scan_uid,1 as status,0 as scan_time,UNIX_TIMESTAMP(NOW()) as create_time,0 as return_time,
0 as ship_time,0 as page_num,(@i:=@i+1) as basket_num,0 as ship_uid
from assign_dd_6F,(select @i:=0) as it
GROUP BY orders_id,products_sku;-- 拣货详情表 



-- 在库存分配表erp_stock_assign中查询要分配的任务量，数据组织插入任务汇总表erp_picking_task_new
INSERT into erp_picking_task_new(pick_id,pick_type,sku_num,num,status,pick_user,pick_status,create_time,box,floor,update_time,warehouse,floor_num)
select @maxid as pick_id,pick_type,count(distinct products_sku) as sku_num,sum(assign_num) as num,1 as status,'' as pick_user,0 as pick_status,UNIX_TIMESTAMP(NOW()) as create_time,0 as box,0 as floor,0 as update_time,s_warehouse_id as warehouse,6 as floor_num
from assign_dd_6F;

-- 取得任务汇总表的最大task_id，在库存分配表erp_stock_assign组织数据写入任务明细表erp_picking_task_details_new
SELECT @maxtask_id:=max(task_id) from  erp_picking_task_new;

insert into erp_picking_task_details_new_ls(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
SELECT @maxtask_id as task_id,products_sku,products_location,SUM(product_num) as product_num,0 as actual_num,'' as box,0 as status,'' as pick_user,UNIX_TIMESTAMP(NOW()) as create_time,0 as assign_time,0 as box_status,0 as update_time 
from assign_dd_6F
GROUP BY products_sku,products_location
ORDER BY products_location;

-- 回写 erp_stock_assign 的is_sc标志
-- 优化 update erp_stock_assign set status=300 , task_id=@maxtask_id where orders_id in(select orders_id from a1);
update erp_stock_assign a INNER JOIN a1 b on a.orders_id=b.orders_id set status=300,task_id=@maxtask_id;

-- 临时表也回写标志，减去重复插入数据
-- 优化update assign_a1 set status=300 where orders_id in(select orders_id from a1);
update assign_a1 a INNER JOIN a1 b on a.orders_id=b.orders_id set status=300;

-- 删除临时表
drop table a1;
DROP TABLE assign_dd_6F;
end if;
-- 循环一次减100
set @mdd_6=@mdd_6-@n;
-- 单个任务生成
-- erp_pick_product
INSERT into erp_database_newest.erp_pick_product(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid from erp_pick_product_ls;

-- erp_picking_task_details_new
insert into erp_picking_task_details_new(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
select task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time from erp_picking_task_details_new_ls;

-- 取得订单号
DROP TABLE IF EXISTS erp_pick_product_ls2;
CREATE TEMPORARY table erp_pick_product_ls2
select DISTINCT orders_id,pick_id from erp_pick_product_ls;
-- 写入日志表erp_operate_log
INSERT INTO erp_database_newest.erp_operate_log(operateUser,operateType,operateMod,operateKey,operateText)
select '30','update','ordersManage',orders_id,concat('生成拣货单(',pick_id,')，订单状态变为已打印') from erp_pick_product_ls2;

-- 取得订单分配里面的任务号，更新待发货订单表的标志及任务号
DROP TABLE IF EXISTS order_dd;
CREATE TEMPORARY table order_dd
select distinct a.orders_id,a.task_id,b.pick_id from erp_stock_assign a inner join erp_pick_product_ls2 b on a.orders_id=b.orders_id;
-- 回写订单标志
update erp_database_newest.erp_orders a INNER JOIN erp_pick_product_ls2 b on a.erp_orders_id=b.orders_id 
set a.orders_status=4,a.orders_print_time=now() where a.orders_status=3;

-- 回写待发货订单标志
update stock_out a INNER JOIN order_dd b on a.erp_orders_id=b.orders_id
set a.orders_status=30,a.task_num=b.task_id,a.print_time=UNIX_TIMESTAMP(NOW()),a.pick_id=b.pick_id;

truncate table erp_pick_product_ls;
truncate table erp_picking_task_details_new_ls;

end while;

/*---------------------------------*/

/* -----------------------单单  --订单-最后一次分配，不管多少都要分完--------------------------------*/
select @mdd_6zh:=COUNT(*) from assign_a1 where status=200 and pick_type=1;
while @mdd_6zh>=1 do 
-- 订单大于100,循环执行写入
DROP TABLE IF EXISTS assign_dd_zh;
-- 单单 获取100个订单生成拣货任务;
-- 参数传入
SET @slsql="CREATE TEMPORARY table assign_dd_zh
select orders_id,pick_type,products_sku,products_location,s_warehouse_id,product_num,assign_num,floor from(
select orders_id,pick_type,products_sku,products_location,s_warehouse_id,product_num,assign_num,floor from assign_a1 
where status=200 and pick_type=1
order by products_location,products_sku) a LIMIT ?,?";
PREPARE STMT FROM @slsql;
EXECUTE STMT USING @m,@n;
deallocate prepare STMT;

-- 订单数据组织写入对应表，更新相关标志。最后一次分配
IF (select count(*) from assign_dd_zh)>=1
then
-- 根据库存分配表取得订单号，在订单表获取物流ID的结果集
DROP TABLE IF EXISTS a1;
CREATE TEMPORARY table a1 select orders_id from assign_dd_zh;
-- 优化 select @i:=GROUP_CONCAT(DISTINCT shipmentAutoMatched)  From erp_database_newest.erp_orders  where erp_orders_id in(select orders_id from a1);
-- 根据订单分配取得楼层组合
select @i2:=GROUP_CONCAT(DISTINCT floor)  From assign_dd_zh;

-- 在库存分配表erp_stock_assign组织数据写入拣货汇总表 erp_pick
INSERT into erp_database_newest.erp_pick(status,type,warehouse,create_time,uid,order_num,sku_num,num,shipment_id,order_type,pick_start_time,pick_end_time,pick_uid,pick_warehouse,pick_user,pick_action_time,pick_status)
select 1 as status,pick_type as type,s_warehouse_id as warehouse,UNIX_TIMESTAMP(NOW()) as create_time,0 as uid,count(distinct orders_id) as order_num,count(distinct products_sku) as sku_num,sum(assign_num) as num,
0 as shipment_id,0 as order_type,0 as pick_start_time,0 as pick_end_time,0 as pick_uid,s_warehouse_id as pick_warehouse,0 as pick_user,0 as pick_action_time,0 as pick_status
from assign_dd_zh;-- 拣货单表


-- 取得拣货汇总表的最大id，在库存分配表erp_stock_assign组织数据写入拣货明细表erp_pick_product
SELECT @maxid:=max(id) from erp_database_newest.erp_pick;

INSERT into erp_pick_product_ls(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select @maxid as pick_id,orders_id,products_sku as product_sku,sum(assign_num) as product_num,0 as scan_num,0 as scan_uid,1 as status,0 as scan_time,UNIX_TIMESTAMP(NOW()) as create_time,0 as return_time,
0 as ship_time,0 as page_num,(@i:=@i+1) as basket_num,0 as ship_uid
from assign_dd_zh,(select @i:=0) as it
GROUP BY orders_id,products_sku;-- 拣货详情表 



-- 在库存分配表erp_stock_assign中查询要分配的任务量，数据组织插入任务汇总表erp_picking_task_new
INSERT into erp_picking_task_new(pick_id,pick_type,sku_num,num,status,pick_user,pick_status,create_time,box,floor,update_time,warehouse,floor_num)
select @maxid as pick_id,pick_type,count(distinct products_sku) as sku_num,sum(assign_num) as num,1 as status,'' as pick_user,0 as pick_status,UNIX_TIMESTAMP(NOW()) as create_time,0 as box,0 as floor,0 as update_time,s_warehouse_id as warehouse,@i2 as floor_num
from assign_dd_zh;

-- 取得任务汇总表的最大task_id，在库存分配表erp_stock_assign组织数据写入任务明细表erp_picking_task_details_new
SELECT @maxtask_id:=max(task_id) from  erp_picking_task_new;

insert into erp_picking_task_details_new_ls(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
SELECT @maxtask_id as task_id,products_sku,products_location,SUM(product_num) as product_num,0 as actual_num,'' as box,0 as status,'' as pick_user,UNIX_TIMESTAMP(NOW()) as create_time,0 as assign_time,0 as box_status,0 as update_time 
from assign_dd_zh
GROUP BY products_sku,products_location
ORDER BY products_location;

-- 回写 erp_stock_assign 的status标志
-- 优化 update erp_stock_assign set status=300 , task_id=@maxtask_id where orders_id in(select orders_id from a1);
update erp_stock_assign a INNER JOIN a1 b on a.orders_id=b.orders_id set status=300,task_id=@maxtask_id;

-- 临时表也回写标志，减去重复插入数据
-- 优化update assign_a1 set status=300 where orders_id in(select orders_id from a1);
update assign_a1 a INNER JOIN a1 b on a.orders_id=b.orders_id set status=300;

-- 删除临时表
drop table a1;
DROP TABLE assign_dd_zh;
end if;
-- 循环一次减100
set @mdd_6zh=@mdd_6zh-@n;
-- 单个任务生成
-- erp_pick_product
INSERT into erp_database_newest.erp_pick_product(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid from erp_pick_product_ls;

-- erp_picking_task_details_new
insert into erp_picking_task_details_new(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
select task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time from erp_picking_task_details_new_ls;

-- 取得订单号
DROP TABLE IF EXISTS erp_pick_product_ls2;
CREATE TEMPORARY table erp_pick_product_ls2
select DISTINCT orders_id,pick_id from erp_pick_product_ls;
-- 写入日志表erp_operate_log
INSERT INTO erp_database_newest.erp_operate_log(operateUser,operateType,operateMod,operateKey,operateText)
select '30','update','ordersManage',orders_id,concat('生成拣货单(',pick_id,')，订单状态变为已打印') from erp_pick_product_ls2;

-- 取得订单分配里面的任务号，更新待发货订单表的标志及任务号
DROP TABLE IF EXISTS order_dd;
CREATE TEMPORARY table order_dd
select distinct a.orders_id,a.task_id,b.pick_id from erp_stock_assign a inner join erp_pick_product_ls2 b on a.orders_id=b.orders_id;
-- 回写订单标志
update erp_database_newest.erp_orders a INNER JOIN erp_pick_product_ls2 b on a.erp_orders_id=b.orders_id 
set a.orders_status=4,a.orders_print_time=now() where a.orders_status=3;

-- 回写待发货订单标志
update stock_out a INNER JOIN order_dd b on a.erp_orders_id=b.orders_id
set a.orders_status=30,a.task_num=b.task_id,a.print_time=UNIX_TIMESTAMP(NOW()),a.pick_id=b.pick_id;

truncate table erp_pick_product_ls;
truncate table erp_picking_task_details_new_ls;
end while;
/*---------------------------------*/

/* -----------------------单多  4F订单--------不跨区--------------------*/
-- 取得单多的设置参数
select @n2:=value from wms_sys_picktaskrule where Parameter_name='Single' and s_warehouse_id='1035';

select @mdd2_4:=COUNT(*) from assign_a1 where status=200 and is_span=0 and pick_type=2 and floor='4';
while @mdd2_4>=@n2 do 
-- 订单大于40,循环执行写入-- 参数传入
DROP TABLE IF EXISTS a2;
SET @slsql="
CREATE TEMPORARY table a2 
select orders_id
from assign_a1 
where status=200 and is_span=0 and pick_type=2 and floor='4'
GROUP BY orders_id
ORDER BY MAX(products_location)
LIMIT ?,?";
PREPARE STMT FROM @slsql;
EXECUTE STMT USING @m,@n2;
deallocate prepare STMT;

DROP TABLE IF EXISTS assign_dd2_4F;
-- 单单 获取100个订单生成拣货任务;6F
CREATE TEMPORARY table assign_dd2_4F
select orders_id,pick_type,products_sku,products_location,s_warehouse_id,product_num,assign_num from assign_a1 where orders_id in(select orders_id from a2);


-- 6F的订单数据组织写入对应表，更新相关标志。非最后一次分配，不满40订单不给分配
IF (select count(*) from a2)=@n2
then

-- 根据库存分配表取得订单号，在订单表获取物流ID的结果集
-- 优化select @i:=GROUP_CONCAT(DISTINCT shipmentAutoMatched) From erp_database_newest.erp_orders  where erp_orders_id in(select orders_id from a2);


-- 在库存分配表erp_stock_assign组织数据写入拣货汇总表 erp_pick
INSERT into erp_database_newest.erp_pick(status,type,warehouse,create_time,uid,order_num,sku_num,num,shipment_id,order_type,pick_start_time,pick_end_time,pick_uid,pick_warehouse,pick_user,pick_action_time,pick_status)
select 1 as status,pick_type as type,s_warehouse_id as warehouse,UNIX_TIMESTAMP(NOW()) as create_time,0 as uid,count(distinct orders_id) as order_num,count(distinct products_sku) as sku_num,sum(assign_num) as num,
0 as shipment_id,0 as order_type,0 as pick_start_time,0 as pick_end_time,0 as pick_uid,s_warehouse_id as pick_warehouse,0 as pick_user,0 as pick_action_time,0 as pick_status
from assign_dd2_4F;-- 拣货单表


-- 取得拣货汇总表的最大id，在库存分配表erp_stock_assign组织数据写入拣货明细表erp_pick_product
SELECT @maxid:=max(id) from erp_database_newest.erp_pick;

INSERT into erp_pick_product_ls(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select @maxid as pick_id,orders_id,products_sku as product_sku,sum(assign_num) as product_num,0 as scan_num,0 as scan_uid,1 as status,0 as scan_time,UNIX_TIMESTAMP(NOW()) as create_time,0 as return_time,
0 as ship_time,0 as page_num,(@i:=@i+1) as basket_num,0 as ship_uid
from assign_dd2_4F,(select @i:=0) as it
GROUP BY orders_id,products_sku;-- 拣货详情表 



-- 在库存分配表erp_stock_assign中查询要分配的任务量，数据组织插入任务汇总表erp_picking_task_new
INSERT into erp_picking_task_new(pick_id,pick_type,sku_num,num,status,pick_user,pick_status,create_time,box,floor,update_time,warehouse,floor_num)
select @maxid as pick_id,pick_type,count(distinct products_sku) as sku_num,sum(assign_num) as num,1 as status,'' as pick_user,0 as pick_status,UNIX_TIMESTAMP(NOW()) as create_time,0 as box,0 as floor,0 as update_time,s_warehouse_id as warehouse,4 as floor_num
from assign_dd2_4F;

-- 取得任务汇总表的最大task_id，在库存分配表erp_stock_assign组织数据写入任务明细表erp_picking_task_details_new
SELECT @maxtask_id:=max(task_id) from  erp_picking_task_new;

insert into erp_picking_task_details_new_ls(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
SELECT @maxtask_id as task_id,products_sku,products_location,SUM(product_num) as product_num,0 as actual_num,'' as box,0 as status,'' as pick_user,UNIX_TIMESTAMP(NOW()) as create_time,0 as assign_time,0 as box_status,0 as update_time 
from assign_dd2_4F
GROUP BY products_sku,products_location
ORDER BY products_location;

-- 回写 erp_stock_assign 的is_sc标志
-- 优化 update erp_stock_assign set status=300 , task_id=@maxtask_id where orders_id in(select orders_id from a1);
update erp_stock_assign a INNER JOIN a2 b on a.orders_id=b.orders_id set status=300,task_id=@maxtask_id;

-- 临时表也回写标志，减去重复插入数据
-- 优化update assign_a1 set status=300 where orders_id in(select orders_id from a1);
update assign_a1 a INNER JOIN a2 b on a.orders_id=b.orders_id set status=300;


-- 删除临时表
drop table a2;
DROP TABLE assign_dd2_4F;
end if;
-- 循环一次减40 -- 参数传入
set @mdd2_4=@mdd2_4-@n2;
-- 单个任务生成
-- erp_pick_product
INSERT into erp_database_newest.erp_pick_product(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid from erp_pick_product_ls;

-- erp_picking_task_details_new
insert into erp_picking_task_details_new(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
select task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time from erp_picking_task_details_new_ls;

-- 取得订单号
DROP TABLE IF EXISTS erp_pick_product_ls2;
CREATE TEMPORARY table erp_pick_product_ls2
select DISTINCT orders_id,pick_id from erp_pick_product_ls;
-- 写入日志表erp_operate_log
INSERT INTO erp_database_newest.erp_operate_log(operateUser,operateType,operateMod,operateKey,operateText)
select '30','update','ordersManage',orders_id,concat('生成拣货单(',pick_id,')，订单状态变为已打印') from erp_pick_product_ls2;

-- 取得订单分配里面的任务号，更新待发货订单表的标志及任务号
DROP TABLE IF EXISTS order_dd;
CREATE TEMPORARY table order_dd
select distinct a.orders_id,a.task_id,b.pick_id from erp_stock_assign a inner join erp_pick_product_ls2 b on a.orders_id=b.orders_id;
-- 回写订单标志
update erp_database_newest.erp_orders a INNER JOIN erp_pick_product_ls2 b on a.erp_orders_id=b.orders_id 
set a.orders_status=4,a.orders_print_time=now() where a.orders_status=3;

-- 回写待发货订单标志
update stock_out a INNER JOIN order_dd b on a.erp_orders_id=b.orders_id
set a.orders_status=30,a.task_num=b.task_id,a.print_time=UNIX_TIMESTAMP(NOW()),a.pick_id=b.pick_id;

truncate table erp_pick_product_ls;
truncate table erp_picking_task_details_new_ls;
end while;

/* -----------------------单多  5F订单--------不跨区--------------------*/
select @mdd2_5:=COUNT(*) from assign_a1 where status=200 and is_span=0 and pick_type=2 and floor='5';
while @mdd2_5>=@n2 do 
-- 订单大于40,循环执行写入 -- 参数传入
DROP TABLE IF EXISTS a2;
SET @slsql="
CREATE TEMPORARY table a2 
select orders_id
from assign_a1 
where status=200 and is_span=0 and pick_type=2 and  floor='5'
GROUP BY orders_id
ORDER BY MAX(products_location)
LIMIT ?,?";
PREPARE STMT FROM @slsql;
EXECUTE STMT USING @m,@n2;
deallocate prepare STMT;


DROP TABLE IF EXISTS assign_dd2_5F;
-- 单单 获取100个订单生成拣货任务;6F
CREATE TEMPORARY table assign_dd2_5F
select orders_id,pick_type,products_sku,products_location,s_warehouse_id,product_num,assign_num from assign_a1 where orders_id in(select orders_id from a2);


-- 6F的订单数据组织写入对应表，更新相关标志。非最后一次分配，不满100订单不给分配
IF (select count(*) from a2)=@n2
then

-- 根据库存分配表取得订单号，在订单表获取物流ID的结果集
-- 优化 select @i:=GROUP_CONCAT(DISTINCT shipmentAutoMatched) From erp_database_newest.erp_orders  where erp_orders_id in(select orders_id from a2);


-- 在库存分配表erp_stock_assign组织数据写入拣货汇总表 erp_pick
INSERT into erp_database_newest.erp_pick(status,type,warehouse,create_time,uid,order_num,sku_num,num,shipment_id,order_type,pick_start_time,pick_end_time,pick_uid,pick_warehouse,pick_user,pick_action_time,pick_status)
select 1 as status,pick_type as type,s_warehouse_id as warehouse,UNIX_TIMESTAMP(NOW()) as create_time,0 as uid,count(distinct orders_id) as order_num,count(distinct products_sku) as sku_num,sum(assign_num) as num,
0 as shipment_id,0 as order_type,0 as pick_start_time,0 as pick_end_time,0 as pick_uid,s_warehouse_id as pick_warehouse,0 as pick_user,0 as pick_action_time,0 as pick_status
from assign_dd2_5F;-- 拣货单表


-- 取得拣货汇总表的最大id，在库存分配表erp_stock_assign组织数据写入拣货明细表erp_pick_product
SELECT @maxid:=max(id) from erp_database_newest.erp_pick;

INSERT into erp_pick_product_ls(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select @maxid as pick_id,orders_id,products_sku as product_sku,sum(assign_num) as product_num,0 as scan_num,0 as scan_uid,1 as status,0 as scan_time,UNIX_TIMESTAMP(NOW()) as create_time,0 as return_time,
0 as ship_time,0 as page_num,(@i:=@i+1) as basket_num,0 as ship_uid
from assign_dd2_5F,(select @i:=0) as it
GROUP BY orders_id,products_sku;-- 拣货详情表 



-- 在库存分配表erp_stock_assign中查询要分配的任务量，数据组织插入任务汇总表erp_picking_task_new
INSERT into erp_picking_task_new(pick_id,pick_type,sku_num,num,status,pick_user,pick_status,create_time,box,floor,update_time,warehouse,floor_num)
select @maxid as pick_id,pick_type,count(distinct products_sku) as sku_num,sum(assign_num) as num,1 as status,'' as pick_user,0 as pick_status,UNIX_TIMESTAMP(NOW()) as create_time,0 as box,0 as floor,0 as update_time,s_warehouse_id as warehouse,5 as floor_num
from assign_dd2_5F;

-- 取得任务汇总表的最大task_id，在库存分配表erp_stock_assign组织数据写入任务明细表erp_picking_task_details_new
SELECT @maxtask_id:=max(task_id) from  erp_picking_task_new;

insert into erp_picking_task_details_new_ls(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
SELECT @maxtask_id as task_id,products_sku,products_location,SUM(product_num) as product_num,0 as actual_num,'' as box,0 as status,'' as pick_user,UNIX_TIMESTAMP(NOW()) as create_time,0 as assign_time,0 as box_status,0 as update_time 
from assign_dd2_5F
GROUP BY products_sku,products_location
ORDER BY products_location;

-- 回写 erp_stock_assign 的is_sc标志
-- 优化 update erp_stock_assign set status=300 , task_id=@maxtask_id where orders_id in(select orders_id from a1);
update erp_stock_assign a INNER JOIN a2 b on a.orders_id=b.orders_id set status=300,task_id=@maxtask_id;

-- 临时表也回写标志，减去重复插入数据
-- 优化update assign_a1 set status=300 where orders_id in(select orders_id from a1);
update assign_a1 a INNER JOIN a2 b on a.orders_id=b.orders_id set status=300;


-- 删除临时表
drop table a2;
DROP TABLE assign_dd2_5F;
end if;
-- 循环一次减40 -- 参数传入
set @mdd2_5=@mdd2_5-@n2;
-- 单个任务生成
-- erp_pick_product
INSERT into erp_database_newest.erp_pick_product(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid from erp_pick_product_ls;

-- erp_picking_task_details_new
insert into erp_picking_task_details_new(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
select task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time from erp_picking_task_details_new_ls;

-- 取得订单号
DROP TABLE IF EXISTS erp_pick_product_ls2;
CREATE TEMPORARY table erp_pick_product_ls2
select DISTINCT orders_id,pick_id from erp_pick_product_ls;
-- 写入日志表erp_operate_log
INSERT INTO erp_database_newest.erp_operate_log(operateUser,operateType,operateMod,operateKey,operateText)
select '30','update','ordersManage',orders_id,concat('生成拣货单(',pick_id,')，订单状态变为已打印') from erp_pick_product_ls2;

-- 取得订单分配里面的任务号，更新待发货订单表的标志及任务号
DROP TABLE IF EXISTS order_dd;
CREATE TEMPORARY table order_dd
select distinct a.orders_id,a.task_id,b.pick_id from erp_stock_assign a inner join erp_pick_product_ls2 b on a.orders_id=b.orders_id;
-- 回写订单标志
update erp_database_newest.erp_orders a INNER JOIN erp_pick_product_ls2 b on a.erp_orders_id=b.orders_id 
set a.orders_status=4,a.orders_print_time=now() where a.orders_status=3;

-- 回写待发货订单标志
update stock_out a INNER JOIN order_dd b on a.erp_orders_id=b.orders_id
set a.orders_status=30,a.task_num=b.task_id,a.print_time=UNIX_TIMESTAMP(NOW()),a.pick_id=b.pick_id;

truncate table erp_pick_product_ls;
truncate table erp_picking_task_details_new_ls;
end while;


/* -----------------------单多  6F订单---不跨区-----------------------*/
select @mdd2_6:=COUNT(*) from assign_a1 where status=200 and is_span=0 and pick_type=2 and floor='6';
while @mdd2_6>=@n2 do 
-- 订单大于40,循环执行写入
DROP TABLE IF EXISTS a2;
-- 参数传入
SET @slsql="
CREATE TEMPORARY table a2 
select orders_id
from assign_a1 
where status=200 and is_span=0 and pick_type=2 and floor='6'
GROUP BY orders_id
ORDER BY MAX(products_location)
LIMIT ?,?";
PREPARE STMT FROM @slsql;
EXECUTE STMT USING @m,@n2;
deallocate prepare STMT;

DROP TABLE IF EXISTS assign_dd2_6F;
-- 单单 获取100个订单生成拣货任务;6F
CREATE TEMPORARY table assign_dd2_6F
select orders_id,pick_type,products_sku,products_location,s_warehouse_id,product_num,assign_num from assign_a1 where orders_id in(select orders_id from a2);


-- 订单数据组织写入对应表，更新相关标志。非最后一次分配，不满100订单不给分配
IF (select count(*) from a2)=@n2
then

-- 根据库存分配表取得订单号，在订单表获取物流ID的结果集
-- 优化select @i:=GROUP_CONCAT(DISTINCT shipmentAutoMatched) From erp_database_newest.erp_orders  where erp_orders_id in(select orders_id from a2);


-- 在库存分配表erp_stock_assign组织数据写入拣货汇总表 erp_pick
INSERT into erp_database_newest.erp_pick(status,type,warehouse,create_time,uid,order_num,sku_num,num,shipment_id,order_type,pick_start_time,pick_end_time,pick_uid,pick_warehouse,pick_user,pick_action_time,pick_status)
select 1 as status,pick_type as type,s_warehouse_id as warehouse,UNIX_TIMESTAMP(NOW()) as create_time,0 as uid,count(distinct orders_id) as order_num,count(distinct products_sku) as sku_num,sum(assign_num) as num,
0 as shipment_id,0 as order_type,0 as pick_start_time,0 as pick_end_time,0 as pick_uid,s_warehouse_id as pick_warehouse,0 as pick_user,0 as pick_action_time,0 as pick_status
from assign_dd2_6F;-- 拣货单表


-- 取得拣货汇总表的最大id，在库存分配表erp_stock_assign组织数据写入拣货明细表erp_pick_product
SELECT @maxid:=max(id) from erp_database_newest.erp_pick;

INSERT into erp_pick_product_ls(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select @maxid as pick_id,orders_id,products_sku as product_sku,sum(assign_num) as product_num,0 as scan_num,0 as scan_uid,1 as status,0 as scan_time,UNIX_TIMESTAMP(NOW()) as create_time,0 as return_time,
0 as ship_time,0 as page_num,(@i:=@i+1) as basket_num,0 as ship_uid
from assign_dd2_6F,(select @i:=0) as it
GROUP BY orders_id,products_sku;-- 拣货详情表 



-- 在库存分配表erp_stock_assign中查询要分配的任务量，数据组织插入任务汇总表erp_picking_task_new
INSERT into erp_picking_task_new(pick_id,pick_type,sku_num,num,status,pick_user,pick_status,create_time,box,floor,update_time,warehouse,floor_num)
select @maxid as pick_id,pick_type,count(distinct products_sku) as sku_num,sum(assign_num) as num,1 as status,'' as pick_user,0 as pick_status,UNIX_TIMESTAMP(NOW()) as create_time,0 as box,0 as floor,0 as update_time,s_warehouse_id as warehouse,6 as floor_num
from assign_dd2_6F;

-- 取得任务汇总表的最大task_id，在库存分配表erp_stock_assign组织数据写入任务明细表erp_picking_task_details_new
SELECT @maxtask_id:=max(task_id) from  erp_picking_task_new;

insert into erp_picking_task_details_new_ls(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
SELECT @maxtask_id as task_id,products_sku,products_location,SUM(product_num) as product_num,0 as actual_num,'' as box,0 as status,'' as pick_user,UNIX_TIMESTAMP(NOW()) as create_time,0 as assign_time,0 as box_status,0 as update_time 
from assign_dd2_6F
GROUP BY products_sku,products_location
ORDER BY products_location;

-- 回写 erp_stock_assign 的is_sc标志
-- 优化 update erp_stock_assign set status=300 , task_id=@maxtask_id where orders_id in(select orders_id from a1);
update erp_stock_assign a INNER JOIN a2 b on a.orders_id=b.orders_id set status=300,task_id=@maxtask_id;

-- 临时表也回写标志，减去重复插入数据
-- 优化update assign_a1 set status=300 where orders_id in(select orders_id from a1);
update assign_a1 a INNER JOIN a2 b on a.orders_id=b.orders_id set status=300;


-- 删除临时表
drop table a2;
DROP TABLE assign_dd2_6F;
end if;
-- 循环一次减40
set @mdd2_6=@mdd2_6-@n2;
-- 单个任务生成
-- erp_pick_product
INSERT into erp_database_newest.erp_pick_product(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid from erp_pick_product_ls;

-- erp_picking_task_details_new
insert into erp_picking_task_details_new(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
select task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time from erp_picking_task_details_new_ls;

-- 取得订单号
DROP TABLE IF EXISTS erp_pick_product_ls2;
CREATE TEMPORARY table erp_pick_product_ls2
select DISTINCT orders_id,pick_id from erp_pick_product_ls;
-- 写入日志表erp_operate_log
INSERT INTO erp_database_newest.erp_operate_log(operateUser,operateType,operateMod,operateKey,operateText)
select '30','update','ordersManage',orders_id,concat('生成拣货单(',pick_id,')，订单状态变为已打印') from erp_pick_product_ls2;

-- 取得订单分配里面的任务号，更新待发货订单表的标志及任务号
DROP TABLE IF EXISTS order_dd;
CREATE TEMPORARY table order_dd
select distinct a.orders_id,a.task_id,b.pick_id from erp_stock_assign a inner join erp_pick_product_ls2 b on a.orders_id=b.orders_id;
-- 回写订单标志
update erp_database_newest.erp_orders a INNER JOIN erp_pick_product_ls2 b on a.erp_orders_id=b.orders_id 
set a.orders_status=4,a.orders_print_time=now() where a.orders_status=3;

-- 回写待发货订单标志
update stock_out a INNER JOIN order_dd b on a.erp_orders_id=b.orders_id
set a.orders_status=30,a.task_num=b.task_id,a.print_time=UNIX_TIMESTAMP(NOW()),a.pick_id=b.pick_id;

truncate table erp_pick_product_ls;
truncate table erp_picking_task_details_new_ls;
end while;

/* -----------------------单多  订单---跨区-----------------------*/
select @mdd2:=COUNT(*) from assign_a1 where status=200 and is_span=1 and pick_type=2;
while @mdd2>=@n2 do 
-- 订单大于40,循环执行写入
DROP TABLE IF EXISTS a2;
-- 参数传入
SET @slsql="
CREATE TEMPORARY table a2 
select orders_id
from assign_a1 
where status=200 and is_span=1 and pick_type=2
GROUP BY orders_id
ORDER BY MAX(products_location)
LIMIT ?,?";
PREPARE STMT FROM @slsql;
EXECUTE STMT USING @m,@n2;
deallocate prepare STMT;

DROP TABLE IF EXISTS assign_dd2_kq;
-- 单
CREATE TEMPORARY table assign_dd2_kq
select orders_id,pick_type,products_sku,products_location,s_warehouse_id,product_num,assign_num,floor from assign_a1 where orders_id in(select orders_id from a2);


-- 订单数据组织写入对应表，更新相关标志。非最后一次分配，不满40订单不给分配
IF (select count(*) from a2)=@n2
then

-- 根据库存分配表取得订单号，在订单表获取物流ID的结果集
-- 优化select @i:=GROUP_CONCAT(DISTINCT shipmentAutoMatched) From erp_database_newest.erp_orders  where erp_orders_id in(select orders_id from a2);
-- 根据订单分配取得楼层组合
select @i2=GROUP_CONCAT(DISTINCT floor) from assign_dd2_kq;

-- 在库存分配表erp_stock_assign组织数据写入拣货汇总表 erp_pick
INSERT into erp_database_newest.erp_pick(status,type,warehouse,create_time,uid,order_num,sku_num,num,shipment_id,order_type,pick_start_time,pick_end_time,pick_uid,pick_warehouse,pick_user,pick_action_time,pick_status)
select 1 as status,pick_type as type,s_warehouse_id as warehouse,UNIX_TIMESTAMP(NOW()) as create_time,0 as uid,count(distinct orders_id) as order_num,count(distinct products_sku) as sku_num,sum(assign_num) as num,
0 as shipment_id,0 as order_type,0 as pick_start_time,0 as pick_end_time,0 as pick_uid,s_warehouse_id as pick_warehouse,0 as pick_user,0 as pick_action_time,0 as pick_status
from assign_dd2_kq;-- 拣货单表


-- 取得拣货汇总表的最大id，在库存分配表erp_stock_assign组织数据写入拣货明细表erp_pick_product
SELECT @maxid:=max(id) from erp_database_newest.erp_pick;

INSERT into erp_pick_product_ls(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select @maxid as pick_id,orders_id,products_sku as product_sku,sum(assign_num) as product_num,0 as scan_num,0 as scan_uid,1 as status,0 as scan_time,UNIX_TIMESTAMP(NOW()) as create_time,0 as return_time,
0 as ship_time,0 as page_num,(@i:=@i+1) as basket_num,0 as ship_uid
from assign_dd2_kq,(select @i:=0) as it
GROUP BY orders_id,products_sku;-- 拣货详情表 



-- 在库存分配表erp_stock_assign中查询要分配的任务量，数据组织插入任务汇总表erp_picking_task_new
INSERT into erp_picking_task_new(pick_id,pick_type,sku_num,num,status,pick_user,pick_status,create_time,box,floor,update_time,warehouse,floor_num)
select @maxid as pick_id,pick_type,count(distinct products_sku) as sku_num,sum(assign_num) as num,1 as status,'' as pick_user,0 as pick_status,UNIX_TIMESTAMP(NOW()) as create_time,0 as box,0 as floor,0 as update_time,s_warehouse_id as warehouse,@i2 as floor_num
from assign_dd2_kq;

-- 取得任务汇总表的最大task_id，在库存分配表erp_stock_assign组织数据写入任务明细表erp_picking_task_details_new
SELECT @maxtask_id:=max(task_id) from  erp_picking_task_new;

insert into erp_picking_task_details_new_ls(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
SELECT @maxtask_id as task_id,products_sku,products_location,SUM(product_num) as product_num,0 as actual_num,'' as box,0 as status,'' as pick_user,UNIX_TIMESTAMP(NOW()) as create_time,0 as assign_time,0 as box_status,0 as update_time 
from assign_dd2_kq
GROUP BY products_sku,products_location
ORDER BY products_location;

-- 回写 erp_stock_assign 的is_sc标志
-- 优化 update erp_stock_assign set status=300 , task_id=@maxtask_id where orders_id in(select orders_id from a1);
update erp_stock_assign a INNER JOIN a2 b on a.orders_id=b.orders_id set status=300,task_id=@maxtask_id;

-- 临时表也回写标志，减去重复插入数据
-- 优化update assign_a1 set status=300 where orders_id in(select orders_id from a1);
update assign_a1 a INNER JOIN a2 b on a.orders_id=b.orders_id set status=300;


-- 删除临时表
drop table a2;
DROP TABLE assign_dd2_kq;
end if;
-- 循环一次减40
set @mdd2=@mdd2-@n2;
-- 单个任务生成
-- erp_pick_product
INSERT into erp_database_newest.erp_pick_product(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid from erp_pick_product_ls;

-- erp_picking_task_details_new
insert into erp_picking_task_details_new(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
select task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time from erp_picking_task_details_new_ls;

-- 取得订单号
DROP TABLE IF EXISTS erp_pick_product_ls2;
CREATE TEMPORARY table erp_pick_product_ls2
select DISTINCT orders_id,pick_id from erp_pick_product_ls;
-- 写入日志表erp_operate_log
INSERT INTO erp_database_newest.erp_operate_log(operateUser,operateType,operateMod,operateKey,operateText)
select '30','update','ordersManage',orders_id,concat('生成拣货单(',pick_id,')，订单状态变为已打印') from erp_pick_product_ls2;

-- 取得订单分配里面的任务号，更新待发货订单表的标志及任务号
DROP TABLE IF EXISTS order_dd;
CREATE TEMPORARY table order_dd
select distinct a.orders_id,a.task_id,b.pick_id from erp_stock_assign a inner join erp_pick_product_ls2 b on a.orders_id=b.orders_id;
-- 回写订单标志
update erp_database_newest.erp_orders a INNER JOIN erp_pick_product_ls2 b on a.erp_orders_id=b.orders_id 
set a.orders_status=4,a.orders_print_time=now() where a.orders_status=3;

-- 回写待发货订单标志
update stock_out a INNER JOIN order_dd b on a.erp_orders_id=b.orders_id
set a.orders_status=30,a.task_num=b.task_id,a.print_time=UNIX_TIMESTAMP(NOW()),a.pick_id=b.pick_id;

truncate table erp_pick_product_ls;
truncate table erp_picking_task_details_new_ls;
end while;

/* -----------------------单多  订单---最后一次分配，不管多少都要分完-----------------------*/
select @mdd2_zh:=COUNT(*) from assign_a1 where status=200 and pick_type=2;
while @mdd2_zh>=1 do 
-- 订单大于40,循环执行写入
DROP TABLE IF EXISTS a2;
-- 参数传入
SET @slsql="CREATE TEMPORARY table a2 
select orders_id
from assign_a1 
where status=200 and pick_type=2
GROUP BY orders_id
ORDER BY MAX(products_location)
LIMIT ?,?";
PREPARE STMT FROM @slsql;
EXECUTE STMT USING @m,@n2;
deallocate prepare STMT;

DROP TABLE IF EXISTS assign_dd2_kq2;
-- 单
CREATE TEMPORARY table assign_dd2_kq2
select orders_id,pick_type,products_sku,products_location,s_warehouse_id,product_num,assign_num,floor from assign_a1 where orders_id in(select orders_id from a2);


-- 订单数据组织写入对应表，更新相关标志。最后一次分配
IF (select count(*) from a2)>=1
then
-- 根据库存分配表取得订单号，在订单表获取物流ID的结果集
-- 优化select @i:=GROUP_CONCAT(DISTINCT shipmentAutoMatched) From erp_database_newest.erp_orders  where erp_orders_id in(select orders_id from a2);
-- 根据订单分配取得楼层组合
select @i2=GROUP_CONCAT(DISTINCT floor) from assign_dd2_kq2;

-- 在库存分配表erp_stock_assign组织数据写入拣货汇总表 erp_pick
INSERT into erp_database_newest.erp_pick(status,type,warehouse,create_time,uid,order_num,sku_num,num,shipment_id,order_type,pick_start_time,pick_end_time,pick_uid,pick_warehouse,pick_user,pick_action_time,pick_status)
select 1 as status,pick_type as type,s_warehouse_id as warehouse,UNIX_TIMESTAMP(NOW()) as create_time,0 as uid,count(distinct orders_id) as order_num,count(distinct products_sku) as sku_num,sum(assign_num) as num,
0 as shipment_id,0 as order_type,0 as pick_start_time,0 as pick_end_time,0 as pick_uid,s_warehouse_id as pick_warehouse,0 as pick_user,0 as pick_action_time,0 as pick_status
from assign_dd2_kq2;-- 拣货单表


-- 取得拣货汇总表的最大id，在库存分配表erp_stock_assign组织数据写入拣货明细表erp_pick_product
SELECT @maxid:=max(id) from erp_database_newest.erp_pick;

INSERT into erp_pick_product_ls(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select @maxid as pick_id,orders_id,products_sku as product_sku,sum(assign_num) as product_num,0 as scan_num,0 as scan_uid,1 as status,0 as scan_time,UNIX_TIMESTAMP(NOW()) as create_time,0 as return_time,
0 as ship_time,0 as page_num,(@i:=@i+1) as basket_num,0 as ship_uid
from assign_dd2_kq2,(select @i:=0) as it
GROUP BY orders_id,products_sku;-- 拣货详情表 



-- 在库存分配表erp_stock_assign中查询要分配的任务量，数据组织插入任务汇总表erp_picking_task_new
INSERT into erp_picking_task_new(pick_id,pick_type,sku_num,num,status,pick_user,pick_status,create_time,box,floor,update_time,warehouse,floor_num)
select @maxid as pick_id,pick_type,count(distinct products_sku) as sku_num,sum(assign_num) as num,1 as status,'' as pick_user,0 as pick_status,UNIX_TIMESTAMP(NOW()) as create_time,0 as box,0 as floor,0 as update_time,s_warehouse_id as warehouse,@i2 as floor_num
from assign_dd2_kq2;

-- 取得任务汇总表的最大task_id，在库存分配表erp_stock_assign组织数据写入任务明细表erp_picking_task_details_new
SELECT @maxtask_id:=max(task_id) from  erp_picking_task_new;

insert into erp_picking_task_details_new_ls(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
SELECT @maxtask_id as task_id,products_sku,products_location,SUM(product_num) as product_num,0 as actual_num,'' as box,0 as status,'' as pick_user,UNIX_TIMESTAMP(NOW()) as create_time,0 as assign_time,0 as box_status,0 as update_time 
from assign_dd2_kq2
GROUP BY products_sku,products_location
ORDER BY products_location;

-- 回写 erp_stock_assign 的status标志
-- 优化 update erp_stock_assign set status=300 , task_id=@maxtask_id where orders_id in(select orders_id from a1);
update erp_stock_assign a INNER JOIN a2 b on a.orders_id=b.orders_id set status=300,task_id=@maxtask_id;

-- 临时表也回写标志，减去重复插入数据
-- 优化update assign_a1 set status=300 where orders_id in(select orders_id from a1);
update assign_a1 a INNER JOIN a2 b on a.orders_id=b.orders_id set status=300;

-- 删除临时表
drop table a2;
DROP TABLE assign_dd2_kq2;
end if;
-- 循环一次减40
set @mdd2_zh=@mdd2_zh-@n2;
-- 单个任务生成
-- erp_pick_product
INSERT into erp_database_newest.erp_pick_product(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid from erp_pick_product_ls;

-- erp_picking_task_details_new
insert into erp_picking_task_details_new(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
select task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time from erp_picking_task_details_new_ls;

-- 取得订单号
DROP TABLE IF EXISTS erp_pick_product_ls2;
CREATE TEMPORARY table erp_pick_product_ls2
select DISTINCT orders_id,pick_id from erp_pick_product_ls;
-- 写入日志表erp_operate_log
INSERT INTO erp_database_newest.erp_operate_log(operateUser,operateType,operateMod,operateKey,operateText)
select '30','update','ordersManage',orders_id,concat('生成拣货单(',pick_id,')，订单状态变为已打印') from erp_pick_product_ls2;

-- 取得订单分配里面的任务号，更新待发货订单表的标志及任务号
DROP TABLE IF EXISTS order_dd;
CREATE TEMPORARY table order_dd
select distinct a.orders_id,a.task_id,b.pick_id from erp_stock_assign a inner join erp_pick_product_ls2 b on a.orders_id=b.orders_id;
-- 回写订单标志
update erp_database_newest.erp_orders a INNER JOIN erp_pick_product_ls2 b on a.erp_orders_id=b.orders_id 
set a.orders_status=4,a.orders_print_time=now() where a.orders_status=3;

-- 回写待发货订单标志
update stock_out a INNER JOIN order_dd b on a.erp_orders_id=b.orders_id
set a.orders_status=30,a.task_num=b.task_id,a.print_time=UNIX_TIMESTAMP(NOW()),a.pick_id=b.pick_id;

truncate table erp_pick_product_ls;
truncate table erp_picking_task_details_new_ls;
end while;


/* -----------------------多多  4F订单--------不跨区--------------------*/
-- 取得多多的设置参数
select @n3:=value from wms_sys_picktaskrule where Parameter_name='Much' and s_warehouse_id='1035';

select @mdd3_4:=COUNT(*) from assign_a1 where status=200 and is_span=0 and pick_type=3 and floor='4';
while @mdd3_4>=@n3 do 
-- 订单大于40,循环执行写入
DROP TABLE IF EXISTS a3;
-- 取得多多4楼的前40订单
-- 参数传入
SET @slsql="
CREATE TEMPORARY table a3 
select orders_id
from assign_a1 
where status=200 and is_span=0 and pick_type=3 and floor='4'
GROUP BY orders_id
ORDER BY MAX(products_location)
LIMIT ?,?";
PREPARE STMT FROM @slsql;
EXECUTE STMT USING @m,@n3;
deallocate prepare STMT;
-- 取得订单的篮子号
DROP TABLE IF EXISTS a3_1;
CREATE TEMPORARY table a3_1
select orders_id,(@i:=@i+1) as basket_num from a3,(select @i:=0) as it;

DROP TABLE IF EXISTS assign_dd3_4F;
-- 
CREATE TEMPORARY table assign_dd3_4F
select b.basket_num,a.orders_id,a.pick_type,a.status,a.products_sku,a.products_location,a.s_warehouse_id,a.product_num,a.assign_num,a.is_span
from assign_a1 a INNER JOIN a3_1 b ON a.orders_id=b.orders_id;

-- 订单数据组织写入对应表，更新相关标志。非最后一次分配，不满40订单不给分配
IF (select count(*) from a3)=@n3
then

-- 根据库存分配表取得订单号，在订单表获取物流ID的结果集
-- 优化select @i:=GROUP_CONCAT(DISTINCT shipmentAutoMatched) From erp_database_newest.erp_orders where erp_orders_id in(select orders_id from a3);


-- 在库存分配表erp_stock_assign组织数据写入拣货汇总表 erp_pick
INSERT into erp_database_newest.erp_pick(status,type,warehouse,create_time,uid,order_num,sku_num,num,shipment_id,order_type,pick_start_time,pick_end_time,pick_uid,pick_warehouse,pick_user,pick_action_time,pick_status)
select 1 as status,pick_type as type,s_warehouse_id as warehouse,UNIX_TIMESTAMP(NOW()) as create_time,0 as uid,count(distinct orders_id) as order_num,count(distinct products_sku) as sku_num,sum(assign_num) as num,
0 as shipment_id,0 as order_type,0 as pick_start_time,0 as pick_end_time,0 as pick_uid,s_warehouse_id as pick_warehouse,0 as pick_user,0 as pick_action_time,0 as pick_status
from assign_dd3_4F;-- 拣货单表


-- 取得拣货汇总表的最大id，在库存分配表erp_stock_assign组织数据写入拣货明细表erp_pick_product
SELECT @maxid:=max(id) from erp_database_newest.erp_pick;

INSERT into erp_pick_product_ls(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select @maxid as pick_id,orders_id,products_sku as product_sku,sum(assign_num) as product_num,0 as scan_num,0 as scan_uid,1 as status,0 as scan_time,UNIX_TIMESTAMP(NOW()) as create_time,0 as return_time,
0 as ship_time,0 as page_num,basket_num,0 as ship_uid
from assign_dd3_4F
GROUP BY orders_id,products_sku;-- 拣货详情表 



-- 在库存分配表erp_stock_assign中查询要分配的任务量，数据组织插入任务汇总表erp_picking_task_new
INSERT into erp_picking_task_new(pick_id,pick_type,sku_num,num,status,pick_user,pick_status,create_time,box,floor,update_time,warehouse,floor_num)
select @maxid as pick_id,pick_type,count(distinct products_sku) as sku_num,sum(assign_num) as num,1 as status,'' as pick_user,0 as pick_status,UNIX_TIMESTAMP(NOW()) as create_time,0 as box,0 as floor,0 as update_time,s_warehouse_id as warehouse,4 as floor_num
from assign_dd3_4F;

-- 取得任务汇总表的最大task_id，在库存分配表erp_stock_assign组织数据写入任务明细表erp_picking_task_details_new
SELECT @maxtask_id:=max(task_id) from  erp_picking_task_new;

insert into erp_picking_task_details_new_ls(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
SELECT @maxtask_id as task_id,products_sku,products_location,SUM(product_num) as product_num,0 as actual_num,'' as box,0 as status,'' as pick_user,UNIX_TIMESTAMP(NOW()) as create_time,0 as assign_time,0 as box_status,0 as update_time 
from assign_dd3_4F
GROUP BY products_sku,products_location
ORDER BY products_location;

-- 回写 erp_stock_assign 的is_sc标志
-- 优化 update erp_stock_assign set status=300 , task_id=@maxtask_id where orders_id in(select orders_id from a1);
update erp_stock_assign a INNER JOIN a3 b on a.orders_id=b.orders_id set status=300,task_id=@maxtask_id;

-- 临时表也回写标志，减去重复插入数据
-- 优化update assign_a1 set status=300 where orders_id in(select orders_id from a1);
update assign_a1 a INNER JOIN a3 b on a.orders_id=b.orders_id set status=300;

-- 删除临时表
drop table a3;
drop table a3_1;
DROP TABLE assign_dd3_4F;
end if;
-- 循环一次减40
set @mdd3_4=@mdd3_4-@n3;
-- 单个任务生成
-- erp_pick_product
INSERT into erp_database_newest.erp_pick_product(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid from erp_pick_product_ls;

-- erp_picking_task_details_new
insert into erp_picking_task_details_new(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
select task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time from erp_picking_task_details_new_ls;

-- 取得订单号
DROP TABLE IF EXISTS erp_pick_product_ls2;
CREATE TEMPORARY table erp_pick_product_ls2
select DISTINCT orders_id,pick_id from erp_pick_product_ls;
-- 写入日志表erp_operate_log
INSERT INTO erp_database_newest.erp_operate_log(operateUser,operateType,operateMod,operateKey,operateText)
select '30','update','ordersManage',orders_id,concat('生成拣货单(',pick_id,')，订单状态变为已打印') from erp_pick_product_ls2;

-- 取得订单分配里面的任务号，更新待发货订单表的标志及任务号
DROP TABLE IF EXISTS order_dd;
CREATE TEMPORARY table order_dd
select distinct a.orders_id,a.task_id,b.pick_id from erp_stock_assign a inner join erp_pick_product_ls2 b on a.orders_id=b.orders_id;
-- 回写订单标志
update erp_database_newest.erp_orders a INNER JOIN erp_pick_product_ls2 b on a.erp_orders_id=b.orders_id 
set a.orders_status=4,a.orders_print_time=now() where a.orders_status=3;

-- 回写待发货订单标志
update stock_out a INNER JOIN order_dd b on a.erp_orders_id=b.orders_id
set a.orders_status=30,a.task_num=b.task_id,a.print_time=UNIX_TIMESTAMP(NOW()),a.pick_id=b.pick_id;

truncate table erp_pick_product_ls;
truncate table erp_picking_task_details_new_ls;
end while;

/* -----------------------多多  5F订单--------不跨区--------------------*/
select @mdd3_5:=COUNT(*) from assign_a1 where status=200 and is_span=0 and pick_type=3 and floor='5';
while @mdd3_5>=@n3 do 
-- 订单大于40,循环执行写入
DROP TABLE IF EXISTS a3;
-- 取得多多5楼的前40订单
-- 参数传入
SET @slsql="
CREATE TEMPORARY table a3 
select orders_id
from assign_a1 
where status=200 and is_span=0 and pick_type=3 and floor='5'
GROUP BY orders_id
ORDER BY MAX(products_location)
LIMIT ?,?";
PREPARE STMT FROM @slsql;
EXECUTE STMT USING @m,@n3;
deallocate prepare STMT;

-- 取得订单的篮子号
DROP TABLE IF EXISTS a3_1;
CREATE TEMPORARY table a3_1
select orders_id,(@i:=@i+1) as basket_num from a3,(select @i:=0) as it;

DROP TABLE IF EXISTS assign_dd3_5F;
-- 
CREATE TEMPORARY table assign_dd3_5F
select b.basket_num,a.orders_id,a.pick_type,a.status,a.products_sku,a.products_location,a.s_warehouse_id,a.product_num,a.assign_num,a.is_span
from assign_a1 a INNER JOIN a3_1 b ON a.orders_id=b.orders_id;

-- 订单数据组织写入对应表，更新相关标志。非最后一次分配，不满40订单不给分配
IF (select count(*) from a3)=@n3
then

-- 根据库存分配表取得订单号，在订单表获取物流ID的结果集
-- 优化select @i:=GROUP_CONCAT(DISTINCT shipmentAutoMatched) From erp_database_newest.erp_orders  where erp_orders_id in(select orders_id from a3);


-- 在库存分配表erp_stock_assign组织数据写入拣货汇总表 erp_pick
INSERT into erp_database_newest.erp_pick(status,type,warehouse,create_time,uid,order_num,sku_num,num,shipment_id,order_type,pick_start_time,pick_end_time,pick_uid,pick_warehouse,pick_user,pick_action_time,pick_status)
select 1 as status,pick_type as type,s_warehouse_id as warehouse,UNIX_TIMESTAMP(NOW()) as create_time,0 as uid,count(distinct orders_id) as order_num,count(distinct products_sku) as sku_num,sum(assign_num) as num,
0 as shipment_id,0 as order_type,0 as pick_start_time,0 as pick_end_time,0 as pick_uid,s_warehouse_id as pick_warehouse,0 as pick_user,0 as pick_action_time,0 as pick_status
from assign_dd3_5F;-- 拣货单表


-- 取得拣货汇总表的最大id，在库存分配表erp_stock_assign组织数据写入拣货明细表erp_pick_product
SELECT @maxid:=max(id) from erp_database_newest.erp_pick;

INSERT into erp_pick_product_ls(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select @maxid as pick_id,orders_id,products_sku as product_sku,sum(assign_num) as product_num,0 as scan_num,0 as scan_uid,1 as status,0 as scan_time,UNIX_TIMESTAMP(NOW()) as create_time,0 as return_time,
0 as ship_time,0 as page_num,basket_num,0 as ship_uid
from assign_dd3_5F
GROUP BY orders_id,products_sku;-- 拣货详情表 



-- 在库存分配表erp_stock_assign中查询要分配的任务量，数据组织插入任务汇总表erp_picking_task_new
INSERT into erp_picking_task_new(pick_id,pick_type,sku_num,num,status,pick_user,pick_status,create_time,box,floor,update_time,warehouse,floor_num)
select @maxid as pick_id,pick_type,count(distinct products_sku) as sku_num,sum(assign_num) as num,1 as status,'' as pick_user,0 as pick_status,UNIX_TIMESTAMP(NOW()) as create_time,0 as box,0 as floor,0 as update_time,s_warehouse_id as warehouse,5 as floor_num
from assign_dd3_5F;

-- 取得任务汇总表的最大task_id，在库存分配表erp_stock_assign组织数据写入任务明细表erp_picking_task_details_new
SELECT @maxtask_id:=max(task_id) from  erp_picking_task_new;

insert into erp_picking_task_details_new_ls(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
SELECT @maxtask_id as task_id,products_sku,products_location,SUM(product_num) as product_num,0 as actual_num,'' as box,0 as status,'' as pick_user,UNIX_TIMESTAMP(NOW()) as create_time,0 as assign_time,0 as box_status,0 as update_time 
from assign_dd3_5F
GROUP BY products_sku,products_location
ORDER BY products_location;

-- 回写 erp_stock_assign 的is_sc标志
-- 优化 update erp_stock_assign set status=300 , task_id=@maxtask_id where orders_id in(select orders_id from a1);
update erp_stock_assign a INNER JOIN a3 b on a.orders_id=b.orders_id set status=300,task_id=@maxtask_id;

-- 临时表也回写标志，减去重复插入数据
-- 优化update assign_a1 set status=300 where orders_id in(select orders_id from a1);
update assign_a1 a INNER JOIN a3 b on a.orders_id=b.orders_id set status=300;

-- 删除临时表
drop table a3;
drop table a3_1;
DROP TABLE assign_dd3_5F;
end if;
-- 循环一次减40
set @mdd3_5=@mdd3_5-@n3;
-- 单个任务生成
-- erp_pick_product
INSERT into erp_database_newest.erp_pick_product(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid from erp_pick_product_ls;

-- erp_picking_task_details_new
insert into erp_picking_task_details_new(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
select task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time from erp_picking_task_details_new_ls;

-- 取得订单号
DROP TABLE IF EXISTS erp_pick_product_ls2;
CREATE TEMPORARY table erp_pick_product_ls2
select DISTINCT orders_id,pick_id from erp_pick_product_ls;
-- 写入日志表erp_operate_log
INSERT INTO erp_database_newest.erp_operate_log(operateUser,operateType,operateMod,operateKey,operateText)
select '30','update','ordersManage',orders_id,concat('生成拣货单(',pick_id,')，订单状态变为已打印') from erp_pick_product_ls2;

-- 取得订单分配里面的任务号，更新待发货订单表的标志及任务号
DROP TABLE IF EXISTS order_dd;
CREATE TEMPORARY table order_dd
select distinct a.orders_id,a.task_id,b.pick_id from erp_stock_assign a inner join erp_pick_product_ls2 b on a.orders_id=b.orders_id;
-- 回写订单标志
update erp_database_newest.erp_orders a INNER JOIN erp_pick_product_ls2 b on a.erp_orders_id=b.orders_id 
set a.orders_status=4,a.orders_print_time=now() where a.orders_status=3;

-- 回写待发货订单标志
update stock_out a INNER JOIN order_dd b on a.erp_orders_id=b.orders_id
set a.orders_status=30,a.task_num=b.task_id,a.print_time=UNIX_TIMESTAMP(NOW()),a.pick_id=b.pick_id;

truncate table erp_pick_product_ls;
truncate table erp_picking_task_details_new_ls;
end while;


/* -----------------------多多  6F订单--------不跨区--------------------*/
select @mdd3_6:=COUNT(*) from assign_a1 where status=200 and is_span=0 and pick_type=3 and floor='6';
while @mdd3_6>=@n3 do 
-- 订单大于40,循环执行写入
DROP TABLE IF EXISTS a3;
-- 取得多多6楼的前40订单
-- 参数传入
SET @slsql="CREATE TEMPORARY table a3 
select orders_id
from assign_a1 
where status=200 and is_span=0 and pick_type=3 and floor='6'
GROUP BY orders_id
ORDER BY MAX(products_location)
LIMIT ?,?";
PREPARE STMT FROM @slsql;
EXECUTE STMT USING @m,@n3;
deallocate prepare STMT;
-- 取得订单的篮子号
DROP TABLE IF EXISTS a3_1;
CREATE TEMPORARY table a3_1
select orders_id,(@i:=@i+1) as basket_num from a3,(select @i:=0) as it;

DROP TABLE IF EXISTS assign_dd3_6F;
-- 
CREATE TEMPORARY table assign_dd3_6F
select b.basket_num,a.orders_id,a.pick_type,a.status,a.products_sku,a.products_location,a.s_warehouse_id,a.product_num,a.assign_num,a.is_span
from assign_a1 a INNER JOIN a3_1 b ON a.orders_id=b.orders_id;

-- 订单数据组织写入对应表，更新相关标志。非最后一次分配，不满40订单不给分配
IF (select count(*) from a3)=@n3
then

-- 根据库存分配表取得订单号，在订单表获取物流ID的结果集
-- 优化select @i:=GROUP_CONCAT(DISTINCT shipmentAutoMatched) From erp_database_newest.erp_orders  where erp_orders_id in(select orders_id from a3);


-- 在库存分配表erp_stock_assign组织数据写入拣货汇总表 erp_pick
INSERT into erp_database_newest.erp_pick(status,type,warehouse,create_time,uid,order_num,sku_num,num,shipment_id,order_type,pick_start_time,pick_end_time,pick_uid,pick_warehouse,pick_user,pick_action_time,pick_status)
select 1 as status,pick_type as type,s_warehouse_id as warehouse,UNIX_TIMESTAMP(NOW()) as create_time,0 as uid,count(distinct orders_id) as order_num,count(distinct products_sku) as sku_num,sum(assign_num) as num,
0 as shipment_id,0 as order_type,0 as pick_start_time,0 as pick_end_time,0 as pick_uid,s_warehouse_id as pick_warehouse,0 as pick_user,0 as pick_action_time,0 as pick_status
from assign_dd3_6F;-- 拣货单表


-- 取得拣货汇总表的最大id，在库存分配表erp_stock_assign组织数据写入拣货明细表erp_pick_product
SELECT @maxid:=max(id) from erp_database_newest.erp_pick;

INSERT into erp_pick_product_ls(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select @maxid as pick_id,orders_id,products_sku as product_sku,sum(assign_num) as product_num,0 as scan_num,0 as scan_uid,1 as status,0 as scan_time,UNIX_TIMESTAMP(NOW()) as create_time,0 as return_time,
0 as ship_time,0 as page_num,basket_num,0 as ship_uid
from assign_dd3_6F
GROUP BY orders_id,products_sku;-- 拣货详情表 



-- 在库存分配表erp_stock_assign中查询要分配的任务量，数据组织插入任务汇总表erp_picking_task_new
INSERT into erp_picking_task_new(pick_id,pick_type,sku_num,num,status,pick_user,pick_status,create_time,box,floor,update_time,warehouse,floor_num)
select @maxid as pick_id,pick_type,count(distinct products_sku) as sku_num,sum(assign_num) as num,1 as status,'' as pick_user,0 as pick_status,UNIX_TIMESTAMP(NOW()) as create_time,0 as box,0 as floor,0 as update_time,s_warehouse_id as warehouse,6 as floor_num
from assign_dd3_6F;

-- 取得任务汇总表的最大task_id，在库存分配表erp_stock_assign组织数据写入任务明细表erp_picking_task_details_new
SELECT @maxtask_id:=max(task_id) from  erp_picking_task_new;

insert into erp_picking_task_details_new_ls(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
SELECT @maxtask_id as task_id,products_sku,products_location,SUM(product_num) as product_num,0 as actual_num,'' as box,0 as status,'' as pick_user,UNIX_TIMESTAMP(NOW()) as create_time,0 as assign_time,0 as box_status,0 as update_time 
from assign_dd3_6F
GROUP BY products_sku,products_location
ORDER BY products_location;

-- 回写 erp_stock_assign 的is_sc标志
-- 优化 update erp_stock_assign set status=300 , task_id=@maxtask_id where orders_id in(select orders_id from a1);
update erp_stock_assign a INNER JOIN a3 b on a.orders_id=b.orders_id set status=300,task_id=@maxtask_id;

-- 临时表也回写标志，减去重复插入数据
-- 优化update assign_a1 set status=300 where orders_id in(select orders_id from a1);
update assign_a1 a INNER JOIN a3 b on a.orders_id=b.orders_id set status=300;

-- 删除临时表
drop table a3;
drop table a3_1;
DROP TABLE assign_dd3_6F;
end if;
-- 循环一次减40
set @mdd3_6=@mdd3_6-@n3;
-- 单个任务生成
-- erp_pick_product
INSERT into erp_database_newest.erp_pick_product(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid from erp_pick_product_ls;

-- erp_picking_task_details_new
insert into erp_picking_task_details_new(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
select task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time from erp_picking_task_details_new_ls;

-- 取得订单号
DROP TABLE IF EXISTS erp_pick_product_ls2;
CREATE TEMPORARY table erp_pick_product_ls2
select DISTINCT orders_id,pick_id from erp_pick_product_ls;
-- 写入日志表erp_operate_log
INSERT INTO erp_database_newest.erp_operate_log(operateUser,operateType,operateMod,operateKey,operateText)
select '30','update','ordersManage',orders_id,concat('生成拣货单(',pick_id,')，订单状态变为已打印') from erp_pick_product_ls2;

-- 取得订单分配里面的任务号，更新待发货订单表的标志及任务号
DROP TABLE IF EXISTS order_dd;
CREATE TEMPORARY table order_dd
select distinct a.orders_id,a.task_id,b.pick_id from erp_stock_assign a inner join erp_pick_product_ls2 b on a.orders_id=b.orders_id;
-- 回写订单标志
update erp_database_newest.erp_orders a INNER JOIN erp_pick_product_ls2 b on a.erp_orders_id=b.orders_id 
set a.orders_status=4,a.orders_print_time=now() where a.orders_status=3;

-- 回写待发货订单标志
update stock_out a INNER JOIN order_dd b on a.erp_orders_id=b.orders_id
set a.orders_status=30,a.task_num=b.task_id,a.print_time=UNIX_TIMESTAMP(NOW()),a.pick_id=b.pick_id;

truncate table erp_pick_product_ls;
truncate table erp_picking_task_details_new_ls;
end while;


/* -----------------------多多  订单---跨区-----------------------*/
select @mdd3:=COUNT(*) from assign_a1 where status=200 and is_span=1 and pick_type=3;
while @mdd3>=@n3 do 
-- 订单大于40,循环执行写入
DROP TABLE IF EXISTS a3;
-- 取得跨区多多订单的前40
-- 参数传入
SET @slsql="CREATE TEMPORARY table a3 
select orders_id
from assign_a1 
where status=200 and is_span=1 and pick_type=3
GROUP BY orders_id
ORDER BY MAX(products_location)
LIMIT ?,?";
PREPARE STMT FROM @slsql;
EXECUTE STMT USING @m,@n3;
deallocate prepare STMT;
-- 取得订单的篮子号
DROP TABLE IF EXISTS a3_1;
CREATE TEMPORARY table a3_1
select orders_id,(@i:=@i+1) as basket_num from a3,(select @i:=0) as it;


DROP TABLE IF EXISTS assign_dd3_kq;
-- 单
CREATE TEMPORARY table assign_dd3_kq
select b.basket_num,a.orders_id,a.pick_type,a.status,a.products_sku,a.products_location,a.s_warehouse_id,a.product_num,a.assign_num,a.is_span,a.floor
from assign_a1 a INNER JOIN a3_1 b ON a.orders_id=b.orders_id;


-- 订单数据组织写入对应表，更新相关标志。非最后一次分配，不满100订单不给分配
IF (select count(*) from a3)=@n3
then

-- 根据库存分配表取得订单号，在订单表获取物流ID的结果集
-- 优化select @i:=GROUP_CONCAT(DISTINCT shipmentAutoMatched) From erp_database_newest.erp_orders  where erp_orders_id in(select orders_id from a3);
-- 根据订单分配取得楼层组合
select @i2:=GROUP_CONCAT(DISTINCT floor) from assign_dd3_kq;

-- 在库存分配表erp_stock_assign组织数据写入拣货汇总表 erp_pick
INSERT into erp_database_newest.erp_pick(status,type,warehouse,create_time,uid,order_num,sku_num,num,shipment_id,order_type,pick_start_time,pick_end_time,pick_uid,pick_warehouse,pick_user,pick_action_time,pick_status)
select 1 as status,pick_type as type,s_warehouse_id as warehouse,UNIX_TIMESTAMP(NOW()) as create_time,0 as uid,count(distinct orders_id) as order_num,count(distinct products_sku) as sku_num,sum(assign_num) as num,
0 as shipment_id,0 as order_type,0 as pick_start_time,0 as pick_end_time,0 as pick_uid,s_warehouse_id as pick_warehouse,0 as pick_user,0 as pick_action_time,0 as pick_status
from assign_dd3_kq;-- 拣货单表


-- 取得拣货汇总表的最大id，在库存分配表erp_stock_assign组织数据写入拣货明细表erp_pick_product
SELECT @maxid:=max(id) from erp_database_newest.erp_pick;

INSERT into erp_pick_product_ls(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select @maxid as pick_id,orders_id,products_sku as product_sku,sum(assign_num) as product_num,0 as scan_num,0 as scan_uid,1 as status,0 as scan_time,UNIX_TIMESTAMP(NOW()) as create_time,0 as return_time,
0 as ship_time,0 as page_num,basket_num,0 as ship_uid
from assign_dd3_kq
GROUP BY orders_id,products_sku;-- 拣货详情表 



-- 在库存分配表erp_stock_assign中查询要分配的任务量，数据组织插入任务汇总表erp_picking_task_new
INSERT into erp_picking_task_new(pick_id,pick_type,sku_num,num,status,pick_user,pick_status,create_time,box,floor,update_time,warehouse,floor_num)
select @maxid as pick_id,pick_type,count(distinct products_sku) as sku_num,sum(assign_num) as num,1 as status,'' as pick_user,0 as pick_status,UNIX_TIMESTAMP(NOW()) as create_time,0 as box,0 as floor,0 as update_time,s_warehouse_id as warehouse,@i2 as floor_num
from assign_dd3_kq;

-- 取得任务汇总表的最大task_id，在库存分配表erp_stock_assign组织数据写入任务明细表erp_picking_task_details_new
SELECT @maxtask_id:=max(task_id) from  erp_picking_task_new;

insert into erp_picking_task_details_new_ls(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
SELECT @maxtask_id as task_id,products_sku,products_location,SUM(product_num) as product_num,0 as actual_num,'' as box,0 as status,'' as pick_user,UNIX_TIMESTAMP(NOW()) as create_time,0 as assign_time,0 as box_status,0 as update_time 
from assign_dd3_kq
GROUP BY products_sku,products_location
ORDER BY products_location;

-- 回写 erp_stock_assign 的is_sc标志
-- 优化 update erp_stock_assign set status=300 , task_id=@maxtask_id where orders_id in(select orders_id from a1);
update erp_stock_assign a INNER JOIN a3 b on a.orders_id=b.orders_id set status=300,task_id=@maxtask_id;

-- 临时表也回写标志，减去重复插入数据
-- 优化update assign_a1 set status=300 where orders_id in(select orders_id from a1);
update assign_a1 a INNER JOIN a3 b on a.orders_id=b.orders_id set status=300;

-- 删除临时表
drop table a3;
drop table a3_1;
DROP TABLE assign_dd3_kq;
end if;
-- 循环一次减40
set @mdd3=@mdd3-@n3;
-- 单个任务生成
-- erp_pick_product
INSERT into erp_database_newest.erp_pick_product(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid from erp_pick_product_ls;

-- erp_picking_task_details_new
insert into erp_picking_task_details_new(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
select task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time from erp_picking_task_details_new_ls;

-- 取得订单号
DROP TABLE IF EXISTS erp_pick_product_ls2;
CREATE TEMPORARY table erp_pick_product_ls2
select DISTINCT orders_id,pick_id from erp_pick_product_ls;
-- 写入日志表erp_operate_log
INSERT INTO erp_database_newest.erp_operate_log(operateUser,operateType,operateMod,operateKey,operateText)
select '30','update','ordersManage',orders_id,concat('生成拣货单(',pick_id,')，订单状态变为已打印') from erp_pick_product_ls2;

-- 取得订单分配里面的任务号，更新待发货订单表的标志及任务号
DROP TABLE IF EXISTS order_dd;
CREATE TEMPORARY table order_dd
select distinct a.orders_id,a.task_id,b.pick_id from erp_stock_assign a inner join erp_pick_product_ls2 b on a.orders_id=b.orders_id;
-- 回写订单标志
update erp_database_newest.erp_orders a INNER JOIN erp_pick_product_ls2 b on a.erp_orders_id=b.orders_id 
set a.orders_status=4,a.orders_print_time=now() where a.orders_status=3;

-- 回写待发货订单标志
update stock_out a INNER JOIN order_dd b on a.erp_orders_id=b.orders_id
set a.orders_status=30,a.task_num=b.task_id,a.print_time=UNIX_TIMESTAMP(NOW()),a.pick_id=b.pick_id;

truncate table erp_pick_product_ls;
truncate table erp_picking_task_details_new_ls;
end while;

/* -----------------------多多  订单---最后一次分配，不管多少都要分完-----------------------*/
select @mdd3_zh:=COUNT(*) from assign_a1 where status=200 and pick_type=3;
while @mdd3_zh>=1 do 
-- 订单大于40,循环执行写入
DROP TABLE IF EXISTS a3;
-- 取得跨区多多订单的前40
-- 参数传入
SET @slsql="CREATE TEMPORARY table a3 
select orders_id
from assign_a1 
where status=200 and pick_type=3
GROUP BY orders_id
ORDER BY MAX(products_location)
LIMIT ?,?";
PREPARE STMT FROM @slsql;
EXECUTE STMT USING @m,@n3;
deallocate prepare STMT;
-- 取得订单的篮子号
DROP TABLE IF EXISTS a3_1;
CREATE TEMPORARY table a3_1
select orders_id,(@i:=@i+1) as basket_num from a3,(select @i:=0) as it;

DROP TABLE IF EXISTS assign_dd3_kq2;
-- 单
CREATE TEMPORARY table assign_dd3_kq2
select b.basket_num,a.orders_id,a.pick_type,a.status,a.products_sku,a.products_location,a.s_warehouse_id,a.product_num,a.assign_num,a.is_span,floor
from assign_a1 a INNER JOIN a3_1 b ON a.orders_id=b.orders_id;

-- 订单数据组织写入对应表，更新相关标志。最后一次分配，不满40订单也分配
IF (select count(*) from a3)>=1
then
-- 根据库存分配表取得订单号，在订单表获取物流ID的结果集
-- 优化select @i:=GROUP_CONCAT(DISTINCT shipmentAutoMatched) From erp_database_newest.erp_orders  where erp_orders_id in(select orders_id from a3);
-- 根据订单分配取得楼层组合
select @i2:=GROUP_CONCAT(DISTINCT floor) from assign_dd3_kq2;

-- 在库存分配表erp_stock_assign组织数据写入拣货汇总表 erp_pick
INSERT into erp_database_newest.erp_pick(status,type,warehouse,create_time,uid,order_num,sku_num,num,shipment_id,order_type,pick_start_time,pick_end_time,pick_uid,pick_warehouse,pick_user,pick_action_time,pick_status)
select 1 as status,pick_type as type,s_warehouse_id as warehouse,UNIX_TIMESTAMP(NOW()) as create_time,0 as uid,count(distinct orders_id) as order_num,count(distinct products_sku) as sku_num,sum(assign_num) as num,
0 as shipment_id,0 as order_type,0 as pick_start_time,0 as pick_end_time,0 as pick_uid,s_warehouse_id as pick_warehouse,0 as pick_user,0 as pick_action_time,0 as pick_status
from assign_dd3_kq2;-- 拣货单表


-- 取得拣货汇总表的最大id，在库存分配表erp_stock_assign组织数据写入拣货明细表erp_pick_product
SELECT @maxid:=max(id) from erp_database_newest.erp_pick;

INSERT into erp_pick_product_ls(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select @maxid as pick_id,orders_id,products_sku as product_sku,sum(assign_num) as product_num,0 as scan_num,0 as scan_uid,1 as status,0 as scan_time,UNIX_TIMESTAMP(NOW()) as create_time,0 as return_time,
0 as ship_time,0 as page_num,basket_num,0 as ship_uid
from assign_dd3_kq2
GROUP BY orders_id,products_sku;-- 拣货详情表 



-- 在库存分配表erp_stock_assign中查询要分配的任务量，数据组织插入任务汇总表erp_picking_task_new
INSERT into erp_picking_task_new(pick_id,pick_type,sku_num,num,status,pick_user,pick_status,create_time,box,floor,update_time,warehouse,floor_num)
select @maxid as pick_id,pick_type,count(distinct products_sku) as sku_num,sum(assign_num) as num,1 as status,'' as pick_user,0 as pick_status,UNIX_TIMESTAMP(NOW()) as create_time,0 as box,0 as floor,0 as update_time,s_warehouse_id as warehouse,@i2 as floor_num
from assign_dd3_kq2;

-- 取得任务汇总表的最大task_id，在库存分配表erp_stock_assign组织数据写入任务明细表erp_picking_task_details_new
SELECT @maxtask_id:=max(task_id) from  erp_picking_task_new;

insert into erp_picking_task_details_new_ls(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
SELECT @maxtask_id as task_id,products_sku,products_location,SUM(product_num) as product_num,0 as actual_num,'' as box,0 as status,'' as pick_user,UNIX_TIMESTAMP(NOW()) as create_time,0 as assign_time,0 as box_status,0 as update_time 
from assign_dd3_kq2
GROUP BY products_sku,products_location
ORDER BY products_location;

-- 回写 erp_stock_assign 的status标志
-- 优化 update erp_stock_assign set status=300 , task_id=@maxtask_id where orders_id in(select orders_id from a1);
update erp_stock_assign a INNER JOIN a3 b on a.orders_id=b.orders_id set status=300,task_id=@maxtask_id;

-- 临时表也回写标志，减去重复插入数据
-- 优化update assign_a1 set status=300 where orders_id in(select orders_id from a1);
update assign_a1 a INNER JOIN a3 b on a.orders_id=b.orders_id set status=300;

-- 删除临时表
drop table a3;
drop table a3_1;
DROP TABLE assign_dd3_kq2;
end if;
-- 循环一次减40
set @mdd3_zh=@mdd3_zh-@n3;
-- 单个任务生成
-- erp_pick_product
INSERT into erp_database_newest.erp_pick_product(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid from erp_pick_product_ls;

-- erp_picking_task_details_new
insert into erp_picking_task_details_new(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
select task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time from erp_picking_task_details_new_ls;

-- 取得订单号
DROP TABLE IF EXISTS erp_pick_product_ls2;
CREATE TEMPORARY table erp_pick_product_ls2
select DISTINCT orders_id,pick_id from erp_pick_product_ls;
-- 写入日志表erp_operate_log
INSERT INTO erp_database_newest.erp_operate_log(operateUser,operateType,operateMod,operateKey,operateText)
select '30','update','ordersManage',orders_id,concat('生成拣货单(',pick_id,')，订单状态变为已打印') from erp_pick_product_ls2;

-- 取得订单分配里面的任务号，更新待发货订单表的标志及任务号
DROP TABLE IF EXISTS order_dd;
CREATE TEMPORARY table order_dd
select distinct a.orders_id,a.task_id,b.pick_id from erp_stock_assign a inner join erp_pick_product_ls2 b on a.orders_id=b.orders_id;
-- 回写订单标志
update erp_database_newest.erp_orders a INNER JOIN erp_pick_product_ls2 b on a.erp_orders_id=b.orders_id 
set a.orders_status=4,a.orders_print_time=now() where a.orders_status=3;

-- 回写待发货订单标志
update stock_out a INNER JOIN order_dd b on a.erp_orders_id=b.orders_id
set a.orders_status=30,a.task_num=b.task_id,a.print_time=UNIX_TIMESTAMP(NOW()),a.pick_id=b.pick_id;

truncate table erp_pick_product_ls;
truncate table erp_picking_task_details_new_ls;
end while;
/*
-- 临时表数据写入系统表
-- erp_pick_product
INSERT into erp_database_newest.erp_pick_product(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid from erp_pick_product_ls;

-- erp_picking_task_details_new
insert into erp_picking_task_details_new(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
select task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time from erp_picking_task_details_new_ls;

-- 取得订单号
DROP TABLE IF EXISTS erp_pick_product_ls2;
CREATE TEMPORARY table erp_pick_product_ls2
select DISTINCT orders_id,pick_id from erp_pick_product_ls;
-- 写入日志表erp_operate_log
INSERT INTO erp_database_newest.erp_operate_log(operateUser,operateType,operateMod,operateKey,operateText)
select '30','update','ordersManage',orders_id,concat('生成拣货单(',pick_id,')，订单状态变为已打印') from erp_pick_product_ls2;

-- 取得订单分配里面的任务号，更新待发货订单表的标志及任务号
DROP TABLE IF EXISTS order_dd;
CREATE TEMPORARY table order_dd
select distinct a.orders_id,a.task_id,b.pick_id from erp_stock_assign a inner join erp_pick_product_ls2 b on a.orders_id=b.orders_id;
-- 回写订单标志
update erp_database_newest.erp_orders a,erp_pick_product_ls2 b set a.orders_status=4,a.orders_print_time=now() where a.erp_orders_id=b.orders_id and a.orders_status=3;

-- 回写待发货订单标志
update stock_out a,order_dd b set a.orders_status=30,a.task_num=b.task_id,a.print_time=UNIX_TIMESTAMP(NOW()),a.pick_id=b.pick_id where a.erp_orders_id=b.orders_id;
*/
-- 删除临时表
drop table erp_pick_product_ls;
drop table erp_picking_task_details_new_ls;

drop table erp_pick_product_ls2;
drop table order_dd;
drop table assign_a1;

 END IF;


-- 事物回滚或执行
 IF t_error = 1 then  
ROLLBACK;  
ELSE  
COMMIT;  
end if;  

END
















任务 2 


BEGIN

 DECLARE t_error INTEGER DEFAULT 0;  
 DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET t_error=1;  
   -- 开启事物
 START TRANSACTION;  

-- 获取当前日期在本周的周日;星期天不生成拣货单
select @rq:=subdate(curdate(),if(date_format(curdate(),'%w')=0,7,date_format(curdate(),'%w'))-7);
if -- (curdate()<>@rq) and 
(curdate()<>'2018-02-21')
THEN

set @m=0;
DROP TABLE IF EXISTS assign_a1;
-- 截取现在的订单分配表 东莞仓订单-1035数据,订单分配表是时时增加数据的;erp已通过,order_is_join未拆单。
CREATE TEMPORARY table assign_a1 
select orders_id,pick_type,status,products_sku,products_location,s_warehouse_id,product_num,assign_num,is_span,left(products_location,1) as floor 
from erp_stock_assign a where status=200 and s_warehouse_id=1035
and EXISTS (select 1 from erp_database_newest.erp_orders b where a.orders_id=b.erp_orders_id and b.orders_status=3 and b.orders_is_join =0 and b.orders_warehouse_id=1035
and IFNULL(b.orders_shipping_code,'')<>'');
-- 创建临时表用于临时存储，避免重复读写系统表

-- erp_pick_product临时表
DROP TABLE IF EXISTS erp_pick_product_ls;
CREATE TEMPORARY table erp_pick_product_ls(
pick_id  int(11) DEFAULT NULL,
orders_id  int(11) DEFAULT NULL,
product_sku  varchar(200) DEFAULT '',
product_num  int(5) DEFAULT NULL,
scan_num  int(5) DEFAULT '0',
scan_uid  int(11) DEFAULT '0',
status  tinyint(5) DEFAULT '1',
scan_time  int(11) DEFAULT '0',
create_time  int(1) DEFAULT NULL,
return_time  int(11) DEFAULT '0',
ship_time  int(11) DEFAULT '0',
page_num  varchar(100) DEFAULT NULL,
basket_num  int(5) DEFAULT '0',
ship_uid  int(11) DEFAULT '0'
);
-- erp_picking_task_details_new临时表
DROP TABLE IF EXISTS erp_picking_task_details_new_ls;
CREATE TEMPORARY table erp_picking_task_details_new_ls(
task_id int(11) NOT NULL DEFAULT '0',
product_sku varchar(200) NOT NULL DEFAULT '0',
products_location varchar(200) NOT NULL DEFAULT '0',
product_num int(11) NOT NULL DEFAULT '0',
actual_num int(11) NOT NULL DEFAULT '0',
box varchar(200) NOT NULL DEFAULT '0',
status int(11) NOT NULL DEFAULT '0',
pick_user varchar(200) NOT NULL DEFAULT '0',
create_time int(11) NOT NULL DEFAULT '0',
assign_time int(11) DEFAULT '0',
box_status int(11) DEFAULT '0',
update_time int(11) NOT NULL
);

/*----------------单单 4F订单------------------*/
-- 取得单单的设计参数
select @n:=value from wms_sys_picktaskrule where Parameter_name='only' and s_warehouse_id='1035';

select @mdd_4:=COUNT(*) from assign_a1 where status=200 and is_span=0 and pick_type=1 and floor='4';
while @mdd_4>=@n do 
-- 订单大于100,循环执行写入
DROP TABLE IF EXISTS assign_dd_4F;
-- 单单 获取100个订单生成拣货任务;4F -- 传入参数
SET @slsql="
CREATE TEMPORARY table assign_dd_4F
select orders_id,pick_type,products_sku,products_location,s_warehouse_id,product_num,assign_num from(
select orders_id,pick_type,products_sku,products_location,s_warehouse_id,product_num,assign_num from assign_a1 
where status=200 and is_span=0 and pick_type=1 and floor='4'
order by products_location,products_sku) a LIMIT ?,?";
PREPARE STMT FROM @slsql;
EXECUTE STMT USING @m,@n;
deallocate prepare STMT;

-- 5F的订单数据组织写入对应表，更新相关标志。非最后一次分配，不满100订单不给分配
IF (select count(*) from assign_dd_4F)=@n
then

-- 根据库存分配表取得订单号，在订单表获取物流ID的结果集
DROP TABLE IF EXISTS a1;
CREATE TEMPORARY table a1 select orders_id from assign_dd_4F;
-- 优化select @i:=GROUP_CONCAT(DISTINCT shipmentAutoMatched)  From erp_database_newest.erp_orders where erp_orders_id in(select orders_id from a1);


-- 在库存分配表erp_stock_assign组织数据写入拣货汇总表 erp_pick
INSERT into erp_database_newest.erp_pick(status,type,warehouse,create_time,uid,order_num,sku_num,num,shipment_id,order_type,pick_start_time,pick_end_time,pick_uid,pick_warehouse,pick_user,pick_action_time,pick_status)
select 1 as status,pick_type as type,s_warehouse_id as warehouse,UNIX_TIMESTAMP(NOW()) as create_time,0 as uid,count(distinct orders_id) as order_num,count(distinct products_sku) as sku_num,sum(assign_num) as num,
0 as shipment_id,0 as order_type,0 as pick_start_time,0 as pick_end_time,0 as pick_uid,s_warehouse_id as pick_warehouse,0 as pick_user,0 as pick_action_time,0 as pick_status
from assign_dd_4F;-- 拣货单表


-- 取得拣货汇总表的最大id，在库存分配表erp_stock_assign组织数据写入拣货明细表erp_pick_product
SELECT @maxid:=max(id) from erp_database_newest.erp_pick;

INSERT into erp_pick_product_ls(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select @maxid as pick_id,orders_id,products_sku as product_sku,sum(assign_num) as product_num,0 as scan_num,0 as scan_uid,1 as status,0 as scan_time,UNIX_TIMESTAMP(NOW()) as create_time,0 as return_time,
0 as ship_time,0 as page_num,(@i:=@i+1) as basket_num,0 as ship_uid
from assign_dd_4F,(select @i:=0) as it
GROUP BY orders_id,products_sku;-- 拣货详情表 



-- 在库存分配表erp_stock_assign中查询要分配的任务量，数据组织插入任务汇总表erp_picking_task_new
INSERT into erp_picking_task_new(pick_id,pick_type,sku_num,num,status,pick_user,pick_status,create_time,box,floor,update_time,warehouse,floor_num)
select @maxid as pick_id,pick_type,count(distinct products_sku) as sku_num,sum(assign_num) as num,1 as status,'' as pick_user,0 as pick_status,UNIX_TIMESTAMP(NOW()) as create_time,0 as box,0 as floor,0 as update_time,s_warehouse_id as warehouse,4 as floor_num
from assign_dd_4F;

-- 取得任务汇总表的最大task_id，在库存分配表erp_stock_assign组织数据写入任务明细表erp_picking_task_details_new
SELECT @maxtask_id:=max(task_id) from  erp_picking_task_new;

insert into erp_picking_task_details_new_ls(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
SELECT @maxtask_id as task_id,products_sku,products_location,SUM(product_num) as product_num,0 as actual_num,'' as box,0 as status,'' as pick_user,UNIX_TIMESTAMP(NOW()) as create_time,0 as assign_time,0 as box_status,0 as update_time 
from assign_dd_4F
GROUP BY products_sku,products_location
ORDER BY products_location;

-- 回写 erp_stock_assign 的is_sc标志
-- 优化 update erp_stock_assign set status=300 , task_id=@maxtask_id where orders_id in(select orders_id from a1);
update erp_stock_assign a INNER JOIN a1 b on a.orders_id=b.orders_id set status=300,task_id=@maxtask_id;

-- 临时表也回写标志，减去重复插入数据
-- 优化update assign_a1 set status=300 where orders_id in(select orders_id from a1);
update assign_a1 a INNER JOIN a1 b on a.orders_id=b.orders_id set status=300;

-- 删除临时表
drop table a1;
DROP TABLE assign_dd_4F;
end if;
-- 循环一次减100
set @mdd_4=@mdd_4-@n;

-- 单个任务生成
-- erp_pick_product
INSERT into erp_database_newest.erp_pick_product(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid from erp_pick_product_ls;

-- erp_picking_task_details_new
insert into erp_picking_task_details_new(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
select task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time from erp_picking_task_details_new_ls;

-- 取得订单号
DROP TABLE IF EXISTS erp_pick_product_ls2;
CREATE TEMPORARY table erp_pick_product_ls2
select DISTINCT orders_id,pick_id from erp_pick_product_ls;
-- 写入日志表erp_operate_log
INSERT INTO erp_database_newest.erp_operate_log(operateUser,operateType,operateMod,operateKey,operateText)
select '30','update','ordersManage',orders_id,concat('生成拣货单(',pick_id,')，订单状态变为已打印') from erp_pick_product_ls2;

-- 取得订单分配里面的任务号，更新待发货订单表的标志及任务号
DROP TABLE IF EXISTS order_dd;
CREATE TEMPORARY table order_dd
select distinct a.orders_id,a.task_id,b.pick_id from erp_stock_assign a inner join erp_pick_product_ls2 b on a.orders_id=b.orders_id;
-- 回写订单标志
update erp_database_newest.erp_orders a INNER JOIN erp_pick_product_ls2 b on a.erp_orders_id=b.orders_id 
set a.orders_status=4,a.orders_print_time=now() where a.orders_status=3;

-- 回写待发货订单标志
update stock_out a INNER JOIN order_dd b on a.erp_orders_id=b.orders_id
set a.orders_status=30,a.task_num=b.task_id,a.print_time=UNIX_TIMESTAMP(NOW()),a.pick_id=b.pick_id;

truncate table erp_pick_product_ls;
truncate table erp_picking_task_details_new_ls;
end while;

/*----------------单单 5F订单------------------*/
select @mdd_5:=COUNT(*) from assign_a1 where status=200 and is_span=0 and pick_type=1 and floor='5';
while @mdd_5>=@n do 
-- 订单大于100,循环执行写入

DROP TABLE IF EXISTS assign_dd_5F;
-- 单单 获取100个订单生成拣货任务;5F -- 传入参数
SET @slsql="CREATE TEMPORARY table assign_dd_5F
select orders_id,pick_type,products_sku,products_location,s_warehouse_id,product_num,assign_num from(
select orders_id,pick_type,products_sku,products_location,s_warehouse_id,product_num,assign_num from assign_a1 
where status=200 and is_span=0 and pick_type=1 and floor='5'
order by products_location,products_sku) a LIMIT ?,?";
PREPARE STMT FROM @slsql;
EXECUTE STMT USING @m,@n;
deallocate prepare STMT;

-- 5F的订单数据组织写入对应表，更新相关标志。非最后一次分配，不满100订单不给分配
IF (select count(*) from assign_dd_5F)=@n
then

-- 根据库存分配表取得订单号，在订单表获取物流ID的结果集
DROP TABLE IF EXISTS a1;
CREATE TEMPORARY table a1 select orders_id from assign_dd_5F;
-- 优化select @i:=GROUP_CONCAT(DISTINCT shipmentAutoMatched)  From erp_database_newest.erp_orders  where erp_orders_id in(select orders_id from a1);


-- 在库存分配表erp_stock_assign组织数据写入拣货汇总表 erp_pick
INSERT into erp_database_newest.erp_pick(status,type,warehouse,create_time,uid,order_num,sku_num,num,shipment_id,order_type,pick_start_time,pick_end_time,pick_uid,pick_warehouse,pick_user,pick_action_time,pick_status)
select 1 as status,pick_type as type,s_warehouse_id as warehouse,UNIX_TIMESTAMP(NOW()) as create_time,0 as uid,count(distinct orders_id) as order_num,count(distinct products_sku) as sku_num,sum(assign_num) as num,
0 as shipment_id,0 as order_type,0 as pick_start_time,0 as pick_end_time,0 as pick_uid,s_warehouse_id as pick_warehouse,0 as pick_user,0 as pick_action_time,0 as pick_status
from assign_dd_5F;-- 拣货单表


-- 取得拣货汇总表的最大id，在库存分配表erp_stock_assign组织数据写入拣货明细表erp_pick_product
SELECT @maxid:=max(id) from erp_database_newest.erp_pick;

INSERT into erp_pick_product_ls(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select @maxid as pick_id,orders_id,products_sku as product_sku,sum(assign_num) as product_num,0 as scan_num,0 as scan_uid,1 as status,0 as scan_time,UNIX_TIMESTAMP(NOW()) as create_time,0 as return_time,
0 as ship_time,0 as page_num,(@i:=@i+1) as basket_num,0 as ship_uid
from assign_dd_5F,(select @i:=0) as it
GROUP BY orders_id,products_sku;-- 拣货详情表 



-- 在库存分配表erp_stock_assign中查询要分配的任务量，数据组织插入任务汇总表erp_picking_task_new
INSERT into erp_picking_task_new(pick_id,pick_type,sku_num,num,status,pick_user,pick_status,create_time,box,floor,update_time,warehouse,floor_num)
select @maxid as pick_id,pick_type,count(distinct products_sku) as sku_num,sum(assign_num) as num,1 as status,'' as pick_user,0 as pick_status,UNIX_TIMESTAMP(NOW()) as create_time,0 as box,0 as floor,0 as update_time,s_warehouse_id as warehouse,5 as floor_num
from assign_dd_5F;

-- 取得任务汇总表的最大task_id，在库存分配表erp_stock_assign组织数据写入任务明细表erp_picking_task_details_new
SELECT @maxtask_id:=max(task_id) from  erp_picking_task_new;

insert into erp_picking_task_details_new_ls(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
SELECT @maxtask_id as task_id,products_sku,products_location,SUM(product_num) as product_num,0 as actual_num,'' as box,0 as status,'' as pick_user,UNIX_TIMESTAMP(NOW()) as create_time,0 as assign_time,0 as box_status,0 as update_time 
from assign_dd_5F
GROUP BY products_sku,products_location
ORDER BY products_location;

-- 回写 erp_stock_assign 的is_sc标志
-- 优化 update erp_stock_assign set status=300 , task_id=@maxtask_id where orders_id in(select orders_id from a1);
update erp_stock_assign a INNER JOIN a1 b on a.orders_id=b.orders_id set status=300,task_id=@maxtask_id;

-- 临时表也回写标志，减去重复插入数据
-- 优化update assign_a1 set status=300 where orders_id in(select orders_id from a1);
update assign_a1 a INNER JOIN a1 b on a.orders_id=b.orders_id set status=300;

-- 删除临时表
drop table a1;
DROP TABLE assign_dd_5F;
end if;
-- 循环一次减100
set @mdd_5=@mdd_5-@n;

-- 单个任务生成
-- erp_pick_product
INSERT into erp_database_newest.erp_pick_product(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid from erp_pick_product_ls;

-- erp_picking_task_details_new
insert into erp_picking_task_details_new(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
select task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time from erp_picking_task_details_new_ls;

-- 取得订单号
DROP TABLE IF EXISTS erp_pick_product_ls2;
CREATE TEMPORARY table erp_pick_product_ls2
select DISTINCT orders_id,pick_id from erp_pick_product_ls;
-- 写入日志表erp_operate_log
INSERT INTO erp_database_newest.erp_operate_log(operateUser,operateType,operateMod,operateKey,operateText)
select '30','update','ordersManage',orders_id,concat('生成拣货单(',pick_id,')，订单状态变为已打印') from erp_pick_product_ls2;

-- 取得订单分配里面的任务号，更新待发货订单表的标志及任务号
DROP TABLE IF EXISTS order_dd;
CREATE TEMPORARY table order_dd
select distinct a.orders_id,a.task_id,b.pick_id from erp_stock_assign a inner join erp_pick_product_ls2 b on a.orders_id=b.orders_id;

-- 回写订单标志
update erp_database_newest.erp_orders a INNER JOIN erp_pick_product_ls2 b on a.erp_orders_id=b.orders_id 
set a.orders_status=4,a.orders_print_time=now() where a.orders_status=3;

-- 回写待发货订单标志
update stock_out a INNER JOIN order_dd b on a.erp_orders_id=b.orders_id
set a.orders_status=30,a.task_num=b.task_id,a.print_time=UNIX_TIMESTAMP(NOW()),a.pick_id=b.pick_id;

truncate table erp_pick_product_ls;
truncate table erp_picking_task_details_new_ls;

end while;

/* -----------------------单单  6F订单--------------------------------*/
select @mdd_6:=COUNT(*) from assign_a1 where status=200 and is_span=0 and pick_type=1 and floor='6';
while @mdd_6>=@n do 
-- 订单大于100,循环执行写入
DROP TABLE IF EXISTS assign_dd_6F;
-- 单单 获取100个订单生成拣货任务;6F  -- 传入参数
SET @slsql="CREATE TEMPORARY table assign_dd_6F
select orders_id,pick_type,products_sku,products_location,s_warehouse_id,product_num,assign_num from(
select orders_id,pick_type,products_sku,products_location,s_warehouse_id,product_num,assign_num from assign_a1 
where status=200 and is_span=0 and pick_type=1 and floor='6'
order by products_location,products_sku) a LIMIT ?,?";
PREPARE STMT FROM @slsql;
EXECUTE STMT USING @m,@n;
deallocate prepare STMT;

-- 6F的订单数据组织写入对应表，更新相关标志。非最后一次分配，不满100订单不给分配
IF (select count(*) from assign_dd_6F)=@n
then

-- 根据库存分配表取得订单号，在订单表获取物流ID的结果集
DROP TABLE IF EXISTS a1;
CREATE TEMPORARY table a1 select orders_id from assign_dd_6F;
-- 优化select @i:=GROUP_CONCAT(DISTINCT shipmentAutoMatched)  From erp_database_newest.erp_orders  where erp_orders_id in(select orders_id from a1);


-- 在库存分配表erp_stock_assign组织数据写入拣货汇总表 erp_pick
INSERT into erp_database_newest.erp_pick(status,type,warehouse,create_time,uid,order_num,sku_num,num,shipment_id,order_type,pick_start_time,pick_end_time,pick_uid,pick_warehouse,pick_user,pick_action_time,pick_status)
select 1 as status,pick_type as type,s_warehouse_id as warehouse,UNIX_TIMESTAMP(NOW()) as create_time,0 as uid,count(distinct orders_id) as order_num,count(distinct products_sku) as sku_num,sum(assign_num) as num,
0 as shipment_id,0 as order_type,0 as pick_start_time,0 as pick_end_time,0 as pick_uid,s_warehouse_id as pick_warehouse,0 as pick_user,0 as pick_action_time,0 as pick_status
from assign_dd_6F;-- 拣货单表


-- 取得拣货汇总表的最大id，在库存分配表erp_stock_assign组织数据写入拣货明细表erp_pick_product
SELECT @maxid:=max(id) from erp_database_newest.erp_pick;

INSERT into erp_pick_product_ls(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select @maxid as pick_id,orders_id,products_sku as product_sku,sum(assign_num) as product_num,0 as scan_num,0 as scan_uid,1 as status,0 as scan_time,UNIX_TIMESTAMP(NOW()) as create_time,0 as return_time,
0 as ship_time,0 as page_num,(@i:=@i+1) as basket_num,0 as ship_uid
from assign_dd_6F,(select @i:=0) as it
GROUP BY orders_id,products_sku;-- 拣货详情表 



-- 在库存分配表erp_stock_assign中查询要分配的任务量，数据组织插入任务汇总表erp_picking_task_new
INSERT into erp_picking_task_new(pick_id,pick_type,sku_num,num,status,pick_user,pick_status,create_time,box,floor,update_time,warehouse,floor_num)
select @maxid as pick_id,pick_type,count(distinct products_sku) as sku_num,sum(assign_num) as num,1 as status,'' as pick_user,0 as pick_status,UNIX_TIMESTAMP(NOW()) as create_time,0 as box,0 as floor,0 as update_time,s_warehouse_id as warehouse,6 as floor_num
from assign_dd_6F;

-- 取得任务汇总表的最大task_id，在库存分配表erp_stock_assign组织数据写入任务明细表erp_picking_task_details_new
SELECT @maxtask_id:=max(task_id) from  erp_picking_task_new;

insert into erp_picking_task_details_new_ls(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
SELECT @maxtask_id as task_id,products_sku,products_location,SUM(product_num) as product_num,0 as actual_num,'' as box,0 as status,'' as pick_user,UNIX_TIMESTAMP(NOW()) as create_time,0 as assign_time,0 as box_status,0 as update_time 
from assign_dd_6F
GROUP BY products_sku,products_location
ORDER BY products_location;

-- 回写 erp_stock_assign 的is_sc标志
-- 优化 update erp_stock_assign set status=300 , task_id=@maxtask_id where orders_id in(select orders_id from a1);
update erp_stock_assign a INNER JOIN a1 b on a.orders_id=b.orders_id set status=300,task_id=@maxtask_id;

-- 临时表也回写标志，减去重复插入数据
-- 优化update assign_a1 set status=300 where orders_id in(select orders_id from a1);
update assign_a1 a INNER JOIN a1 b on a.orders_id=b.orders_id set status=300;

-- 删除临时表
drop table a1;
DROP TABLE assign_dd_6F;
end if;
-- 循环一次减100
set @mdd_6=@mdd_6-@n;


-- 单个任务生成
-- erp_pick_product
INSERT into erp_database_newest.erp_pick_product(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid from erp_pick_product_ls;

-- erp_picking_task_details_new
insert into erp_picking_task_details_new(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
select task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time from erp_picking_task_details_new_ls;

-- 取得订单号
DROP TABLE IF EXISTS erp_pick_product_ls2;
CREATE TEMPORARY table erp_pick_product_ls2
select DISTINCT orders_id,pick_id from erp_pick_product_ls;
-- 写入日志表erp_operate_log
INSERT INTO erp_database_newest.erp_operate_log(operateUser,operateType,operateMod,operateKey,operateText)
select '30','update','ordersManage',orders_id,concat('生成拣货单(',pick_id,')，订单状态变为已打印') from erp_pick_product_ls2;

-- 取得订单分配里面的任务号，更新待发货订单表的标志及任务号
DROP TABLE IF EXISTS order_dd;
CREATE TEMPORARY table order_dd
select distinct a.orders_id,a.task_id,b.pick_id from erp_stock_assign a inner join erp_pick_product_ls2 b on a.orders_id=b.orders_id;

-- 回写订单标志
update erp_database_newest.erp_orders a INNER JOIN erp_pick_product_ls2 b on a.erp_orders_id=b.orders_id 
set a.orders_status=4,a.orders_print_time=now() where a.orders_status=3;

-- 回写待发货订单标志
update stock_out a INNER JOIN order_dd b on a.erp_orders_id=b.orders_id
set a.orders_status=30,a.task_num=b.task_id,a.print_time=UNIX_TIMESTAMP(NOW()),a.pick_id=b.pick_id;


truncate table erp_pick_product_ls;
truncate table erp_picking_task_details_new_ls;

end while;

/*---------------------------------*/

/* -----------------------单多  4F订单--------不跨区--------------------*/
-- 取得单多的设置参数
select @n2:=value from wms_sys_picktaskrule where Parameter_name='Single' and s_warehouse_id='1035';

select @mdd2_4:=COUNT(*) from assign_a1 where status=200 and is_span=0 and pick_type=2 and floor='4';
while @mdd2_4>=@n2 do 
-- 订单大于40,循环执行写入-- 参数传入
DROP TABLE IF EXISTS a2;
SET @slsql="
CREATE TEMPORARY table a2 
select orders_id
from assign_a1 
where status=200 and is_span=0 and pick_type=2 and floor='4'
GROUP BY orders_id
ORDER BY MAX(products_location)
LIMIT ?,?";
PREPARE STMT FROM @slsql;
EXECUTE STMT USING @m,@n2;
deallocate prepare STMT;

DROP TABLE IF EXISTS assign_dd2_4F;
-- 单单 获取100个订单生成拣货任务;6F
CREATE TEMPORARY table assign_dd2_4F
select orders_id,pick_type,products_sku,products_location,s_warehouse_id,product_num,assign_num from assign_a1 where orders_id in(select orders_id from a2);


-- 6F的订单数据组织写入对应表，更新相关标志。非最后一次分配，不满40订单不给分配
IF (select count(*) from a2)=@n2
then

-- 根据库存分配表取得订单号，在订单表获取物流ID的结果集
-- 优化select @i:=GROUP_CONCAT(DISTINCT shipmentAutoMatched) From erp_database_newest.erp_orders  where erp_orders_id in(select orders_id from a2);


-- 在库存分配表erp_stock_assign组织数据写入拣货汇总表 erp_pick
INSERT into erp_database_newest.erp_pick(status,type,warehouse,create_time,uid,order_num,sku_num,num,shipment_id,order_type,pick_start_time,pick_end_time,pick_uid,pick_warehouse,pick_user,pick_action_time,pick_status)
select 1 as status,pick_type as type,s_warehouse_id as warehouse,UNIX_TIMESTAMP(NOW()) as create_time,0 as uid,count(distinct orders_id) as order_num,count(distinct products_sku) as sku_num,sum(assign_num) as num,
0 as shipment_id,0 as order_type,0 as pick_start_time,0 as pick_end_time,0 as pick_uid,s_warehouse_id as pick_warehouse,0 as pick_user,0 as pick_action_time,0 as pick_status
from assign_dd2_4F;-- 拣货单表


-- 取得拣货汇总表的最大id，在库存分配表erp_stock_assign组织数据写入拣货明细表erp_pick_product
SELECT @maxid:=max(id) from erp_database_newest.erp_pick;

INSERT into erp_pick_product_ls(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select @maxid as pick_id,orders_id,products_sku as product_sku,sum(assign_num) as product_num,0 as scan_num,0 as scan_uid,1 as status,0 as scan_time,UNIX_TIMESTAMP(NOW()) as create_time,0 as return_time,
0 as ship_time,0 as page_num,(@i:=@i+1) as basket_num,0 as ship_uid
from assign_dd2_4F,(select @i:=0) as it
GROUP BY orders_id,products_sku;-- 拣货详情表 



-- 在库存分配表erp_stock_assign中查询要分配的任务量，数据组织插入任务汇总表erp_picking_task_new
INSERT into erp_picking_task_new(pick_id,pick_type,sku_num,num,status,pick_user,pick_status,create_time,box,floor,update_time,warehouse,floor_num)
select @maxid as pick_id,pick_type,count(distinct products_sku) as sku_num,sum(assign_num) as num,1 as status,'' as pick_user,0 as pick_status,UNIX_TIMESTAMP(NOW()) as create_time,0 as box,0 as floor,0 as update_time,s_warehouse_id as warehouse,4 as floor_num
from assign_dd2_4F;

-- 取得任务汇总表的最大task_id，在库存分配表erp_stock_assign组织数据写入任务明细表erp_picking_task_details_new
SELECT @maxtask_id:=max(task_id) from  erp_picking_task_new;

insert into erp_picking_task_details_new_ls(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
SELECT @maxtask_id as task_id,products_sku,products_location,SUM(product_num) as product_num,0 as actual_num,'' as box,0 as status,'' as pick_user,UNIX_TIMESTAMP(NOW()) as create_time,0 as assign_time,0 as box_status,0 as update_time 
from assign_dd2_4F
GROUP BY products_sku,products_location
ORDER BY products_location;

-- 回写 erp_stock_assign 的is_sc标志
-- 优化 update erp_stock_assign set status=300 , task_id=@maxtask_id where orders_id in(select orders_id from a1);
update erp_stock_assign a INNER JOIN a2 b on a.orders_id=b.orders_id set status=300,task_id=@maxtask_id;

-- 临时表也回写标志，减去重复插入数据
-- 优化update assign_a1 set status=300 where orders_id in(select orders_id from a1);
update assign_a1 a INNER JOIN a2 b on a.orders_id=b.orders_id set status=300;



-- 删除临时表
drop table a2;
DROP TABLE assign_dd2_4F;
end if;
-- 循环一次减40 -- 参数传入
set @mdd2_4=@mdd2_4-@n2;


-- 单个任务生成
-- erp_pick_product
INSERT into erp_database_newest.erp_pick_product(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid from erp_pick_product_ls;

-- erp_picking_task_details_new
insert into erp_picking_task_details_new(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
select task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time from erp_picking_task_details_new_ls;

-- 取得订单号
DROP TABLE IF EXISTS erp_pick_product_ls2;
CREATE TEMPORARY table erp_pick_product_ls2
select DISTINCT orders_id,pick_id from erp_pick_product_ls;
-- 写入日志表erp_operate_log
INSERT INTO erp_database_newest.erp_operate_log(operateUser,operateType,operateMod,operateKey,operateText)
select '30','update','ordersManage',orders_id,concat('生成拣货单(',pick_id,')，订单状态变为已打印') from erp_pick_product_ls2;

-- 取得订单分配里面的任务号，更新待发货订单表的标志及任务号
DROP TABLE IF EXISTS order_dd;
CREATE TEMPORARY table order_dd
select distinct a.orders_id,a.task_id,b.pick_id from erp_stock_assign a inner join erp_pick_product_ls2 b on a.orders_id=b.orders_id;

-- 回写订单标志
update erp_database_newest.erp_orders a INNER JOIN erp_pick_product_ls2 b on a.erp_orders_id=b.orders_id 
set a.orders_status=4,a.orders_print_time=now() where a.orders_status=3;

-- 回写待发货订单标志
update stock_out a INNER JOIN order_dd b on a.erp_orders_id=b.orders_id
set a.orders_status=30,a.task_num=b.task_id,a.print_time=UNIX_TIMESTAMP(NOW()),a.pick_id=b.pick_id;

truncate table erp_pick_product_ls;
truncate table erp_picking_task_details_new_ls;

end while;

/* -----------------------单多  5F订单--------不跨区--------------------*/
select @mdd2_5:=COUNT(*) from assign_a1 where status=200 and is_span=0 and pick_type=2 and floor='5';
while @mdd2_5>=@n2 do 
-- 订单大于40,循环执行写入 -- 参数传入
DROP TABLE IF EXISTS a2;
SET @slsql="
CREATE TEMPORARY table a2 
select orders_id
from assign_a1 
where status=200 and is_span=0 and pick_type=2 and  floor='5'
GROUP BY orders_id
ORDER BY MAX(products_location)
LIMIT ?,?";
PREPARE STMT FROM @slsql;
EXECUTE STMT USING @m,@n2;
deallocate prepare STMT;


DROP TABLE IF EXISTS assign_dd2_5F;
-- 单单 获取100个订单生成拣货任务;6F
CREATE TEMPORARY table assign_dd2_5F
select orders_id,pick_type,products_sku,products_location,s_warehouse_id,product_num,assign_num from assign_a1 where orders_id in(select orders_id from a2);


-- 6F的订单数据组织写入对应表，更新相关标志。非最后一次分配，不满100订单不给分配
IF (select count(*) from a2)=@n2
then

-- 根据库存分配表取得订单号，在订单表获取物流ID的结果集
-- 优化select @i:=GROUP_CONCAT(DISTINCT shipmentAutoMatched) From erp_database_newest.erp_orders  where erp_orders_id in(select orders_id from a2);


-- 在库存分配表erp_stock_assign组织数据写入拣货汇总表 erp_pick
INSERT into erp_database_newest.erp_pick(status,type,warehouse,create_time,uid,order_num,sku_num,num,shipment_id,order_type,pick_start_time,pick_end_time,pick_uid,pick_warehouse,pick_user,pick_action_time,pick_status)
select 1 as status,pick_type as type,s_warehouse_id as warehouse,UNIX_TIMESTAMP(NOW()) as create_time,0 as uid,count(distinct orders_id) as order_num,count(distinct products_sku) as sku_num,sum(assign_num) as num,
0 as shipment_id,0 as order_type,0 as pick_start_time,0 as pick_end_time,0 as pick_uid,s_warehouse_id as pick_warehouse,0 as pick_user,0 as pick_action_time,0 as pick_status
from assign_dd2_5F;-- 拣货单表


-- 取得拣货汇总表的最大id，在库存分配表erp_stock_assign组织数据写入拣货明细表erp_pick_product
SELECT @maxid:=max(id) from erp_database_newest.erp_pick;

INSERT into erp_pick_product_ls(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select @maxid as pick_id,orders_id,products_sku as product_sku,sum(assign_num) as product_num,0 as scan_num,0 as scan_uid,1 as status,0 as scan_time,UNIX_TIMESTAMP(NOW()) as create_time,0 as return_time,
0 as ship_time,0 as page_num,(@i:=@i+1) as basket_num,0 as ship_uid
from assign_dd2_5F,(select @i:=0) as it
GROUP BY orders_id,products_sku;-- 拣货详情表 



-- 在库存分配表erp_stock_assign中查询要分配的任务量，数据组织插入任务汇总表erp_picking_task_new
INSERT into erp_picking_task_new(pick_id,pick_type,sku_num,num,status,pick_user,pick_status,create_time,box,floor,update_time,warehouse,floor_num)
select @maxid as pick_id,pick_type,count(distinct products_sku) as sku_num,sum(assign_num) as num,1 as status,'' as pick_user,0 as pick_status,UNIX_TIMESTAMP(NOW()) as create_time,0 as box,0 as floor,0 as update_time,s_warehouse_id as warehouse,5 as floor_num
from assign_dd2_5F;

-- 取得任务汇总表的最大task_id，在库存分配表erp_stock_assign组织数据写入任务明细表erp_picking_task_details_new
SELECT @maxtask_id:=max(task_id) from  erp_picking_task_new;

insert into erp_picking_task_details_new_ls(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
SELECT @maxtask_id as task_id,products_sku,products_location,SUM(product_num) as product_num,0 as actual_num,'' as box,0 as status,'' as pick_user,UNIX_TIMESTAMP(NOW()) as create_time,0 as assign_time,0 as box_status,0 as update_time 
from assign_dd2_5F
GROUP BY products_sku,products_location
ORDER BY products_location;

-- 回写 erp_stock_assign 的is_sc标志
-- 优化 update erp_stock_assign set status=300 , task_id=@maxtask_id where orders_id in(select orders_id from a1);
update erp_stock_assign a INNER JOIN a2 b on a.orders_id=b.orders_id set status=300,task_id=@maxtask_id;

-- 临时表也回写标志，减去重复插入数据
-- 优化update assign_a1 set status=300 where orders_id in(select orders_id from a1);
update assign_a1 a INNER JOIN a2 b on a.orders_id=b.orders_id set status=300;


-- 删除临时表
drop table a2;
DROP TABLE assign_dd2_5F;
end if;
-- 循环一次减40 -- 参数传入
set @mdd2_5=@mdd2_5-@n2;

-- 单个任务生成
-- erp_pick_product
INSERT into erp_database_newest.erp_pick_product(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid from erp_pick_product_ls;

-- erp_picking_task_details_new
insert into erp_picking_task_details_new(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
select task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time from erp_picking_task_details_new_ls;

-- 取得订单号
DROP TABLE IF EXISTS erp_pick_product_ls2;
CREATE TEMPORARY table erp_pick_product_ls2
select DISTINCT orders_id,pick_id from erp_pick_product_ls;
-- 写入日志表erp_operate_log
INSERT INTO erp_database_newest.erp_operate_log(operateUser,operateType,operateMod,operateKey,operateText)
select '30','update','ordersManage',orders_id,concat('生成拣货单(',pick_id,')，订单状态变为已打印') from erp_pick_product_ls2;

-- 取得订单分配里面的任务号，更新待发货订单表的标志及任务号
DROP TABLE IF EXISTS order_dd;
CREATE TEMPORARY table order_dd
select distinct a.orders_id,a.task_id,b.pick_id from erp_stock_assign a inner join erp_pick_product_ls2 b on a.orders_id=b.orders_id;

-- 回写订单标志
update erp_database_newest.erp_orders a INNER JOIN erp_pick_product_ls2 b on a.erp_orders_id=b.orders_id 
set a.orders_status=4,a.orders_print_time=now() where a.orders_status=3;

-- 回写待发货订单标志
update stock_out a INNER JOIN order_dd b on a.erp_orders_id=b.orders_id
set a.orders_status=30,a.task_num=b.task_id,a.print_time=UNIX_TIMESTAMP(NOW()),a.pick_id=b.pick_id;

truncate table erp_pick_product_ls;
truncate table erp_picking_task_details_new_ls;
end while;


/* -----------------------单多  6F订单---不跨区-----------------------*/
select @mdd2_6:=COUNT(*) from assign_a1 where status=200 and is_span=0 and pick_type=2 and floor='6';
while @mdd2_6>=@n2 do 
-- 订单大于40,循环执行写入
DROP TABLE IF EXISTS a2;
-- 参数传入
SET @slsql="
CREATE TEMPORARY table a2 
select orders_id
from assign_a1 
where status=200 and is_span=0 and pick_type=2 and floor='6'
GROUP BY orders_id
ORDER BY MAX(products_location)
LIMIT ?,?";
PREPARE STMT FROM @slsql;
EXECUTE STMT USING @m,@n2;
deallocate prepare STMT;

DROP TABLE IF EXISTS assign_dd2_6F;
-- 单单 获取100个订单生成拣货任务;6F
CREATE TEMPORARY table assign_dd2_6F
select orders_id,pick_type,products_sku,products_location,s_warehouse_id,product_num,assign_num from assign_a1 where orders_id in(select orders_id from a2);


-- 订单数据组织写入对应表，更新相关标志。非最后一次分配，不满100订单不给分配
IF (select count(*) from a2)=@n2
then

-- 根据库存分配表取得订单号，在订单表获取物流ID的结果集
-- 优化select @i:=GROUP_CONCAT(DISTINCT shipmentAutoMatched) From erp_database_newest.erp_orders  where erp_orders_id in(select orders_id from a2);


-- 在库存分配表erp_stock_assign组织数据写入拣货汇总表 erp_pick
INSERT into erp_database_newest.erp_pick(status,type,warehouse,create_time,uid,order_num,sku_num,num,shipment_id,order_type,pick_start_time,pick_end_time,pick_uid,pick_warehouse,pick_user,pick_action_time,pick_status)
select 1 as status,pick_type as type,s_warehouse_id as warehouse,UNIX_TIMESTAMP(NOW()) as create_time,0 as uid,count(distinct orders_id) as order_num,count(distinct products_sku) as sku_num,sum(assign_num) as num,
0 as shipment_id,0 as order_type,0 as pick_start_time,0 as pick_end_time,0 as pick_uid,s_warehouse_id as pick_warehouse,0 as pick_user,0 as pick_action_time,0 as pick_status
from assign_dd2_6F;-- 拣货单表


-- 取得拣货汇总表的最大id，在库存分配表erp_stock_assign组织数据写入拣货明细表erp_pick_product
SELECT @maxid:=max(id) from erp_database_newest.erp_pick;

INSERT into erp_pick_product_ls(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select @maxid as pick_id,orders_id,products_sku as product_sku,sum(assign_num) as product_num,0 as scan_num,0 as scan_uid,1 as status,0 as scan_time,UNIX_TIMESTAMP(NOW()) as create_time,0 as return_time,
0 as ship_time,0 as page_num,(@i:=@i+1) as basket_num,0 as ship_uid
from assign_dd2_6F,(select @i:=0) as it
GROUP BY orders_id,products_sku;-- 拣货详情表 



-- 在库存分配表erp_stock_assign中查询要分配的任务量，数据组织插入任务汇总表erp_picking_task_new
INSERT into erp_picking_task_new(pick_id,pick_type,sku_num,num,status,pick_user,pick_status,create_time,box,floor,update_time,warehouse,floor_num)
select @maxid as pick_id,pick_type,count(distinct products_sku) as sku_num,sum(assign_num) as num,1 as status,'' as pick_user,0 as pick_status,UNIX_TIMESTAMP(NOW()) as create_time,0 as box,0 as floor,0 as update_time,s_warehouse_id as warehouse,6 as floor_num
from assign_dd2_6F;

-- 取得任务汇总表的最大task_id，在库存分配表erp_stock_assign组织数据写入任务明细表erp_picking_task_details_new
SELECT @maxtask_id:=max(task_id) from  erp_picking_task_new;

insert into erp_picking_task_details_new_ls(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
SELECT @maxtask_id as task_id,products_sku,products_location,SUM(product_num) as product_num,0 as actual_num,'' as box,0 as status,'' as pick_user,UNIX_TIMESTAMP(NOW()) as create_time,0 as assign_time,0 as box_status,0 as update_time 
from assign_dd2_6F
GROUP BY products_sku,products_location
ORDER BY products_location;

-- 回写 erp_stock_assign 的is_sc标志
-- 优化 update erp_stock_assign set status=300 , task_id=@maxtask_id where orders_id in(select orders_id from a1);
update erp_stock_assign a INNER JOIN a2 b on a.orders_id=b.orders_id set status=300,task_id=@maxtask_id;

-- 临时表也回写标志，减去重复插入数据
-- 优化update assign_a1 set status=300 where orders_id in(select orders_id from a1);
update assign_a1 a INNER JOIN a2 b on a.orders_id=b.orders_id set status=300;



-- 删除临时表
drop table a2;
DROP TABLE assign_dd2_6F;
end if;
-- 循环一次减40
set @mdd2_6=@mdd2_6-@n2;


-- 单个任务生成
-- erp_pick_product
INSERT into erp_database_newest.erp_pick_product(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid from erp_pick_product_ls;

-- erp_picking_task_details_new
insert into erp_picking_task_details_new(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
select task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time from erp_picking_task_details_new_ls;

-- 取得订单号
DROP TABLE IF EXISTS erp_pick_product_ls2;
CREATE TEMPORARY table erp_pick_product_ls2
select DISTINCT orders_id,pick_id from erp_pick_product_ls;
-- 写入日志表erp_operate_log
INSERT INTO erp_database_newest.erp_operate_log(operateUser,operateType,operateMod,operateKey,operateText)
select '30','update','ordersManage',orders_id,concat('生成拣货单(',pick_id,')，订单状态变为已打印') from erp_pick_product_ls2;

-- 取得订单分配里面的任务号，更新待发货订单表的标志及任务号
DROP TABLE IF EXISTS order_dd;
CREATE TEMPORARY table order_dd
select distinct a.orders_id,a.task_id,b.pick_id from erp_stock_assign a inner join erp_pick_product_ls2 b on a.orders_id=b.orders_id;
-- 回写订单标志
update erp_database_newest.erp_orders a INNER JOIN erp_pick_product_ls2 b on a.erp_orders_id=b.orders_id 
set a.orders_status=4,a.orders_print_time=now() where a.orders_status=3;

-- 回写待发货订单标志
update stock_out a INNER JOIN order_dd b on a.erp_orders_id=b.orders_id
set a.orders_status=30,a.task_num=b.task_id,a.print_time=UNIX_TIMESTAMP(NOW()),a.pick_id=b.pick_id;

truncate table erp_pick_product_ls;
truncate table erp_picking_task_details_new_ls;

end while;

/* -----------------------单多  订单---跨区-----------------------*/
select @mdd2:=COUNT(*) from assign_a1 where status=200 and is_span=1 and pick_type=2;
while @mdd2>=@n2 do 
-- 订单大于40,循环执行写入
DROP TABLE IF EXISTS a2;
-- 参数传入
SET @slsql="
CREATE TEMPORARY table a2 
select orders_id
from assign_a1 
where status=200 and is_span=1 and pick_type=2
GROUP BY orders_id
ORDER BY MAX(products_location)
LIMIT ?,?";
PREPARE STMT FROM @slsql;
EXECUTE STMT USING @m,@n2;
deallocate prepare STMT;

DROP TABLE IF EXISTS assign_dd2_kq;
-- 单
CREATE TEMPORARY table assign_dd2_kq
select orders_id,pick_type,products_sku,products_location,s_warehouse_id,product_num,assign_num,floor from assign_a1 where orders_id in(select orders_id from a2);


-- 订单数据组织写入对应表，更新相关标志。非最后一次分配，不满40订单不给分配
IF (select count(*) from a2)=@n2
then

-- 根据库存分配表取得订单号，在订单表获取物流ID的结果集
-- 优化select @i:=GROUP_CONCAT(DISTINCT shipmentAutoMatched) From erp_database_newest.erp_orders  where erp_orders_id in(select orders_id from a2);
-- 跨区的取得分配单的楼层组合
select @i2:=GROUP_CONCAT(DISTINCT floor) from assign_dd2_kq;

-- 在库存分配表erp_stock_assign组织数据写入拣货汇总表 erp_pick
INSERT into erp_database_newest.erp_pick(status,type,warehouse,create_time,uid,order_num,sku_num,num,shipment_id,order_type,pick_start_time,pick_end_time,pick_uid,pick_warehouse,pick_user,pick_action_time,pick_status)
select 1 as status,pick_type as type,s_warehouse_id as warehouse,UNIX_TIMESTAMP(NOW()) as create_time,0 as uid,count(distinct orders_id) as order_num,count(distinct products_sku) as sku_num,sum(assign_num) as num,
0 as shipment_id,0 as order_type,0 as pick_start_time,0 as pick_end_time,0 as pick_uid,s_warehouse_id as pick_warehouse,0 as pick_user,0 as pick_action_time,0 as pick_status
from assign_dd2_kq;-- 拣货单表


-- 取得拣货汇总表的最大id，在库存分配表erp_stock_assign组织数据写入拣货明细表erp_pick_product
SELECT @maxid:=max(id) from erp_database_newest.erp_pick;

INSERT into erp_pick_product_ls(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select @maxid as pick_id,orders_id,products_sku as product_sku,sum(assign_num) as product_num,0 as scan_num,0 as scan_uid,1 as status,0 as scan_time,UNIX_TIMESTAMP(NOW()) as create_time,0 as return_time,
0 as ship_time,0 as page_num,(@i:=@i+1) as basket_num,0 as ship_uid
from assign_dd2_kq,(select @i:=0) as it
GROUP BY orders_id,products_sku;-- 拣货详情表 



-- 在库存分配表erp_stock_assign中查询要分配的任务量，数据组织插入任务汇总表erp_picking_task_new
INSERT into erp_picking_task_new(pick_id,pick_type,sku_num,num,status,pick_user,pick_status,create_time,box,floor,update_time,warehouse,floor_num)
select @maxid as pick_id,pick_type,count(distinct products_sku) as sku_num,sum(assign_num) as num,1 as status,'' as pick_user,0 as pick_status,UNIX_TIMESTAMP(NOW()) as create_time,0 as box,0 as floor,0 as update_time,s_warehouse_id as warehouse,@i2 as floor_num
from assign_dd2_kq;

-- 取得任务汇总表的最大task_id，在库存分配表erp_stock_assign组织数据写入任务明细表erp_picking_task_details_new
SELECT @maxtask_id:=max(task_id) from  erp_picking_task_new;

insert into erp_picking_task_details_new_ls(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
SELECT @maxtask_id as task_id,products_sku,products_location,SUM(product_num) as product_num,0 as actual_num,'' as box,0 as status,'' as pick_user,UNIX_TIMESTAMP(NOW()) as create_time,0 as assign_time,0 as box_status,0 as update_time 
from assign_dd2_kq
GROUP BY products_sku,products_location
ORDER BY products_location;

-- 回写 erp_stock_assign 的is_sc标志
-- 优化 update erp_stock_assign set status=300 , task_id=@maxtask_id where orders_id in(select orders_id from a1);
update erp_stock_assign a INNER JOIN a2 b on a.orders_id=b.orders_id set status=300,task_id=@maxtask_id;

-- 临时表也回写标志，减去重复插入数据
-- 优化update assign_a1 set status=300 where orders_id in(select orders_id from a1);
update assign_a1 a INNER JOIN a2 b on a.orders_id=b.orders_id set status=300;


-- 删除临时表
drop table a2;
DROP TABLE assign_dd2_kq;
end if;
-- 循环一次减40
set @mdd2=@mdd2-@n2;


-- 单个任务生成
-- erp_pick_product
INSERT into erp_database_newest.erp_pick_product(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid from erp_pick_product_ls;

-- erp_picking_task_details_new
insert into erp_picking_task_details_new(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
select task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time from erp_picking_task_details_new_ls;

-- 取得订单号
DROP TABLE IF EXISTS erp_pick_product_ls2;
CREATE TEMPORARY table erp_pick_product_ls2
select DISTINCT orders_id,pick_id from erp_pick_product_ls;
-- 写入日志表erp_operate_log
INSERT INTO erp_database_newest.erp_operate_log(operateUser,operateType,operateMod,operateKey,operateText)
select '30','update','ordersManage',orders_id,concat('生成拣货单(',pick_id,')，订单状态变为已打印') from erp_pick_product_ls2;

-- 取得订单分配里面的任务号，更新待发货订单表的标志及任务号
DROP TABLE IF EXISTS order_dd;
CREATE TEMPORARY table order_dd
select distinct a.orders_id,a.task_id,b.pick_id from erp_stock_assign a inner join erp_pick_product_ls2 b on a.orders_id=b.orders_id;

-- 回写订单标志
update erp_database_newest.erp_orders a INNER JOIN erp_pick_product_ls2 b on a.erp_orders_id=b.orders_id 
set a.orders_status=4,a.orders_print_time=now() where a.orders_status=3;

-- 回写待发货订单标志
update stock_out a INNER JOIN order_dd b on a.erp_orders_id=b.orders_id
set a.orders_status=30,a.task_num=b.task_id,a.print_time=UNIX_TIMESTAMP(NOW()),a.pick_id=b.pick_id;


truncate table erp_pick_product_ls;
truncate table erp_picking_task_details_new_ls;

end while;

/* -----------------------多多  4F订单--------不跨区--------------------*/
-- 取得多多的设置参数
select @n3:=value from wms_sys_picktaskrule where Parameter_name='Much' and s_warehouse_id='1035';

select @mdd3_4:=COUNT(*) from assign_a1 where status=200 and is_span=0 and pick_type=3 and floor='4';
while @mdd3_4>=@n3 do 
-- 订单大于40,循环执行写入
DROP TABLE IF EXISTS a3;
-- 取得多多4楼的前40订单
-- 参数传入
SET @slsql="
CREATE TEMPORARY table a3 
select orders_id
from assign_a1 
where status=200 and is_span=0 and pick_type=3 and floor='4'
GROUP BY orders_id
ORDER BY MAX(products_location)
LIMIT ?,?";
PREPARE STMT FROM @slsql;
EXECUTE STMT USING @m,@n3;
deallocate prepare STMT;
-- 取得订单的篮子号
DROP TABLE IF EXISTS a3_1;
CREATE TEMPORARY table a3_1
select orders_id,(@i:=@i+1) as basket_num from a3,(select @i:=0) as it;

DROP TABLE IF EXISTS assign_dd3_4F;
-- 
CREATE TEMPORARY table assign_dd3_4F
select b.basket_num,a.orders_id,a.pick_type,a.status,a.products_sku,a.products_location,a.s_warehouse_id,a.product_num,a.assign_num,a.is_span
from assign_a1 a INNER JOIN a3_1 b ON a.orders_id=b.orders_id;

-- 订单数据组织写入对应表，更新相关标志。非最后一次分配，不满40订单不给分配
IF (select count(*) from a3)=@n3
then

-- 根据库存分配表取得订单号，在订单表获取物流ID的结果集
-- 优化select @i:=GROUP_CONCAT(DISTINCT shipmentAutoMatched) From erp_database_newest.erp_orders where erp_orders_id in(select orders_id from a3);


-- 在库存分配表erp_stock_assign组织数据写入拣货汇总表 erp_pick
INSERT into erp_database_newest.erp_pick(status,type,warehouse,create_time,uid,order_num,sku_num,num,shipment_id,order_type,pick_start_time,pick_end_time,pick_uid,pick_warehouse,pick_user,pick_action_time,pick_status)
select 1 as status,pick_type as type,s_warehouse_id as warehouse,UNIX_TIMESTAMP(NOW()) as create_time,0 as uid,count(distinct orders_id) as order_num,count(distinct products_sku) as sku_num,sum(assign_num) as num,
0 as shipment_id,0 as order_type,0 as pick_start_time,0 as pick_end_time,0 as pick_uid,s_warehouse_id as pick_warehouse,0 as pick_user,0 as pick_action_time,0 as pick_status
from assign_dd3_4F;-- 拣货单表


-- 取得拣货汇总表的最大id，在库存分配表erp_stock_assign组织数据写入拣货明细表erp_pick_product
SELECT @maxid:=max(id) from erp_database_newest.erp_pick;

INSERT into erp_pick_product_ls(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select @maxid as pick_id,orders_id,products_sku as product_sku,sum(assign_num) as product_num,0 as scan_num,0 as scan_uid,1 as status,0 as scan_time,UNIX_TIMESTAMP(NOW()) as create_time,0 as return_time,
0 as ship_time,0 as page_num,basket_num,0 as ship_uid
from assign_dd3_4F
GROUP BY orders_id,products_sku;-- 拣货详情表 



-- 在库存分配表erp_stock_assign中查询要分配的任务量，数据组织插入任务汇总表erp_picking_task_new
INSERT into erp_picking_task_new(pick_id,pick_type,sku_num,num,status,pick_user,pick_status,create_time,box,floor,update_time,warehouse,floor_num)
select @maxid as pick_id,pick_type,count(distinct products_sku) as sku_num,sum(assign_num) as num,1 as status,'' as pick_user,0 as pick_status,UNIX_TIMESTAMP(NOW()) as create_time,0 as box,0 as floor,0 as update_time,s_warehouse_id as warehouse,4 as floor_num
from assign_dd3_4F;

-- 取得任务汇总表的最大task_id，在库存分配表erp_stock_assign组织数据写入任务明细表erp_picking_task_details_new
SELECT @maxtask_id:=max(task_id) from  erp_picking_task_new;

insert into erp_picking_task_details_new_ls(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
SELECT @maxtask_id as task_id,products_sku,products_location,SUM(product_num) as product_num,0 as actual_num,'' as box,0 as status,'' as pick_user,UNIX_TIMESTAMP(NOW()) as create_time,0 as assign_time,0 as box_status,0 as update_time 
from assign_dd3_4F
GROUP BY products_sku,products_location
ORDER BY products_location;

-- 回写 erp_stock_assign 的is_sc标志
-- 优化 update erp_stock_assign set status=300 , task_id=@maxtask_id where orders_id in(select orders_id from a1);
update erp_stock_assign a INNER JOIN a3 b on a.orders_id=b.orders_id set status=300,task_id=@maxtask_id;

-- 临时表也回写标志，减去重复插入数据
-- 优化update assign_a1 set status=300 where orders_id in(select orders_id from a1);
update assign_a1 a INNER JOIN a3 b on a.orders_id=b.orders_id set status=300;

-- 删除临时表
drop table a3;
drop table a3_1;
DROP TABLE assign_dd3_4F;
end if;
-- 循环一次减40
set @mdd3_4=@mdd3_4-@n3;


-- 单个任务生成
-- erp_pick_product
INSERT into erp_database_newest.erp_pick_product(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid from erp_pick_product_ls;

-- erp_picking_task_details_new
insert into erp_picking_task_details_new(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
select task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time from erp_picking_task_details_new_ls;

-- 取得订单号
DROP TABLE IF EXISTS erp_pick_product_ls2;
CREATE TEMPORARY table erp_pick_product_ls2
select DISTINCT orders_id,pick_id from erp_pick_product_ls;
-- 写入日志表erp_operate_log
INSERT INTO erp_database_newest.erp_operate_log(operateUser,operateType,operateMod,operateKey,operateText)
select '30','update','ordersManage',orders_id,concat('生成拣货单(',pick_id,')，订单状态变为已打印') from erp_pick_product_ls2;

-- 取得订单分配里面的任务号，更新待发货订单表的标志及任务号
DROP TABLE IF EXISTS order_dd;
CREATE TEMPORARY table order_dd
select distinct a.orders_id,a.task_id,b.pick_id from erp_stock_assign a inner join erp_pick_product_ls2 b on a.orders_id=b.orders_id;
-- 回写订单标志
update erp_database_newest.erp_orders a INNER JOIN erp_pick_product_ls2 b on a.erp_orders_id=b.orders_id 
set a.orders_status=4,a.orders_print_time=now() where a.orders_status=3;

-- 回写待发货订单标志
update stock_out a INNER JOIN order_dd b on a.erp_orders_id=b.orders_id
set a.orders_status=30,a.task_num=b.task_id,a.print_time=UNIX_TIMESTAMP(NOW()),a.pick_id=b.pick_id;

truncate table erp_pick_product_ls;
truncate table erp_picking_task_details_new_ls;


end while;

/* -----------------------多多  5F订单--------不跨区--------------------*/
select @mdd3_5:=COUNT(*) from assign_a1 where status=200 and is_span=0 and pick_type=3 and floor='5';
while @mdd3_5>=@n3 do 
-- 订单大于40,循环执行写入
DROP TABLE IF EXISTS a3;
-- 取得多多5楼的前40订单
-- 参数传入
SET @slsql="
CREATE TEMPORARY table a3 
select orders_id
from assign_a1 
where status=200 and is_span=0 and pick_type=3 and floor='5'
GROUP BY orders_id
ORDER BY MAX(products_location)
LIMIT ?,?";
PREPARE STMT FROM @slsql;
EXECUTE STMT USING @m,@n3;
deallocate prepare STMT;

-- 取得订单的篮子号
DROP TABLE IF EXISTS a3_1;
CREATE TEMPORARY table a3_1
select orders_id,(@i:=@i+1) as basket_num from a3,(select @i:=0) as it;

DROP TABLE IF EXISTS assign_dd3_5F;
-- 
CREATE TEMPORARY table assign_dd3_5F
select b.basket_num,a.orders_id,a.pick_type,a.status,a.products_sku,a.products_location,a.s_warehouse_id,a.product_num,a.assign_num,a.is_span
from assign_a1 a INNER JOIN a3_1 b ON a.orders_id=b.orders_id;

-- 订单数据组织写入对应表，更新相关标志。非最后一次分配，不满40订单不给分配
IF (select count(*) from a3)=@n3
then

-- 根据库存分配表取得订单号，在订单表获取物流ID的结果集
-- 优化select @i:=GROUP_CONCAT(DISTINCT shipmentAutoMatched) From erp_database_newest.erp_orders  where erp_orders_id in(select orders_id from a3);


-- 在库存分配表erp_stock_assign组织数据写入拣货汇总表 erp_pick
INSERT into erp_database_newest.erp_pick(status,type,warehouse,create_time,uid,order_num,sku_num,num,shipment_id,order_type,pick_start_time,pick_end_time,pick_uid,pick_warehouse,pick_user,pick_action_time,pick_status)
select 1 as status,pick_type as type,s_warehouse_id as warehouse,UNIX_TIMESTAMP(NOW()) as create_time,0 as uid,count(distinct orders_id) as order_num,count(distinct products_sku) as sku_num,sum(assign_num) as num,
0 as shipment_id,0 as order_type,0 as pick_start_time,0 as pick_end_time,0 as pick_uid,s_warehouse_id as pick_warehouse,0 as pick_user,0 as pick_action_time,0 as pick_status
from assign_dd3_5F;-- 拣货单表


-- 取得拣货汇总表的最大id，在库存分配表erp_stock_assign组织数据写入拣货明细表erp_pick_product
SELECT @maxid:=max(id) from erp_database_newest.erp_pick;

INSERT into erp_pick_product_ls(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select @maxid as pick_id,orders_id,products_sku as product_sku,sum(assign_num) as product_num,0 as scan_num,0 as scan_uid,1 as status,0 as scan_time,UNIX_TIMESTAMP(NOW()) as create_time,0 as return_time,
0 as ship_time,0 as page_num,basket_num,0 as ship_uid
from assign_dd3_5F
GROUP BY orders_id,products_sku;-- 拣货详情表 



-- 在库存分配表erp_stock_assign中查询要分配的任务量，数据组织插入任务汇总表erp_picking_task_new
INSERT into erp_picking_task_new(pick_id,pick_type,sku_num,num,status,pick_user,pick_status,create_time,box,floor,update_time,warehouse,floor_num)
select @maxid as pick_id,pick_type,count(distinct products_sku) as sku_num,sum(assign_num) as num,1 as status,'' as pick_user,0 as pick_status,UNIX_TIMESTAMP(NOW()) as create_time,0 as box,0 as floor,0 as update_time,s_warehouse_id as warehouse,5 as floor_num
from assign_dd3_5F;

-- 取得任务汇总表的最大task_id，在库存分配表erp_stock_assign组织数据写入任务明细表erp_picking_task_details_new
SELECT @maxtask_id:=max(task_id) from  erp_picking_task_new;

insert into erp_picking_task_details_new_ls(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
SELECT @maxtask_id as task_id,products_sku,products_location,SUM(product_num) as product_num,0 as actual_num,'' as box,0 as status,'' as pick_user,UNIX_TIMESTAMP(NOW()) as create_time,0 as assign_time,0 as box_status,0 as update_time 
from assign_dd3_5F
GROUP BY products_sku,products_location
ORDER BY products_location;

-- 回写 erp_stock_assign 的is_sc标志
-- 优化 update erp_stock_assign set status=300 , task_id=@maxtask_id where orders_id in(select orders_id from a1);
update erp_stock_assign a INNER JOIN a3 b on a.orders_id=b.orders_id set status=300,task_id=@maxtask_id;

-- 临时表也回写标志，减去重复插入数据
-- 优化update assign_a1 set status=300 where orders_id in(select orders_id from a1);
update assign_a1 a INNER JOIN a3 b on a.orders_id=b.orders_id set status=300;


-- 删除临时表
drop table a3;
drop table a3_1;
DROP TABLE assign_dd3_5F;
end if;
-- 循环一次减40
set @mdd3_5=@mdd3_5-@n3;


-- 单个任务生成
-- erp_pick_product
INSERT into erp_database_newest.erp_pick_product(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid from erp_pick_product_ls;

-- erp_picking_task_details_new
insert into erp_picking_task_details_new(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
select task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time from erp_picking_task_details_new_ls;

-- 取得订单号
DROP TABLE IF EXISTS erp_pick_product_ls2;
CREATE TEMPORARY table erp_pick_product_ls2
select DISTINCT orders_id,pick_id from erp_pick_product_ls;
-- 写入日志表erp_operate_log
INSERT INTO erp_database_newest.erp_operate_log(operateUser,operateType,operateMod,operateKey,operateText)
select '30','update','ordersManage',orders_id,concat('生成拣货单(',pick_id,')，订单状态变为已打印') from erp_pick_product_ls2;

-- 取得订单分配里面的任务号，更新待发货订单表的标志及任务号
DROP TABLE IF EXISTS order_dd;
CREATE TEMPORARY table order_dd
select distinct a.orders_id,a.task_id,b.pick_id from erp_stock_assign a inner join erp_pick_product_ls2 b on a.orders_id=b.orders_id;
-- 回写订单标志
update erp_database_newest.erp_orders a INNER JOIN erp_pick_product_ls2 b on a.erp_orders_id=b.orders_id 
set a.orders_status=4,a.orders_print_time=now() where a.orders_status=3;

-- 回写待发货订单标志
update stock_out a INNER JOIN order_dd b on a.erp_orders_id=b.orders_id
set a.orders_status=30,a.task_num=b.task_id,a.print_time=UNIX_TIMESTAMP(NOW()),a.pick_id=b.pick_id;

truncate table erp_pick_product_ls;
truncate table erp_picking_task_details_new_ls;

end while;


/* -----------------------多多  6F订单--------不跨区--------------------*/
select @mdd3_6:=COUNT(*) from assign_a1 where status=200 and is_span=0 and pick_type=3 and floor='6';
while @mdd3_6>=@n3 do 
-- 订单大于40,循环执行写入
DROP TABLE IF EXISTS a3;
-- 取得多多6楼的前40订单
-- 参数传入
SET @slsql="CREATE TEMPORARY table a3 
select orders_id
from assign_a1 
where status=200 and is_span=0 and pick_type=3 and floor='6'
GROUP BY orders_id
ORDER BY MAX(products_location)
LIMIT ?,?";
PREPARE STMT FROM @slsql;
EXECUTE STMT USING @m,@n3;
deallocate prepare STMT;
-- 取得订单的篮子号
DROP TABLE IF EXISTS a3_1;
CREATE TEMPORARY table a3_1
select orders_id,(@i:=@i+1) as basket_num from a3,(select @i:=0) as it;

DROP TABLE IF EXISTS assign_dd3_6F;
-- 
CREATE TEMPORARY table assign_dd3_6F
select b.basket_num,a.orders_id,a.pick_type,a.status,a.products_sku,a.products_location,a.s_warehouse_id,a.product_num,a.assign_num,a.is_span
from assign_a1 a INNER JOIN a3_1 b ON a.orders_id=b.orders_id;

-- 订单数据组织写入对应表，更新相关标志。非最后一次分配，不满40订单不给分配
IF (select count(*) from a3)=@n3
then

-- 根据库存分配表取得订单号，在订单表获取物流ID的结果集
-- 优化select @i:=GROUP_CONCAT(DISTINCT shipmentAutoMatched) From erp_database_newest.erp_orders  where erp_orders_id in(select orders_id from a3);


-- 在库存分配表erp_stock_assign组织数据写入拣货汇总表 erp_pick
INSERT into erp_database_newest.erp_pick(status,type,warehouse,create_time,uid,order_num,sku_num,num,shipment_id,order_type,pick_start_time,pick_end_time,pick_uid,pick_warehouse,pick_user,pick_action_time,pick_status)
select 1 as status,pick_type as type,s_warehouse_id as warehouse,UNIX_TIMESTAMP(NOW()) as create_time,0 as uid,count(distinct orders_id) as order_num,count(distinct products_sku) as sku_num,sum(assign_num) as num,
0 as shipment_id,0 as order_type,0 as pick_start_time,0 as pick_end_time,0 as pick_uid,s_warehouse_id as pick_warehouse,0 as pick_user,0 as pick_action_time,0 as pick_status
from assign_dd3_6F;-- 拣货单表


-- 取得拣货汇总表的最大id，在库存分配表erp_stock_assign组织数据写入拣货明细表erp_pick_product
SELECT @maxid:=max(id) from erp_database_newest.erp_pick;

INSERT into erp_pick_product_ls(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select @maxid as pick_id,orders_id,products_sku as product_sku,sum(assign_num) as product_num,0 as scan_num,0 as scan_uid,1 as status,0 as scan_time,UNIX_TIMESTAMP(NOW()) as create_time,0 as return_time,
0 as ship_time,0 as page_num,basket_num,0 as ship_uid
from assign_dd3_6F
GROUP BY orders_id,products_sku;-- 拣货详情表 



-- 在库存分配表erp_stock_assign中查询要分配的任务量，数据组织插入任务汇总表erp_picking_task_new
INSERT into erp_picking_task_new(pick_id,pick_type,sku_num,num,status,pick_user,pick_status,create_time,box,floor,update_time,warehouse,floor_num)
select @maxid as pick_id,pick_type,count(distinct products_sku) as sku_num,sum(assign_num) as num,1 as status,'' as pick_user,0 as pick_status,UNIX_TIMESTAMP(NOW()) as create_time,0 as box,0 as floor,0 as update_time,s_warehouse_id as warehouse,6 as floor_num
from assign_dd3_6F;

-- 取得任务汇总表的最大task_id，在库存分配表erp_stock_assign组织数据写入任务明细表erp_picking_task_details_new
SELECT @maxtask_id:=max(task_id) from  erp_picking_task_new;

insert into erp_picking_task_details_new_ls(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
SELECT @maxtask_id as task_id,products_sku,products_location,SUM(product_num) as product_num,0 as actual_num,'' as box,0 as status,'' as pick_user,UNIX_TIMESTAMP(NOW()) as create_time,0 as assign_time,0 as box_status,0 as update_time 
from assign_dd3_6F
GROUP BY products_sku,products_location
ORDER BY products_location;

-- 回写 erp_stock_assign 的is_sc标志
-- 优化 update erp_stock_assign set status=300 , task_id=@maxtask_id where orders_id in(select orders_id from a1);
update erp_stock_assign a INNER JOIN a3 b on a.orders_id=b.orders_id set status=300,task_id=@maxtask_id;

-- 临时表也回写标志，减去重复插入数据
-- 优化update assign_a1 set status=300 where orders_id in(select orders_id from a1);
update assign_a1 a INNER JOIN a3 b on a.orders_id=b.orders_id set status=300;


-- 删除临时表
drop table a3;
drop table a3_1;
DROP TABLE assign_dd3_6F;
end if;
-- 循环一次减40
set @mdd3_6=@mdd3_6-@n3;


-- 单个任务生成
-- erp_pick_product
INSERT into erp_database_newest.erp_pick_product(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid from erp_pick_product_ls;

-- erp_picking_task_details_new
insert into erp_picking_task_details_new(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
select task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time from erp_picking_task_details_new_ls;

-- 取得订单号
DROP TABLE IF EXISTS erp_pick_product_ls2;
CREATE TEMPORARY table erp_pick_product_ls2
select DISTINCT orders_id,pick_id from erp_pick_product_ls;
-- 写入日志表erp_operate_log
INSERT INTO erp_database_newest.erp_operate_log(operateUser,operateType,operateMod,operateKey,operateText)
select '30','update','ordersManage',orders_id,concat('生成拣货单(',pick_id,')，订单状态变为已打印') from erp_pick_product_ls2;

-- 取得订单分配里面的任务号，更新待发货订单表的标志及任务号
DROP TABLE IF EXISTS order_dd;
CREATE TEMPORARY table order_dd
select distinct a.orders_id,a.task_id,b.pick_id from erp_stock_assign a inner join erp_pick_product_ls2 b on a.orders_id=b.orders_id;
-- 回写订单标志
update erp_database_newest.erp_orders a INNER JOIN erp_pick_product_ls2 b on a.erp_orders_id=b.orders_id 
set a.orders_status=4,a.orders_print_time=now() where a.orders_status=3;

-- 回写待发货订单标志
update stock_out a INNER JOIN order_dd b on a.erp_orders_id=b.orders_id
set a.orders_status=30,a.task_num=b.task_id,a.print_time=UNIX_TIMESTAMP(NOW()),a.pick_id=b.pick_id;

truncate table erp_pick_product_ls;
truncate table erp_picking_task_details_new_ls;

end while;


/* -----------------------多多  订单---跨区-----------------------*/
select @mdd3:=COUNT(*) from assign_a1 where status=200 and is_span=1 and pick_type=3;
while @mdd3>=@n3 do 
-- 订单大于40,循环执行写入
DROP TABLE IF EXISTS a3;
-- 取得跨区多多订单的前40
-- 参数传入
SET @slsql="CREATE TEMPORARY table a3 
select orders_id
from assign_a1 
where status=200 and is_span=1 and pick_type=3
GROUP BY orders_id
ORDER BY MAX(products_location)
LIMIT ?,?";
PREPARE STMT FROM @slsql;
EXECUTE STMT USING @m,@n3;
deallocate prepare STMT;
-- 取得订单的篮子号
DROP TABLE IF EXISTS a3_1;
CREATE TEMPORARY table a3_1
select orders_id,(@i:=@i+1) as basket_num from a3,(select @i:=0) as it;


DROP TABLE IF EXISTS assign_dd3_kq;
-- 单
CREATE TEMPORARY table assign_dd3_kq
select b.basket_num,a.orders_id,a.pick_type,a.status,a.products_sku,a.products_location,a.s_warehouse_id,a.product_num,a.assign_num,a.is_span,floor
from assign_a1 a INNER JOIN a3_1 b ON a.orders_id=b.orders_id;


-- 订单数据组织写入对应表，更新相关标志。非最后一次分配，不满100订单不给分配
IF (select count(*) from a3)=@n3
then

-- 根据库存分配表取得订单号，在订单表获取物流ID的结果集
-- 优化select @i:=GROUP_CONCAT(DISTINCT shipmentAutoMatched) From erp_database_newest.erp_orders  where erp_orders_id in(select orders_id from a3);
-- 根据订单分配取得楼层的组合
select @i2:=GROUP_CONCAT(DISTINCT floor) From assign_dd3_kq;

-- 在库存分配表erp_stock_assign组织数据写入拣货汇总表 erp_pick
INSERT into erp_database_newest.erp_pick(status,type,warehouse,create_time,uid,order_num,sku_num,num,shipment_id,order_type,pick_start_time,pick_end_time,pick_uid,pick_warehouse,pick_user,pick_action_time,pick_status)
select 1 as status,pick_type as type,s_warehouse_id as warehouse,UNIX_TIMESTAMP(NOW()) as create_time,0 as uid,count(distinct orders_id) as order_num,count(distinct products_sku) as sku_num,sum(assign_num) as num,
0 as shipment_id,0 as order_type,0 as pick_start_time,0 as pick_end_time,0 as pick_uid,s_warehouse_id as pick_warehouse,0 as pick_user,0 as pick_action_time,0 as pick_status
from assign_dd3_kq;-- 拣货单表


-- 取得拣货汇总表的最大id，在库存分配表erp_stock_assign组织数据写入拣货明细表erp_pick_product
SELECT @maxid:=max(id) from erp_database_newest.erp_pick;

INSERT into erp_pick_product_ls(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select @maxid as pick_id,orders_id,products_sku as product_sku,sum(assign_num) as product_num,0 as scan_num,0 as scan_uid,1 as status,0 as scan_time,UNIX_TIMESTAMP(NOW()) as create_time,0 as return_time,
0 as ship_time,0 as page_num,basket_num,0 as ship_uid
from assign_dd3_kq
GROUP BY orders_id,products_sku;-- 拣货详情表 



-- 在库存分配表erp_stock_assign中查询要分配的任务量，数据组织插入任务汇总表erp_picking_task_new
INSERT into erp_picking_task_new(pick_id,pick_type,sku_num,num,status,pick_user,pick_status,create_time,box,floor,update_time,warehouse,floor_num)
select @maxid as pick_id,pick_type,count(distinct products_sku) as sku_num,sum(assign_num) as num,1 as status,'' as pick_user,0 as pick_status,UNIX_TIMESTAMP(NOW()) as create_time,0 as box,0 as floor,0 as update_time,s_warehouse_id as warehouse, @i2 as floor_num
from assign_dd3_kq;

-- 取得任务汇总表的最大task_id，在库存分配表erp_stock_assign组织数据写入任务明细表erp_picking_task_details_new
SELECT @maxtask_id:=max(task_id) from  erp_picking_task_new;

insert into erp_picking_task_details_new_ls(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
SELECT @maxtask_id as task_id,products_sku,products_location,SUM(product_num) as product_num,0 as actual_num,'' as box,0 as status,'' as pick_user,UNIX_TIMESTAMP(NOW()) as create_time,0 as assign_time,0 as box_status,0 as update_time 
from assign_dd3_kq
GROUP BY products_sku,products_location
ORDER BY products_location;

-- 回写 erp_stock_assign 的is_sc标志
-- 优化 update erp_stock_assign set status=300 , task_id=@maxtask_id where orders_id in(select orders_id from a1);
update erp_stock_assign a INNER JOIN a3 b on a.orders_id=b.orders_id set status=300,task_id=@maxtask_id;

-- 临时表也回写标志，减去重复插入数据
-- 优化update assign_a1 set status=300 where orders_id in(select orders_id from a1);
update assign_a1 a INNER JOIN a3 b on a.orders_id=b.orders_id set status=300;

-- 删除临时表
drop table a3;
drop table a3_1;
DROP TABLE assign_dd3_kq;
end if;
-- 循环一次减40
set @mdd3=@mdd3-@n3;


-- 单个任务生成
-- erp_pick_product
INSERT into erp_database_newest.erp_pick_product(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid from erp_pick_product_ls;

-- erp_picking_task_details_new
insert into erp_picking_task_details_new(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
select task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time from erp_picking_task_details_new_ls;

-- 取得订单号
DROP TABLE IF EXISTS erp_pick_product_ls2;
CREATE TEMPORARY table erp_pick_product_ls2
select DISTINCT orders_id,pick_id from erp_pick_product_ls;
-- 写入日志表erp_operate_log
INSERT INTO erp_database_newest.erp_operate_log(operateUser,operateType,operateMod,operateKey,operateText)
select '30','update','ordersManage',orders_id,concat('生成拣货单(',pick_id,')，订单状态变为已打印') from erp_pick_product_ls2;

-- 取得订单分配里面的任务号，更新待发货订单表的标志及任务号
DROP TABLE IF EXISTS order_dd;
CREATE TEMPORARY table order_dd
select distinct a.orders_id,a.task_id,b.pick_id from erp_stock_assign a inner join erp_pick_product_ls2 b on a.orders_id=b.orders_id;
-- 回写订单标志
update erp_database_newest.erp_orders a INNER JOIN erp_pick_product_ls2 b on a.erp_orders_id=b.orders_id 
set a.orders_status=4,a.orders_print_time=now() where a.orders_status=3;

-- 回写待发货订单标志
update stock_out a INNER JOIN order_dd b on a.erp_orders_id=b.orders_id
set a.orders_status=30,a.task_num=b.task_id,a.print_time=UNIX_TIMESTAMP(NOW()),a.pick_id=b.pick_id;

truncate table erp_pick_product_ls;
truncate table erp_picking_task_details_new_ls;
end while;
/*
-- 临时表数据写入系统表
-- erp_pick_product
INSERT into erp_database_newest.erp_pick_product(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid from erp_pick_product_ls;

-- erp_picking_task_details_new
insert into erp_picking_task_details_new(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
select task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time from erp_picking_task_details_new_ls;

-- 取得订单号
DROP TABLE IF EXISTS erp_pick_product_ls2;
CREATE TEMPORARY table erp_pick_product_ls2
select DISTINCT orders_id,pick_id from erp_pick_product_ls;
-- 写入日志表erp_operate_log
INSERT INTO erp_database_newest.erp_operate_log(operateUser,operateType,operateMod,operateKey,operateText)
select '30','update','ordersManage',orders_id,concat('生成拣货单(',pick_id,')，订单状态变为已打印') from erp_pick_product_ls2;

-- 取得订单分配里面的任务号，更新待发货订单表的标志及任务号
DROP TABLE IF EXISTS order_dd;
CREATE TEMPORARY table order_dd
select distinct a.orders_id,a.task_id,b.pick_id from erp_stock_assign a inner join erp_pick_product_ls2 b on a.orders_id=b.orders_id;
-- 回写订单标志
update erp_database_newest.erp_orders a,erp_pick_product_ls2 b set a.orders_status=4,a.orders_print_time=now() where a.erp_orders_id=b.orders_id and a.orders_status=3;

-- 回写待发货订单标志
update stock_out a,order_dd b set a.orders_status=30,a.task_num=b.task_id,a.print_time=UNIX_TIMESTAMP(NOW()),a.pick_id=b.pick_id where a.erp_orders_id=b.orders_id;
*/

-- 删除临时表
drop table erp_pick_product_ls;
drop table erp_picking_task_details_new_ls;

drop table erp_pick_product_ls2;
drop table order_dd;
drop table assign_a1;

END IF;

-- 事物回滚或执行
 IF t_error = 1 then  
ROLLBACK;  
ELSE  
COMMIT;  
end if;  


END



任务3 

BEGIN

 DECLARE t_error INTEGER DEFAULT 0;  
 DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET t_error=1;  
   -- 开启事物
 START TRANSACTION;  

set @m=0;
DROP TABLE IF EXISTS assign_a1;
-- 截取现在的订单分配表 东莞仓订单-1035数据,订单分配表是时时增加数据的;erp已通过,order_is_join未拆单。
CREATE TEMPORARY table assign_a1 
select orders_id,pick_type,status,products_sku,products_location,s_warehouse_id,product_num,assign_num,is_span,left(products_location,1) as floor 
from erp_stock_assign a where status=200 and s_warehouse_id=1035
and EXISTS (select 1 from erp_database_newest.erp_orders b where a.orders_id=b.erp_orders_id and b.orders_status=3 and b.orders_is_join =0 and b.orders_warehouse_id=1035
and IFNULL(b.orders_shipping_code,'')<>'');
-- 创建临时表用于临时存储，避免重复读写系统表

-- erp_pick_product临时表
DROP TABLE IF EXISTS erp_pick_product_ls;
CREATE TEMPORARY table erp_pick_product_ls(
pick_id  int(11) DEFAULT NULL,
orders_id  int(11) DEFAULT NULL,
product_sku  varchar(200) DEFAULT '',
product_num  int(5) DEFAULT NULL,
scan_num  int(5) DEFAULT '0',
scan_uid  int(11) DEFAULT '0',
status  tinyint(5) DEFAULT '1',
scan_time  int(11) DEFAULT '0',
create_time  int(1) DEFAULT NULL,
return_time  int(11) DEFAULT '0',
ship_time  int(11) DEFAULT '0',
page_num  varchar(100) DEFAULT NULL,
basket_num  int(5) DEFAULT '0',
ship_uid  int(11) DEFAULT '0'
);
-- erp_picking_task_details_new临时表
DROP TABLE IF EXISTS erp_picking_task_details_new_ls;
CREATE TEMPORARY table erp_picking_task_details_new_ls(
task_id int(11) NOT NULL DEFAULT '0',
product_sku varchar(200) NOT NULL DEFAULT '0',
products_location varchar(200) NOT NULL DEFAULT '0',
product_num int(11) NOT NULL DEFAULT '0',
actual_num int(11) NOT NULL DEFAULT '0',
box varchar(200) NOT NULL DEFAULT '0',
status int(11) NOT NULL DEFAULT '0',
pick_user varchar(200) NOT NULL DEFAULT '0',
create_time int(11) NOT NULL DEFAULT '0',
assign_time int(11) DEFAULT '0',
box_status int(11) DEFAULT '0',
update_time int(11) NOT NULL
);

/*----------------单单 4F订单------------------*/
-- 取得单单的设计参数
select @n:=value from wms_sys_picktaskrule where Parameter_name='only' and s_warehouse_id='1035';

select @mdd_4:=COUNT(*) from assign_a1 where status=200 and is_span=0 and pick_type=1 and floor='4';
while @mdd_4>=@n do 
-- 订单大于100,循环执行写入
DROP TABLE IF EXISTS assign_dd_4F;
-- 单单 获取100个订单生成拣货任务;4F -- 传入参数
SET @slsql="
CREATE TEMPORARY table assign_dd_4F
select orders_id,pick_type,products_sku,products_location,s_warehouse_id,product_num,assign_num from(
select orders_id,pick_type,products_sku,products_location,s_warehouse_id,product_num,assign_num from assign_a1 
where status=200 and is_span=0 and pick_type=1 and floor='4'
order by products_location,products_sku) a LIMIT ?,?";
PREPARE STMT FROM @slsql;
EXECUTE STMT USING @m,@n;
deallocate prepare STMT;

-- 5F的订单数据组织写入对应表，更新相关标志。非最后一次分配，不满100订单不给分配
IF (select count(*) from assign_dd_4F)=@n
then

-- 根据库存分配表取得订单号，在订单表获取物流ID的结果集
DROP TABLE IF EXISTS a1;
CREATE TEMPORARY table a1 select orders_id from assign_dd_4F;
-- 优化select @i:=GROUP_CONCAT(DISTINCT shipmentAutoMatched)  From erp_database_newest.erp_orders where erp_orders_id in(select orders_id from a1);


-- 在库存分配表erp_stock_assign组织数据写入拣货汇总表 erp_pick
INSERT into erp_database_newest.erp_pick(status,type,warehouse,create_time,uid,order_num,sku_num,num,shipment_id,order_type,pick_start_time,pick_end_time,pick_uid,pick_warehouse,pick_user,pick_action_time,pick_status)
select 1 as status,pick_type as type,s_warehouse_id as warehouse,UNIX_TIMESTAMP(NOW()) as create_time,0 as uid,count(distinct orders_id) as order_num,count(distinct products_sku) as sku_num,sum(assign_num) as num,
0 as shipment_id,0 as order_type,0 as pick_start_time,0 as pick_end_time,0 as pick_uid,s_warehouse_id as pick_warehouse,0 as pick_user,0 as pick_action_time,0 as pick_status
from assign_dd_4F;-- 拣货单表


-- 取得拣货汇总表的最大id，在库存分配表erp_stock_assign组织数据写入拣货明细表erp_pick_product
SELECT @maxid:=max(id) from erp_database_newest.erp_pick;

INSERT into erp_pick_product_ls(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select @maxid as pick_id,orders_id,products_sku as product_sku,sum(assign_num) as product_num,0 as scan_num,0 as scan_uid,1 as status,0 as scan_time,UNIX_TIMESTAMP(NOW()) as create_time,0 as return_time,
0 as ship_time,0 as page_num,(@i:=@i+1) as basket_num,0 as ship_uid
from assign_dd_4F,(select @i:=0) as it
GROUP BY orders_id,products_sku;-- 拣货详情表 



-- 在库存分配表erp_stock_assign中查询要分配的任务量，数据组织插入任务汇总表erp_picking_task_new
INSERT into erp_picking_task_new(pick_id,pick_type,sku_num,num,status,pick_user,pick_status,create_time,box,floor,update_time,warehouse,floor_num)
select @maxid as pick_id,pick_type,count(distinct products_sku) as sku_num,sum(assign_num) as num,1 as status,'' as pick_user,0 as pick_status,UNIX_TIMESTAMP(NOW()) as create_time,0 as box,0 as floor,0 as update_time,s_warehouse_id as warehouse,4 as floor_num
from assign_dd_4F;

-- 取得任务汇总表的最大task_id，在库存分配表erp_stock_assign组织数据写入任务明细表erp_picking_task_details_new
SELECT @maxtask_id:=max(task_id) from  erp_picking_task_new;

insert into erp_picking_task_details_new_ls(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
SELECT @maxtask_id as task_id,products_sku,products_location,SUM(product_num) as product_num,0 as actual_num,'' as box,0 as status,'' as pick_user,UNIX_TIMESTAMP(NOW()) as create_time,0 as assign_time,0 as box_status,0 as update_time 
from assign_dd_4F
GROUP BY products_sku,products_location
ORDER BY products_location;

-- 回写 erp_stock_assign 的is_sc标志
-- 优化 update erp_stock_assign set status=300 , task_id=@maxtask_id where orders_id in(select orders_id from a1);
update erp_stock_assign a INNER JOIN a1 b on a.orders_id=b.orders_id set status=300,task_id=@maxtask_id;

-- 临时表也回写标志，减去重复插入数据
-- 优化update assign_a1 set status=300 where orders_id in(select orders_id from a1);
update assign_a1 a INNER JOIN a1 b on a.orders_id=b.orders_id set status=300;

-- 删除临时表
drop table a1;
DROP TABLE assign_dd_4F;
end if;
-- 循环一次减100
set @mdd_4=@mdd_4-@n;

-- 单个任务生成
-- erp_pick_product
INSERT into erp_database_newest.erp_pick_product(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid from erp_pick_product_ls;

-- erp_picking_task_details_new
insert into erp_picking_task_details_new(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
select task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time from erp_picking_task_details_new_ls;

-- 取得订单号
DROP TABLE IF EXISTS erp_pick_product_ls2;
CREATE TEMPORARY table erp_pick_product_ls2
select DISTINCT orders_id,pick_id from erp_pick_product_ls;
-- 写入日志表erp_operate_log
INSERT INTO erp_database_newest.erp_operate_log(operateUser,operateType,operateMod,operateKey,operateText)
select '30','update','ordersManage',orders_id,concat('生成拣货单(',pick_id,')，订单状态变为已打印') from erp_pick_product_ls2;

-- 取得订单分配里面的任务号，更新待发货订单表的标志及任务号
DROP TABLE IF EXISTS order_dd;
CREATE TEMPORARY table order_dd
select distinct a.orders_id,a.task_id,b.pick_id from erp_stock_assign a inner join erp_pick_product_ls2 b on a.orders_id=b.orders_id;
-- 回写订单标志
update erp_database_newest.erp_orders a INNER JOIN erp_pick_product_ls2 b on a.erp_orders_id=b.orders_id 
set a.orders_status=4,a.orders_print_time=now() where a.orders_status=3;

-- 回写待发货订单标志
update stock_out a INNER JOIN order_dd b on a.erp_orders_id=b.orders_id
set a.orders_status=30,a.task_num=b.task_id,a.print_time=UNIX_TIMESTAMP(NOW()),a.pick_id=b.pick_id;

truncate table erp_pick_product_ls;
truncate table erp_picking_task_details_new_ls;
end while;

/*----------------单单 5F订单------------------*/
select @mdd_5:=COUNT(*) from assign_a1 where status=200 and is_span=0 and pick_type=1 and floor='5';
while @mdd_5>=@n do 
-- 订单大于100,循环执行写入

DROP TABLE IF EXISTS assign_dd_5F;
-- 单单 获取100个订单生成拣货任务;5F -- 传入参数
SET @slsql="CREATE TEMPORARY table assign_dd_5F
select orders_id,pick_type,products_sku,products_location,s_warehouse_id,product_num,assign_num from(
select orders_id,pick_type,products_sku,products_location,s_warehouse_id,product_num,assign_num from assign_a1 
where status=200 and is_span=0 and pick_type=1 and floor='5'
order by products_location,products_sku) a LIMIT ?,?";
PREPARE STMT FROM @slsql;
EXECUTE STMT USING @m,@n;
deallocate prepare STMT;

-- 5F的订单数据组织写入对应表，更新相关标志。非最后一次分配，不满100订单不给分配
IF (select count(*) from assign_dd_5F)=@n
then

-- 根据库存分配表取得订单号，在订单表获取物流ID的结果集
DROP TABLE IF EXISTS a1;
CREATE TEMPORARY table a1 select orders_id from assign_dd_5F;
-- 优化select @i:=GROUP_CONCAT(DISTINCT shipmentAutoMatched)  From erp_database_newest.erp_orders  where erp_orders_id in(select orders_id from a1);


-- 在库存分配表erp_stock_assign组织数据写入拣货汇总表 erp_pick
INSERT into erp_database_newest.erp_pick(status,type,warehouse,create_time,uid,order_num,sku_num,num,shipment_id,order_type,pick_start_time,pick_end_time,pick_uid,pick_warehouse,pick_user,pick_action_time,pick_status)
select 1 as status,pick_type as type,s_warehouse_id as warehouse,UNIX_TIMESTAMP(NOW()) as create_time,0 as uid,count(distinct orders_id) as order_num,count(distinct products_sku) as sku_num,sum(assign_num) as num,
0 as shipment_id,0 as order_type,0 as pick_start_time,0 as pick_end_time,0 as pick_uid,s_warehouse_id as pick_warehouse,0 as pick_user,0 as pick_action_time,0 as pick_status
from assign_dd_5F;-- 拣货单表


-- 取得拣货汇总表的最大id，在库存分配表erp_stock_assign组织数据写入拣货明细表erp_pick_product
SELECT @maxid:=max(id) from erp_database_newest.erp_pick;

INSERT into erp_pick_product_ls(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select @maxid as pick_id,orders_id,products_sku as product_sku,sum(assign_num) as product_num,0 as scan_num,0 as scan_uid,1 as status,0 as scan_time,UNIX_TIMESTAMP(NOW()) as create_time,0 as return_time,
0 as ship_time,0 as page_num,(@i:=@i+1) as basket_num,0 as ship_uid
from assign_dd_5F,(select @i:=0) as it
GROUP BY orders_id,products_sku;-- 拣货详情表 



-- 在库存分配表erp_stock_assign中查询要分配的任务量，数据组织插入任务汇总表erp_picking_task_new
INSERT into erp_picking_task_new(pick_id,pick_type,sku_num,num,status,pick_user,pick_status,create_time,box,floor,update_time,warehouse,floor_num)
select @maxid as pick_id,pick_type,count(distinct products_sku) as sku_num,sum(assign_num) as num,1 as status,'' as pick_user,0 as pick_status,UNIX_TIMESTAMP(NOW()) as create_time,0 as box,0 as floor,0 as update_time,s_warehouse_id as warehouse,5 as floor_num
from assign_dd_5F;

-- 取得任务汇总表的最大task_id，在库存分配表erp_stock_assign组织数据写入任务明细表erp_picking_task_details_new
SELECT @maxtask_id:=max(task_id) from  erp_picking_task_new;

insert into erp_picking_task_details_new_ls(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
SELECT @maxtask_id as task_id,products_sku,products_location,SUM(product_num) as product_num,0 as actual_num,'' as box,0 as status,'' as pick_user,UNIX_TIMESTAMP(NOW()) as create_time,0 as assign_time,0 as box_status,0 as update_time 
from assign_dd_5F
GROUP BY products_sku,products_location
ORDER BY products_location;

-- 回写 erp_stock_assign 的is_sc标志
-- 优化 update erp_stock_assign set status=300 , task_id=@maxtask_id where orders_id in(select orders_id from a1);
update erp_stock_assign a INNER JOIN a1 b on a.orders_id=b.orders_id set status=300,task_id=@maxtask_id;

-- 临时表也回写标志，减去重复插入数据
-- 优化update assign_a1 set status=300 where orders_id in(select orders_id from a1);
update assign_a1 a INNER JOIN a1 b on a.orders_id=b.orders_id set status=300;

-- 删除临时表
drop table a1;
DROP TABLE assign_dd_5F;
end if;
-- 循环一次减100
set @mdd_5=@mdd_5-@n;

-- 单个任务生成
-- erp_pick_product
INSERT into erp_database_newest.erp_pick_product(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid from erp_pick_product_ls;

-- erp_picking_task_details_new
insert into erp_picking_task_details_new(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
select task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time from erp_picking_task_details_new_ls;

-- 取得订单号
DROP TABLE IF EXISTS erp_pick_product_ls2;
CREATE TEMPORARY table erp_pick_product_ls2
select DISTINCT orders_id,pick_id from erp_pick_product_ls;
-- 写入日志表erp_operate_log
INSERT INTO erp_database_newest.erp_operate_log(operateUser,operateType,operateMod,operateKey,operateText)
select '30','update','ordersManage',orders_id,concat('生成拣货单(',pick_id,')，订单状态变为已打印') from erp_pick_product_ls2;

-- 取得订单分配里面的任务号，更新待发货订单表的标志及任务号
DROP TABLE IF EXISTS order_dd;
CREATE TEMPORARY table order_dd
select distinct a.orders_id,a.task_id,b.pick_id from erp_stock_assign a inner join erp_pick_product_ls2 b on a.orders_id=b.orders_id;

-- 回写订单标志
update erp_database_newest.erp_orders a INNER JOIN erp_pick_product_ls2 b on a.erp_orders_id=b.orders_id 
set a.orders_status=4,a.orders_print_time=now() where a.orders_status=3;

-- 回写待发货订单标志
update stock_out a INNER JOIN order_dd b on a.erp_orders_id=b.orders_id
set a.orders_status=30,a.task_num=b.task_id,a.print_time=UNIX_TIMESTAMP(NOW()),a.pick_id=b.pick_id;

truncate table erp_pick_product_ls;
truncate table erp_picking_task_details_new_ls;

end while;

/* -----------------------单单  6F订单--------------------------------*/
select @mdd_6:=COUNT(*) from assign_a1 where status=200 and is_span=0 and pick_type=1 and floor='6';
while @mdd_6>=@n do 
-- 订单大于100,循环执行写入
DROP TABLE IF EXISTS assign_dd_6F;
-- 单单 获取100个订单生成拣货任务;6F  -- 传入参数
SET @slsql="CREATE TEMPORARY table assign_dd_6F
select orders_id,pick_type,products_sku,products_location,s_warehouse_id,product_num,assign_num from(
select orders_id,pick_type,products_sku,products_location,s_warehouse_id,product_num,assign_num from assign_a1 
where status=200 and is_span=0 and pick_type=1 and floor='6'
order by products_location,products_sku) a LIMIT ?,?";
PREPARE STMT FROM @slsql;
EXECUTE STMT USING @m,@n;
deallocate prepare STMT;

-- 6F的订单数据组织写入对应表，更新相关标志。非最后一次分配，不满100订单不给分配
IF (select count(*) from assign_dd_6F)=@n
then

-- 根据库存分配表取得订单号，在订单表获取物流ID的结果集
DROP TABLE IF EXISTS a1;
CREATE TEMPORARY table a1 select orders_id from assign_dd_6F;
-- 优化select @i:=GROUP_CONCAT(DISTINCT shipmentAutoMatched)  From erp_database_newest.erp_orders  where erp_orders_id in(select orders_id from a1);


-- 在库存分配表erp_stock_assign组织数据写入拣货汇总表 erp_pick
INSERT into erp_database_newest.erp_pick(status,type,warehouse,create_time,uid,order_num,sku_num,num,shipment_id,order_type,pick_start_time,pick_end_time,pick_uid,pick_warehouse,pick_user,pick_action_time,pick_status)
select 1 as status,pick_type as type,s_warehouse_id as warehouse,UNIX_TIMESTAMP(NOW()) as create_time,0 as uid,count(distinct orders_id) as order_num,count(distinct products_sku) as sku_num,sum(assign_num) as num,
0 as shipment_id,0 as order_type,0 as pick_start_time,0 as pick_end_time,0 as pick_uid,s_warehouse_id as pick_warehouse,0 as pick_user,0 as pick_action_time,0 as pick_status
from assign_dd_6F;-- 拣货单表


-- 取得拣货汇总表的最大id，在库存分配表erp_stock_assign组织数据写入拣货明细表erp_pick_product
SELECT @maxid:=max(id) from erp_database_newest.erp_pick;

INSERT into erp_pick_product_ls(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select @maxid as pick_id,orders_id,products_sku as product_sku,sum(assign_num) as product_num,0 as scan_num,0 as scan_uid,1 as status,0 as scan_time,UNIX_TIMESTAMP(NOW()) as create_time,0 as return_time,
0 as ship_time,0 as page_num,(@i:=@i+1) as basket_num,0 as ship_uid
from assign_dd_6F,(select @i:=0) as it
GROUP BY orders_id,products_sku;-- 拣货详情表 



-- 在库存分配表erp_stock_assign中查询要分配的任务量，数据组织插入任务汇总表erp_picking_task_new
INSERT into erp_picking_task_new(pick_id,pick_type,sku_num,num,status,pick_user,pick_status,create_time,box,floor,update_time,warehouse,floor_num)
select @maxid as pick_id,pick_type,count(distinct products_sku) as sku_num,sum(assign_num) as num,1 as status,'' as pick_user,0 as pick_status,UNIX_TIMESTAMP(NOW()) as create_time,0 as box,0 as floor,0 as update_time,s_warehouse_id as warehouse,6 as floor_num
from assign_dd_6F;

-- 取得任务汇总表的最大task_id，在库存分配表erp_stock_assign组织数据写入任务明细表erp_picking_task_details_new
SELECT @maxtask_id:=max(task_id) from  erp_picking_task_new;

insert into erp_picking_task_details_new_ls(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
SELECT @maxtask_id as task_id,products_sku,products_location,SUM(product_num) as product_num,0 as actual_num,'' as box,0 as status,'' as pick_user,UNIX_TIMESTAMP(NOW()) as create_time,0 as assign_time,0 as box_status,0 as update_time 
from assign_dd_6F
GROUP BY products_sku,products_location
ORDER BY products_location;

-- 回写 erp_stock_assign 的is_sc标志
-- 优化 update erp_stock_assign set status=300 , task_id=@maxtask_id where orders_id in(select orders_id from a1);
update erp_stock_assign a INNER JOIN a1 b on a.orders_id=b.orders_id set status=300,task_id=@maxtask_id;

-- 临时表也回写标志，减去重复插入数据
-- 优化update assign_a1 set status=300 where orders_id in(select orders_id from a1);
update assign_a1 a INNER JOIN a1 b on a.orders_id=b.orders_id set status=300;

-- 删除临时表
drop table a1;
DROP TABLE assign_dd_6F;
end if;
-- 循环一次减100
set @mdd_6=@mdd_6-@n;


-- 单个任务生成
-- erp_pick_product
INSERT into erp_database_newest.erp_pick_product(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid from erp_pick_product_ls;

-- erp_picking_task_details_new
insert into erp_picking_task_details_new(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
select task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time from erp_picking_task_details_new_ls;

-- 取得订单号
DROP TABLE IF EXISTS erp_pick_product_ls2;
CREATE TEMPORARY table erp_pick_product_ls2
select DISTINCT orders_id,pick_id from erp_pick_product_ls;
-- 写入日志表erp_operate_log
INSERT INTO erp_database_newest.erp_operate_log(operateUser,operateType,operateMod,operateKey,operateText)
select '30','update','ordersManage',orders_id,concat('生成拣货单(',pick_id,')，订单状态变为已打印') from erp_pick_product_ls2;

-- 取得订单分配里面的任务号，更新待发货订单表的标志及任务号
DROP TABLE IF EXISTS order_dd;
CREATE TEMPORARY table order_dd
select distinct a.orders_id,a.task_id,b.pick_id from erp_stock_assign a inner join erp_pick_product_ls2 b on a.orders_id=b.orders_id;

-- 回写订单标志
update erp_database_newest.erp_orders a INNER JOIN erp_pick_product_ls2 b on a.erp_orders_id=b.orders_id 
set a.orders_status=4,a.orders_print_time=now() where a.orders_status=3;

-- 回写待发货订单标志
update stock_out a INNER JOIN order_dd b on a.erp_orders_id=b.orders_id
set a.orders_status=30,a.task_num=b.task_id,a.print_time=UNIX_TIMESTAMP(NOW()),a.pick_id=b.pick_id;


truncate table erp_pick_product_ls;
truncate table erp_picking_task_details_new_ls;

end while;

/*---------------------------------*/

/* -----------------------单多  4F订单--------不跨区--------------------*/
-- 取得单多的设置参数
select @n2:=value from wms_sys_picktaskrule where Parameter_name='Single' and s_warehouse_id='1035';

select @mdd2_4:=COUNT(*) from assign_a1 where status=200 and is_span=0 and pick_type=2 and floor='4';
while @mdd2_4>=@n2 do 
-- 订单大于40,循环执行写入-- 参数传入
DROP TABLE IF EXISTS a2;
SET @slsql="
CREATE TEMPORARY table a2 
select orders_id
from assign_a1 
where status=200 and is_span=0 and pick_type=2 and floor='4'
GROUP BY orders_id
ORDER BY MAX(products_location)
LIMIT ?,?";
PREPARE STMT FROM @slsql;
EXECUTE STMT USING @m,@n2;
deallocate prepare STMT;

DROP TABLE IF EXISTS assign_dd2_4F;
-- 单单 获取100个订单生成拣货任务;6F
CREATE TEMPORARY table assign_dd2_4F
select orders_id,pick_type,products_sku,products_location,s_warehouse_id,product_num,assign_num from assign_a1 where orders_id in(select orders_id from a2);


-- 6F的订单数据组织写入对应表，更新相关标志。非最后一次分配，不满40订单不给分配
IF (select count(*) from a2)=@n2
then

-- 根据库存分配表取得订单号，在订单表获取物流ID的结果集
-- 优化select @i:=GROUP_CONCAT(DISTINCT shipmentAutoMatched) From erp_database_newest.erp_orders  where erp_orders_id in(select orders_id from a2);


-- 在库存分配表erp_stock_assign组织数据写入拣货汇总表 erp_pick
INSERT into erp_database_newest.erp_pick(status,type,warehouse,create_time,uid,order_num,sku_num,num,shipment_id,order_type,pick_start_time,pick_end_time,pick_uid,pick_warehouse,pick_user,pick_action_time,pick_status)
select 1 as status,pick_type as type,s_warehouse_id as warehouse,UNIX_TIMESTAMP(NOW()) as create_time,0 as uid,count(distinct orders_id) as order_num,count(distinct products_sku) as sku_num,sum(assign_num) as num,
0 as shipment_id,0 as order_type,0 as pick_start_time,0 as pick_end_time,0 as pick_uid,s_warehouse_id as pick_warehouse,0 as pick_user,0 as pick_action_time,0 as pick_status
from assign_dd2_4F;-- 拣货单表


-- 取得拣货汇总表的最大id，在库存分配表erp_stock_assign组织数据写入拣货明细表erp_pick_product
SELECT @maxid:=max(id) from erp_database_newest.erp_pick;

INSERT into erp_pick_product_ls(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select @maxid as pick_id,orders_id,products_sku as product_sku,sum(assign_num) as product_num,0 as scan_num,0 as scan_uid,1 as status,0 as scan_time,UNIX_TIMESTAMP(NOW()) as create_time,0 as return_time,
0 as ship_time,0 as page_num,(@i:=@i+1) as basket_num,0 as ship_uid
from assign_dd2_4F,(select @i:=0) as it
GROUP BY orders_id,products_sku;-- 拣货详情表 



-- 在库存分配表erp_stock_assign中查询要分配的任务量，数据组织插入任务汇总表erp_picking_task_new
INSERT into erp_picking_task_new(pick_id,pick_type,sku_num,num,status,pick_user,pick_status,create_time,box,floor,update_time,warehouse,floor_num)
select @maxid as pick_id,pick_type,count(distinct products_sku) as sku_num,sum(assign_num) as num,1 as status,'' as pick_user,0 as pick_status,UNIX_TIMESTAMP(NOW()) as create_time,0 as box,0 as floor,0 as update_time,s_warehouse_id as warehouse,4 as floor_num
from assign_dd2_4F;

-- 取得任务汇总表的最大task_id，在库存分配表erp_stock_assign组织数据写入任务明细表erp_picking_task_details_new
SELECT @maxtask_id:=max(task_id) from  erp_picking_task_new;

insert into erp_picking_task_details_new_ls(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
SELECT @maxtask_id as task_id,products_sku,products_location,SUM(product_num) as product_num,0 as actual_num,'' as box,0 as status,'' as pick_user,UNIX_TIMESTAMP(NOW()) as create_time,0 as assign_time,0 as box_status,0 as update_time 
from assign_dd2_4F
GROUP BY products_sku,products_location
ORDER BY products_location;

-- 回写 erp_stock_assign 的is_sc标志
-- 优化 update erp_stock_assign set status=300 , task_id=@maxtask_id where orders_id in(select orders_id from a1);
update erp_stock_assign a INNER JOIN a2 b on a.orders_id=b.orders_id set status=300,task_id=@maxtask_id;

-- 临时表也回写标志，减去重复插入数据
-- 优化update assign_a1 set status=300 where orders_id in(select orders_id from a1);
update assign_a1 a INNER JOIN a2 b on a.orders_id=b.orders_id set status=300;



-- 删除临时表
drop table a2;
DROP TABLE assign_dd2_4F;
end if;
-- 循环一次减40 -- 参数传入
set @mdd2_4=@mdd2_4-@n2;


-- 单个任务生成
-- erp_pick_product
INSERT into erp_database_newest.erp_pick_product(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid from erp_pick_product_ls;

-- erp_picking_task_details_new
insert into erp_picking_task_details_new(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
select task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time from erp_picking_task_details_new_ls;

-- 取得订单号
DROP TABLE IF EXISTS erp_pick_product_ls2;
CREATE TEMPORARY table erp_pick_product_ls2
select DISTINCT orders_id,pick_id from erp_pick_product_ls;
-- 写入日志表erp_operate_log
INSERT INTO erp_database_newest.erp_operate_log(operateUser,operateType,operateMod,operateKey,operateText)
select '30','update','ordersManage',orders_id,concat('生成拣货单(',pick_id,')，订单状态变为已打印') from erp_pick_product_ls2;

-- 取得订单分配里面的任务号，更新待发货订单表的标志及任务号
DROP TABLE IF EXISTS order_dd;
CREATE TEMPORARY table order_dd
select distinct a.orders_id,a.task_id,b.pick_id from erp_stock_assign a inner join erp_pick_product_ls2 b on a.orders_id=b.orders_id;

-- 回写订单标志
update erp_database_newest.erp_orders a INNER JOIN erp_pick_product_ls2 b on a.erp_orders_id=b.orders_id 
set a.orders_status=4,a.orders_print_time=now() where a.orders_status=3;

-- 回写待发货订单标志
update stock_out a INNER JOIN order_dd b on a.erp_orders_id=b.orders_id
set a.orders_status=30,a.task_num=b.task_id,a.print_time=UNIX_TIMESTAMP(NOW()),a.pick_id=b.pick_id;

truncate table erp_pick_product_ls;
truncate table erp_picking_task_details_new_ls;

end while;

/* -----------------------单多  5F订单--------不跨区--------------------*/
select @mdd2_5:=COUNT(*) from assign_a1 where status=200 and is_span=0 and pick_type=2 and floor='5';
while @mdd2_5>=@n2 do 
-- 订单大于40,循环执行写入 -- 参数传入
DROP TABLE IF EXISTS a2;
SET @slsql="
CREATE TEMPORARY table a2 
select orders_id
from assign_a1 
where status=200 and is_span=0 and pick_type=2 and  floor='5'
GROUP BY orders_id
ORDER BY MAX(products_location)
LIMIT ?,?";
PREPARE STMT FROM @slsql;
EXECUTE STMT USING @m,@n2;
deallocate prepare STMT;


DROP TABLE IF EXISTS assign_dd2_5F;
-- 单单 获取100个订单生成拣货任务;6F
CREATE TEMPORARY table assign_dd2_5F
select orders_id,pick_type,products_sku,products_location,s_warehouse_id,product_num,assign_num from assign_a1 where orders_id in(select orders_id from a2);


-- 6F的订单数据组织写入对应表，更新相关标志。非最后一次分配，不满100订单不给分配
IF (select count(*) from a2)=@n2
then

-- 根据库存分配表取得订单号，在订单表获取物流ID的结果集
-- 优化select @i:=GROUP_CONCAT(DISTINCT shipmentAutoMatched) From erp_database_newest.erp_orders  where erp_orders_id in(select orders_id from a2);


-- 在库存分配表erp_stock_assign组织数据写入拣货汇总表 erp_pick
INSERT into erp_database_newest.erp_pick(status,type,warehouse,create_time,uid,order_num,sku_num,num,shipment_id,order_type,pick_start_time,pick_end_time,pick_uid,pick_warehouse,pick_user,pick_action_time,pick_status)
select 1 as status,pick_type as type,s_warehouse_id as warehouse,UNIX_TIMESTAMP(NOW()) as create_time,0 as uid,count(distinct orders_id) as order_num,count(distinct products_sku) as sku_num,sum(assign_num) as num,
0 as shipment_id,0 as order_type,0 as pick_start_time,0 as pick_end_time,0 as pick_uid,s_warehouse_id as pick_warehouse,0 as pick_user,0 as pick_action_time,0 as pick_status
from assign_dd2_5F;-- 拣货单表


-- 取得拣货汇总表的最大id，在库存分配表erp_stock_assign组织数据写入拣货明细表erp_pick_product
SELECT @maxid:=max(id) from erp_database_newest.erp_pick;

INSERT into erp_pick_product_ls(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select @maxid as pick_id,orders_id,products_sku as product_sku,sum(assign_num) as product_num,0 as scan_num,0 as scan_uid,1 as status,0 as scan_time,UNIX_TIMESTAMP(NOW()) as create_time,0 as return_time,
0 as ship_time,0 as page_num,(@i:=@i+1) as basket_num,0 as ship_uid
from assign_dd2_5F,(select @i:=0) as it
GROUP BY orders_id,products_sku;-- 拣货详情表 



-- 在库存分配表erp_stock_assign中查询要分配的任务量，数据组织插入任务汇总表erp_picking_task_new
INSERT into erp_picking_task_new(pick_id,pick_type,sku_num,num,status,pick_user,pick_status,create_time,box,floor,update_time,warehouse,floor_num)
select @maxid as pick_id,pick_type,count(distinct products_sku) as sku_num,sum(assign_num) as num,1 as status,'' as pick_user,0 as pick_status,UNIX_TIMESTAMP(NOW()) as create_time,0 as box,0 as floor,0 as update_time,s_warehouse_id as warehouse,5 as floor_num
from assign_dd2_5F;

-- 取得任务汇总表的最大task_id，在库存分配表erp_stock_assign组织数据写入任务明细表erp_picking_task_details_new
SELECT @maxtask_id:=max(task_id) from  erp_picking_task_new;

insert into erp_picking_task_details_new_ls(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
SELECT @maxtask_id as task_id,products_sku,products_location,SUM(product_num) as product_num,0 as actual_num,'' as box,0 as status,'' as pick_user,UNIX_TIMESTAMP(NOW()) as create_time,0 as assign_time,0 as box_status,0 as update_time 
from assign_dd2_5F
GROUP BY products_sku,products_location
ORDER BY products_location;

-- 回写 erp_stock_assign 的is_sc标志
-- 优化 update erp_stock_assign set status=300 , task_id=@maxtask_id where orders_id in(select orders_id from a1);
update erp_stock_assign a INNER JOIN a2 b on a.orders_id=b.orders_id set status=300,task_id=@maxtask_id;

-- 临时表也回写标志，减去重复插入数据
-- 优化update assign_a1 set status=300 where orders_id in(select orders_id from a1);
update assign_a1 a INNER JOIN a2 b on a.orders_id=b.orders_id set status=300;


-- 删除临时表
drop table a2;
DROP TABLE assign_dd2_5F;
end if;
-- 循环一次减40 -- 参数传入
set @mdd2_5=@mdd2_5-@n2;

-- 单个任务生成
-- erp_pick_product
INSERT into erp_database_newest.erp_pick_product(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid from erp_pick_product_ls;

-- erp_picking_task_details_new
insert into erp_picking_task_details_new(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
select task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time from erp_picking_task_details_new_ls;

-- 取得订单号
DROP TABLE IF EXISTS erp_pick_product_ls2;
CREATE TEMPORARY table erp_pick_product_ls2
select DISTINCT orders_id,pick_id from erp_pick_product_ls;
-- 写入日志表erp_operate_log
INSERT INTO erp_database_newest.erp_operate_log(operateUser,operateType,operateMod,operateKey,operateText)
select '30','update','ordersManage',orders_id,concat('生成拣货单(',pick_id,')，订单状态变为已打印') from erp_pick_product_ls2;

-- 取得订单分配里面的任务号，更新待发货订单表的标志及任务号
DROP TABLE IF EXISTS order_dd;
CREATE TEMPORARY table order_dd
select distinct a.orders_id,a.task_id,b.pick_id from erp_stock_assign a inner join erp_pick_product_ls2 b on a.orders_id=b.orders_id;

-- 回写订单标志
update erp_database_newest.erp_orders a INNER JOIN erp_pick_product_ls2 b on a.erp_orders_id=b.orders_id 
set a.orders_status=4,a.orders_print_time=now() where a.orders_status=3;

-- 回写待发货订单标志
update stock_out a INNER JOIN order_dd b on a.erp_orders_id=b.orders_id
set a.orders_status=30,a.task_num=b.task_id,a.print_time=UNIX_TIMESTAMP(NOW()),a.pick_id=b.pick_id;

truncate table erp_pick_product_ls;
truncate table erp_picking_task_details_new_ls;
end while;


/* -----------------------单多  6F订单---不跨区-----------------------*/
select @mdd2_6:=COUNT(*) from assign_a1 where status=200 and is_span=0 and pick_type=2 and floor='6';
while @mdd2_6>=@n2 do 
-- 订单大于40,循环执行写入
DROP TABLE IF EXISTS a2;
-- 参数传入
SET @slsql="
CREATE TEMPORARY table a2 
select orders_id
from assign_a1 
where status=200 and is_span=0 and pick_type=2 and floor='6'
GROUP BY orders_id
ORDER BY MAX(products_location)
LIMIT ?,?";
PREPARE STMT FROM @slsql;
EXECUTE STMT USING @m,@n2;
deallocate prepare STMT;

DROP TABLE IF EXISTS assign_dd2_6F;
-- 单单 获取100个订单生成拣货任务;6F
CREATE TEMPORARY table assign_dd2_6F
select orders_id,pick_type,products_sku,products_location,s_warehouse_id,product_num,assign_num from assign_a1 where orders_id in(select orders_id from a2);


-- 订单数据组织写入对应表，更新相关标志。非最后一次分配，不满100订单不给分配
IF (select count(*) from a2)=@n2
then

-- 根据库存分配表取得订单号，在订单表获取物流ID的结果集
-- 优化select @i:=GROUP_CONCAT(DISTINCT shipmentAutoMatched) From erp_database_newest.erp_orders  where erp_orders_id in(select orders_id from a2);


-- 在库存分配表erp_stock_assign组织数据写入拣货汇总表 erp_pick
INSERT into erp_database_newest.erp_pick(status,type,warehouse,create_time,uid,order_num,sku_num,num,shipment_id,order_type,pick_start_time,pick_end_time,pick_uid,pick_warehouse,pick_user,pick_action_time,pick_status)
select 1 as status,pick_type as type,s_warehouse_id as warehouse,UNIX_TIMESTAMP(NOW()) as create_time,0 as uid,count(distinct orders_id) as order_num,count(distinct products_sku) as sku_num,sum(assign_num) as num,
0 as shipment_id,0 as order_type,0 as pick_start_time,0 as pick_end_time,0 as pick_uid,s_warehouse_id as pick_warehouse,0 as pick_user,0 as pick_action_time,0 as pick_status
from assign_dd2_6F;-- 拣货单表


-- 取得拣货汇总表的最大id，在库存分配表erp_stock_assign组织数据写入拣货明细表erp_pick_product
SELECT @maxid:=max(id) from erp_database_newest.erp_pick;

INSERT into erp_pick_product_ls(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select @maxid as pick_id,orders_id,products_sku as product_sku,sum(assign_num) as product_num,0 as scan_num,0 as scan_uid,1 as status,0 as scan_time,UNIX_TIMESTAMP(NOW()) as create_time,0 as return_time,
0 as ship_time,0 as page_num,(@i:=@i+1) as basket_num,0 as ship_uid
from assign_dd2_6F,(select @i:=0) as it
GROUP BY orders_id,products_sku;-- 拣货详情表 



-- 在库存分配表erp_stock_assign中查询要分配的任务量，数据组织插入任务汇总表erp_picking_task_new
INSERT into erp_picking_task_new(pick_id,pick_type,sku_num,num,status,pick_user,pick_status,create_time,box,floor,update_time,warehouse,floor_num)
select @maxid as pick_id,pick_type,count(distinct products_sku) as sku_num,sum(assign_num) as num,1 as status,'' as pick_user,0 as pick_status,UNIX_TIMESTAMP(NOW()) as create_time,0 as box,0 as floor,0 as update_time,s_warehouse_id as warehouse,6 as floor_num
from assign_dd2_6F;

-- 取得任务汇总表的最大task_id，在库存分配表erp_stock_assign组织数据写入任务明细表erp_picking_task_details_new
SELECT @maxtask_id:=max(task_id) from  erp_picking_task_new;

insert into erp_picking_task_details_new_ls(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
SELECT @maxtask_id as task_id,products_sku,products_location,SUM(product_num) as product_num,0 as actual_num,'' as box,0 as status,'' as pick_user,UNIX_TIMESTAMP(NOW()) as create_time,0 as assign_time,0 as box_status,0 as update_time 
from assign_dd2_6F
GROUP BY products_sku,products_location
ORDER BY products_location;

-- 回写 erp_stock_assign 的is_sc标志
-- 优化 update erp_stock_assign set status=300 , task_id=@maxtask_id where orders_id in(select orders_id from a1);
update erp_stock_assign a INNER JOIN a2 b on a.orders_id=b.orders_id set status=300,task_id=@maxtask_id;

-- 临时表也回写标志，减去重复插入数据
-- 优化update assign_a1 set status=300 where orders_id in(select orders_id from a1);
update assign_a1 a INNER JOIN a2 b on a.orders_id=b.orders_id set status=300;



-- 删除临时表
drop table a2;
DROP TABLE assign_dd2_6F;
end if;
-- 循环一次减40
set @mdd2_6=@mdd2_6-@n2;


-- 单个任务生成
-- erp_pick_product
INSERT into erp_database_newest.erp_pick_product(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid from erp_pick_product_ls;

-- erp_picking_task_details_new
insert into erp_picking_task_details_new(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
select task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time from erp_picking_task_details_new_ls;

-- 取得订单号
DROP TABLE IF EXISTS erp_pick_product_ls2;
CREATE TEMPORARY table erp_pick_product_ls2
select DISTINCT orders_id,pick_id from erp_pick_product_ls;
-- 写入日志表erp_operate_log
INSERT INTO erp_database_newest.erp_operate_log(operateUser,operateType,operateMod,operateKey,operateText)
select '30','update','ordersManage',orders_id,concat('生成拣货单(',pick_id,')，订单状态变为已打印') from erp_pick_product_ls2;

-- 取得订单分配里面的任务号，更新待发货订单表的标志及任务号
DROP TABLE IF EXISTS order_dd;
CREATE TEMPORARY table order_dd
select distinct a.orders_id,a.task_id,b.pick_id from erp_stock_assign a inner join erp_pick_product_ls2 b on a.orders_id=b.orders_id;
-- 回写订单标志
update erp_database_newest.erp_orders a INNER JOIN erp_pick_product_ls2 b on a.erp_orders_id=b.orders_id 
set a.orders_status=4,a.orders_print_time=now() where a.orders_status=3;

-- 回写待发货订单标志
update stock_out a INNER JOIN order_dd b on a.erp_orders_id=b.orders_id
set a.orders_status=30,a.task_num=b.task_id,a.print_time=UNIX_TIMESTAMP(NOW()),a.pick_id=b.pick_id;

truncate table erp_pick_product_ls;
truncate table erp_picking_task_details_new_ls;

end while;

/* -----------------------单多  订单---跨区-----------------------*/
select @mdd2:=COUNT(*) from assign_a1 where status=200 and is_span=1 and pick_type=2;
while @mdd2>=@n2 do 
-- 订单大于40,循环执行写入
DROP TABLE IF EXISTS a2;
-- 参数传入
SET @slsql="
CREATE TEMPORARY table a2 
select orders_id
from assign_a1 
where status=200 and is_span=1 and pick_type=2
GROUP BY orders_id
ORDER BY MAX(products_location)
LIMIT ?,?";
PREPARE STMT FROM @slsql;
EXECUTE STMT USING @m,@n2;
deallocate prepare STMT;

DROP TABLE IF EXISTS assign_dd2_kq;
-- 单
CREATE TEMPORARY table assign_dd2_kq
select orders_id,pick_type,products_sku,products_location,s_warehouse_id,product_num,assign_num,floor from assign_a1 where orders_id in(select orders_id from a2);


-- 订单数据组织写入对应表，更新相关标志。非最后一次分配，不满40订单不给分配
IF (select count(*) from a2)=@n2
then

-- 根据库存分配表取得订单号，在订单表获取物流ID的结果集
-- 优化select @i:=GROUP_CONCAT(DISTINCT shipmentAutoMatched) From erp_database_newest.erp_orders  where erp_orders_id in(select orders_id from a2);
-- 跨区的取得分配单的楼层组合
select @i2:=GROUP_CONCAT(DISTINCT floor) from assign_dd2_kq;

-- 在库存分配表erp_stock_assign组织数据写入拣货汇总表 erp_pick
INSERT into erp_database_newest.erp_pick(status,type,warehouse,create_time,uid,order_num,sku_num,num,shipment_id,order_type,pick_start_time,pick_end_time,pick_uid,pick_warehouse,pick_user,pick_action_time,pick_status)
select 1 as status,pick_type as type,s_warehouse_id as warehouse,UNIX_TIMESTAMP(NOW()) as create_time,0 as uid,count(distinct orders_id) as order_num,count(distinct products_sku) as sku_num,sum(assign_num) as num,
0 as shipment_id,0 as order_type,0 as pick_start_time,0 as pick_end_time,0 as pick_uid,s_warehouse_id as pick_warehouse,0 as pick_user,0 as pick_action_time,0 as pick_status
from assign_dd2_kq;-- 拣货单表


-- 取得拣货汇总表的最大id，在库存分配表erp_stock_assign组织数据写入拣货明细表erp_pick_product
SELECT @maxid:=max(id) from erp_database_newest.erp_pick;

INSERT into erp_pick_product_ls(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select @maxid as pick_id,orders_id,products_sku as product_sku,sum(assign_num) as product_num,0 as scan_num,0 as scan_uid,1 as status,0 as scan_time,UNIX_TIMESTAMP(NOW()) as create_time,0 as return_time,
0 as ship_time,0 as page_num,(@i:=@i+1) as basket_num,0 as ship_uid
from assign_dd2_kq,(select @i:=0) as it
GROUP BY orders_id,products_sku;-- 拣货详情表 



-- 在库存分配表erp_stock_assign中查询要分配的任务量，数据组织插入任务汇总表erp_picking_task_new
INSERT into erp_picking_task_new(pick_id,pick_type,sku_num,num,status,pick_user,pick_status,create_time,box,floor,update_time,warehouse,floor_num)
select @maxid as pick_id,pick_type,count(distinct products_sku) as sku_num,sum(assign_num) as num,1 as status,'' as pick_user,0 as pick_status,UNIX_TIMESTAMP(NOW()) as create_time,0 as box,0 as floor,0 as update_time,s_warehouse_id as warehouse,@i2 as floor_num
from assign_dd2_kq;

-- 取得任务汇总表的最大task_id，在库存分配表erp_stock_assign组织数据写入任务明细表erp_picking_task_details_new
SELECT @maxtask_id:=max(task_id) from  erp_picking_task_new;

insert into erp_picking_task_details_new_ls(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
SELECT @maxtask_id as task_id,products_sku,products_location,SUM(product_num) as product_num,0 as actual_num,'' as box,0 as status,'' as pick_user,UNIX_TIMESTAMP(NOW()) as create_time,0 as assign_time,0 as box_status,0 as update_time 
from assign_dd2_kq
GROUP BY products_sku,products_location
ORDER BY products_location;

-- 回写 erp_stock_assign 的is_sc标志
-- 优化 update erp_stock_assign set status=300 , task_id=@maxtask_id where orders_id in(select orders_id from a1);
update erp_stock_assign a INNER JOIN a2 b on a.orders_id=b.orders_id set status=300,task_id=@maxtask_id;

-- 临时表也回写标志，减去重复插入数据
-- 优化update assign_a1 set status=300 where orders_id in(select orders_id from a1);
update assign_a1 a INNER JOIN a2 b on a.orders_id=b.orders_id set status=300;


-- 删除临时表
drop table a2;
DROP TABLE assign_dd2_kq;
end if;
-- 循环一次减40
set @mdd2=@mdd2-@n2;


-- 单个任务生成
-- erp_pick_product
INSERT into erp_database_newest.erp_pick_product(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid from erp_pick_product_ls;

-- erp_picking_task_details_new
insert into erp_picking_task_details_new(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
select task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time from erp_picking_task_details_new_ls;

-- 取得订单号
DROP TABLE IF EXISTS erp_pick_product_ls2;
CREATE TEMPORARY table erp_pick_product_ls2
select DISTINCT orders_id,pick_id from erp_pick_product_ls;
-- 写入日志表erp_operate_log
INSERT INTO erp_database_newest.erp_operate_log(operateUser,operateType,operateMod,operateKey,operateText)
select '30','update','ordersManage',orders_id,concat('生成拣货单(',pick_id,')，订单状态变为已打印') from erp_pick_product_ls2;

-- 取得订单分配里面的任务号，更新待发货订单表的标志及任务号
DROP TABLE IF EXISTS order_dd;
CREATE TEMPORARY table order_dd
select distinct a.orders_id,a.task_id,b.pick_id from erp_stock_assign a inner join erp_pick_product_ls2 b on a.orders_id=b.orders_id;

-- 回写订单标志
update erp_database_newest.erp_orders a INNER JOIN erp_pick_product_ls2 b on a.erp_orders_id=b.orders_id 
set a.orders_status=4,a.orders_print_time=now() where a.orders_status=3;

-- 回写待发货订单标志
update stock_out a INNER JOIN order_dd b on a.erp_orders_id=b.orders_id
set a.orders_status=30,a.task_num=b.task_id,a.print_time=UNIX_TIMESTAMP(NOW()),a.pick_id=b.pick_id;


truncate table erp_pick_product_ls;
truncate table erp_picking_task_details_new_ls;

end while;

/* -----------------------多多  4F订单--------不跨区--------------------*/
-- 取得多多的设置参数
select @n3:=value from wms_sys_picktaskrule where Parameter_name='Much' and s_warehouse_id='1035';

select @mdd3_4:=COUNT(*) from assign_a1 where status=200 and is_span=0 and pick_type=3 and floor='4';
while @mdd3_4>=@n3 do 
-- 订单大于40,循环执行写入
DROP TABLE IF EXISTS a3;
-- 取得多多4楼的前40订单
-- 参数传入
SET @slsql="
CREATE TEMPORARY table a3 
select orders_id
from assign_a1 
where status=200 and is_span=0 and pick_type=3 and floor='4'
GROUP BY orders_id
ORDER BY MAX(products_location)
LIMIT ?,?";
PREPARE STMT FROM @slsql;
EXECUTE STMT USING @m,@n3;
deallocate prepare STMT;
-- 取得订单的篮子号
DROP TABLE IF EXISTS a3_1;
CREATE TEMPORARY table a3_1
select orders_id,(@i:=@i+1) as basket_num from a3,(select @i:=0) as it;

DROP TABLE IF EXISTS assign_dd3_4F;
-- 
CREATE TEMPORARY table assign_dd3_4F
select b.basket_num,a.orders_id,a.pick_type,a.status,a.products_sku,a.products_location,a.s_warehouse_id,a.product_num,a.assign_num,a.is_span
from assign_a1 a INNER JOIN a3_1 b ON a.orders_id=b.orders_id;

-- 订单数据组织写入对应表，更新相关标志。非最后一次分配，不满40订单不给分配
IF (select count(*) from a3)=@n3
then

-- 根据库存分配表取得订单号，在订单表获取物流ID的结果集
-- 优化select @i:=GROUP_CONCAT(DISTINCT shipmentAutoMatched) From erp_database_newest.erp_orders where erp_orders_id in(select orders_id from a3);


-- 在库存分配表erp_stock_assign组织数据写入拣货汇总表 erp_pick
INSERT into erp_database_newest.erp_pick(status,type,warehouse,create_time,uid,order_num,sku_num,num,shipment_id,order_type,pick_start_time,pick_end_time,pick_uid,pick_warehouse,pick_user,pick_action_time,pick_status)
select 1 as status,pick_type as type,s_warehouse_id as warehouse,UNIX_TIMESTAMP(NOW()) as create_time,0 as uid,count(distinct orders_id) as order_num,count(distinct products_sku) as sku_num,sum(assign_num) as num,
0 as shipment_id,0 as order_type,0 as pick_start_time,0 as pick_end_time,0 as pick_uid,s_warehouse_id as pick_warehouse,0 as pick_user,0 as pick_action_time,0 as pick_status
from assign_dd3_4F;-- 拣货单表


-- 取得拣货汇总表的最大id，在库存分配表erp_stock_assign组织数据写入拣货明细表erp_pick_product
SELECT @maxid:=max(id) from erp_database_newest.erp_pick;

INSERT into erp_pick_product_ls(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select @maxid as pick_id,orders_id,products_sku as product_sku,sum(assign_num) as product_num,0 as scan_num,0 as scan_uid,1 as status,0 as scan_time,UNIX_TIMESTAMP(NOW()) as create_time,0 as return_time,
0 as ship_time,0 as page_num,basket_num,0 as ship_uid
from assign_dd3_4F
GROUP BY orders_id,products_sku;-- 拣货详情表 



-- 在库存分配表erp_stock_assign中查询要分配的任务量，数据组织插入任务汇总表erp_picking_task_new
INSERT into erp_picking_task_new(pick_id,pick_type,sku_num,num,status,pick_user,pick_status,create_time,box,floor,update_time,warehouse,floor_num)
select @maxid as pick_id,pick_type,count(distinct products_sku) as sku_num,sum(assign_num) as num,1 as status,'' as pick_user,0 as pick_status,UNIX_TIMESTAMP(NOW()) as create_time,0 as box,0 as floor,0 as update_time,s_warehouse_id as warehouse,4 as floor_num
from assign_dd3_4F;

-- 取得任务汇总表的最大task_id，在库存分配表erp_stock_assign组织数据写入任务明细表erp_picking_task_details_new
SELECT @maxtask_id:=max(task_id) from  erp_picking_task_new;

insert into erp_picking_task_details_new_ls(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
SELECT @maxtask_id as task_id,products_sku,products_location,SUM(product_num) as product_num,0 as actual_num,'' as box,0 as status,'' as pick_user,UNIX_TIMESTAMP(NOW()) as create_time,0 as assign_time,0 as box_status,0 as update_time 
from assign_dd3_4F
GROUP BY products_sku,products_location
ORDER BY products_location;

-- 回写 erp_stock_assign 的is_sc标志
-- 优化 update erp_stock_assign set status=300 , task_id=@maxtask_id where orders_id in(select orders_id from a1);
update erp_stock_assign a INNER JOIN a3 b on a.orders_id=b.orders_id set status=300,task_id=@maxtask_id;

-- 临时表也回写标志，减去重复插入数据
-- 优化update assign_a1 set status=300 where orders_id in(select orders_id from a1);
update assign_a1 a INNER JOIN a3 b on a.orders_id=b.orders_id set status=300;

-- 删除临时表
drop table a3;
drop table a3_1;
DROP TABLE assign_dd3_4F;
end if;
-- 循环一次减40
set @mdd3_4=@mdd3_4-@n3;


-- 单个任务生成
-- erp_pick_product
INSERT into erp_database_newest.erp_pick_product(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid from erp_pick_product_ls;

-- erp_picking_task_details_new
insert into erp_picking_task_details_new(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
select task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time from erp_picking_task_details_new_ls;

-- 取得订单号
DROP TABLE IF EXISTS erp_pick_product_ls2;
CREATE TEMPORARY table erp_pick_product_ls2
select DISTINCT orders_id,pick_id from erp_pick_product_ls;
-- 写入日志表erp_operate_log
INSERT INTO erp_database_newest.erp_operate_log(operateUser,operateType,operateMod,operateKey,operateText)
select '30','update','ordersManage',orders_id,concat('生成拣货单(',pick_id,')，订单状态变为已打印') from erp_pick_product_ls2;

-- 取得订单分配里面的任务号，更新待发货订单表的标志及任务号
DROP TABLE IF EXISTS order_dd;
CREATE TEMPORARY table order_dd
select distinct a.orders_id,a.task_id,b.pick_id from erp_stock_assign a inner join erp_pick_product_ls2 b on a.orders_id=b.orders_id;
-- 回写订单标志
update erp_database_newest.erp_orders a INNER JOIN erp_pick_product_ls2 b on a.erp_orders_id=b.orders_id 
set a.orders_status=4,a.orders_print_time=now() where a.orders_status=3;

-- 回写待发货订单标志
update stock_out a INNER JOIN order_dd b on a.erp_orders_id=b.orders_id
set a.orders_status=30,a.task_num=b.task_id,a.print_time=UNIX_TIMESTAMP(NOW()),a.pick_id=b.pick_id;

truncate table erp_pick_product_ls;
truncate table erp_picking_task_details_new_ls;


end while;

/* -----------------------多多  5F订单--------不跨区--------------------*/
select @mdd3_5:=COUNT(*) from assign_a1 where status=200 and is_span=0 and pick_type=3 and floor='5';
while @mdd3_5>=@n3 do 
-- 订单大于40,循环执行写入
DROP TABLE IF EXISTS a3;
-- 取得多多5楼的前40订单
-- 参数传入
SET @slsql="
CREATE TEMPORARY table a3 
select orders_id
from assign_a1 
where status=200 and is_span=0 and pick_type=3 and floor='5'
GROUP BY orders_id
ORDER BY MAX(products_location)
LIMIT ?,?";
PREPARE STMT FROM @slsql;
EXECUTE STMT USING @m,@n3;
deallocate prepare STMT;

-- 取得订单的篮子号
DROP TABLE IF EXISTS a3_1;
CREATE TEMPORARY table a3_1
select orders_id,(@i:=@i+1) as basket_num from a3,(select @i:=0) as it;

DROP TABLE IF EXISTS assign_dd3_5F;
-- 
CREATE TEMPORARY table assign_dd3_5F
select b.basket_num,a.orders_id,a.pick_type,a.status,a.products_sku,a.products_location,a.s_warehouse_id,a.product_num,a.assign_num,a.is_span
from assign_a1 a INNER JOIN a3_1 b ON a.orders_id=b.orders_id;

-- 订单数据组织写入对应表，更新相关标志。非最后一次分配，不满40订单不给分配
IF (select count(*) from a3)=@n3
then

-- 根据库存分配表取得订单号，在订单表获取物流ID的结果集
-- 优化select @i:=GROUP_CONCAT(DISTINCT shipmentAutoMatched) From erp_database_newest.erp_orders  where erp_orders_id in(select orders_id from a3);


-- 在库存分配表erp_stock_assign组织数据写入拣货汇总表 erp_pick
INSERT into erp_database_newest.erp_pick(status,type,warehouse,create_time,uid,order_num,sku_num,num,shipment_id,order_type,pick_start_time,pick_end_time,pick_uid,pick_warehouse,pick_user,pick_action_time,pick_status)
select 1 as status,pick_type as type,s_warehouse_id as warehouse,UNIX_TIMESTAMP(NOW()) as create_time,0 as uid,count(distinct orders_id) as order_num,count(distinct products_sku) as sku_num,sum(assign_num) as num,
0 as shipment_id,0 as order_type,0 as pick_start_time,0 as pick_end_time,0 as pick_uid,s_warehouse_id as pick_warehouse,0 as pick_user,0 as pick_action_time,0 as pick_status
from assign_dd3_5F;-- 拣货单表


-- 取得拣货汇总表的最大id，在库存分配表erp_stock_assign组织数据写入拣货明细表erp_pick_product
SELECT @maxid:=max(id) from erp_database_newest.erp_pick;

INSERT into erp_pick_product_ls(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select @maxid as pick_id,orders_id,products_sku as product_sku,sum(assign_num) as product_num,0 as scan_num,0 as scan_uid,1 as status,0 as scan_time,UNIX_TIMESTAMP(NOW()) as create_time,0 as return_time,
0 as ship_time,0 as page_num,basket_num,0 as ship_uid
from assign_dd3_5F
GROUP BY orders_id,products_sku;-- 拣货详情表 



-- 在库存分配表erp_stock_assign中查询要分配的任务量，数据组织插入任务汇总表erp_picking_task_new
INSERT into erp_picking_task_new(pick_id,pick_type,sku_num,num,status,pick_user,pick_status,create_time,box,floor,update_time,warehouse,floor_num)
select @maxid as pick_id,pick_type,count(distinct products_sku) as sku_num,sum(assign_num) as num,1 as status,'' as pick_user,0 as pick_status,UNIX_TIMESTAMP(NOW()) as create_time,0 as box,0 as floor,0 as update_time,s_warehouse_id as warehouse,5 as floor_num
from assign_dd3_5F;

-- 取得任务汇总表的最大task_id，在库存分配表erp_stock_assign组织数据写入任务明细表erp_picking_task_details_new
SELECT @maxtask_id:=max(task_id) from  erp_picking_task_new;

insert into erp_picking_task_details_new_ls(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
SELECT @maxtask_id as task_id,products_sku,products_location,SUM(product_num) as product_num,0 as actual_num,'' as box,0 as status,'' as pick_user,UNIX_TIMESTAMP(NOW()) as create_time,0 as assign_time,0 as box_status,0 as update_time 
from assign_dd3_5F
GROUP BY products_sku,products_location
ORDER BY products_location;

-- 回写 erp_stock_assign 的is_sc标志
-- 优化 update erp_stock_assign set status=300 , task_id=@maxtask_id where orders_id in(select orders_id from a1);
update erp_stock_assign a INNER JOIN a3 b on a.orders_id=b.orders_id set status=300,task_id=@maxtask_id;

-- 临时表也回写标志，减去重复插入数据
-- 优化update assign_a1 set status=300 where orders_id in(select orders_id from a1);
update assign_a1 a INNER JOIN a3 b on a.orders_id=b.orders_id set status=300;


-- 删除临时表
drop table a3;
drop table a3_1;
DROP TABLE assign_dd3_5F;
end if;
-- 循环一次减40
set @mdd3_5=@mdd3_5-@n3;


-- 单个任务生成
-- erp_pick_product
INSERT into erp_database_newest.erp_pick_product(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid from erp_pick_product_ls;

-- erp_picking_task_details_new
insert into erp_picking_task_details_new(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
select task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time from erp_picking_task_details_new_ls;

-- 取得订单号
DROP TABLE IF EXISTS erp_pick_product_ls2;
CREATE TEMPORARY table erp_pick_product_ls2
select DISTINCT orders_id,pick_id from erp_pick_product_ls;
-- 写入日志表erp_operate_log
INSERT INTO erp_database_newest.erp_operate_log(operateUser,operateType,operateMod,operateKey,operateText)
select '30','update','ordersManage',orders_id,concat('生成拣货单(',pick_id,')，订单状态变为已打印') from erp_pick_product_ls2;

-- 取得订单分配里面的任务号，更新待发货订单表的标志及任务号
DROP TABLE IF EXISTS order_dd;
CREATE TEMPORARY table order_dd
select distinct a.orders_id,a.task_id,b.pick_id from erp_stock_assign a inner join erp_pick_product_ls2 b on a.orders_id=b.orders_id;
-- 回写订单标志
update erp_database_newest.erp_orders a INNER JOIN erp_pick_product_ls2 b on a.erp_orders_id=b.orders_id 
set a.orders_status=4,a.orders_print_time=now() where a.orders_status=3;

-- 回写待发货订单标志
update stock_out a INNER JOIN order_dd b on a.erp_orders_id=b.orders_id
set a.orders_status=30,a.task_num=b.task_id,a.print_time=UNIX_TIMESTAMP(NOW()),a.pick_id=b.pick_id;

truncate table erp_pick_product_ls;
truncate table erp_picking_task_details_new_ls;

end while;


/* -----------------------多多  6F订单--------不跨区--------------------*/
select @mdd3_6:=COUNT(*) from assign_a1 where status=200 and is_span=0 and pick_type=3 and floor='6';
while @mdd3_6>=@n3 do 
-- 订单大于40,循环执行写入
DROP TABLE IF EXISTS a3;
-- 取得多多6楼的前40订单
-- 参数传入
SET @slsql="CREATE TEMPORARY table a3 
select orders_id
from assign_a1 
where status=200 and is_span=0 and pick_type=3 and floor='6'
GROUP BY orders_id
ORDER BY MAX(products_location)
LIMIT ?,?";
PREPARE STMT FROM @slsql;
EXECUTE STMT USING @m,@n3;
deallocate prepare STMT;
-- 取得订单的篮子号
DROP TABLE IF EXISTS a3_1;
CREATE TEMPORARY table a3_1
select orders_id,(@i:=@i+1) as basket_num from a3,(select @i:=0) as it;

DROP TABLE IF EXISTS assign_dd3_6F;
-- 
CREATE TEMPORARY table assign_dd3_6F
select b.basket_num,a.orders_id,a.pick_type,a.status,a.products_sku,a.products_location,a.s_warehouse_id,a.product_num,a.assign_num,a.is_span
from assign_a1 a INNER JOIN a3_1 b ON a.orders_id=b.orders_id;

-- 订单数据组织写入对应表，更新相关标志。非最后一次分配，不满40订单不给分配
IF (select count(*) from a3)=@n3
then

-- 根据库存分配表取得订单号，在订单表获取物流ID的结果集
-- 优化select @i:=GROUP_CONCAT(DISTINCT shipmentAutoMatched) From erp_database_newest.erp_orders  where erp_orders_id in(select orders_id from a3);


-- 在库存分配表erp_stock_assign组织数据写入拣货汇总表 erp_pick
INSERT into erp_database_newest.erp_pick(status,type,warehouse,create_time,uid,order_num,sku_num,num,shipment_id,order_type,pick_start_time,pick_end_time,pick_uid,pick_warehouse,pick_user,pick_action_time,pick_status)
select 1 as status,pick_type as type,s_warehouse_id as warehouse,UNIX_TIMESTAMP(NOW()) as create_time,0 as uid,count(distinct orders_id) as order_num,count(distinct products_sku) as sku_num,sum(assign_num) as num,
0 as shipment_id,0 as order_type,0 as pick_start_time,0 as pick_end_time,0 as pick_uid,s_warehouse_id as pick_warehouse,0 as pick_user,0 as pick_action_time,0 as pick_status
from assign_dd3_6F;-- 拣货单表


-- 取得拣货汇总表的最大id，在库存分配表erp_stock_assign组织数据写入拣货明细表erp_pick_product
SELECT @maxid:=max(id) from erp_database_newest.erp_pick;

INSERT into erp_pick_product_ls(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select @maxid as pick_id,orders_id,products_sku as product_sku,sum(assign_num) as product_num,0 as scan_num,0 as scan_uid,1 as status,0 as scan_time,UNIX_TIMESTAMP(NOW()) as create_time,0 as return_time,
0 as ship_time,0 as page_num,basket_num,0 as ship_uid
from assign_dd3_6F
GROUP BY orders_id,products_sku;-- 拣货详情表 



-- 在库存分配表erp_stock_assign中查询要分配的任务量，数据组织插入任务汇总表erp_picking_task_new
INSERT into erp_picking_task_new(pick_id,pick_type,sku_num,num,status,pick_user,pick_status,create_time,box,floor,update_time,warehouse,floor_num)
select @maxid as pick_id,pick_type,count(distinct products_sku) as sku_num,sum(assign_num) as num,1 as status,'' as pick_user,0 as pick_status,UNIX_TIMESTAMP(NOW()) as create_time,0 as box,0 as floor,0 as update_time,s_warehouse_id as warehouse,6 as floor_num
from assign_dd3_6F;

-- 取得任务汇总表的最大task_id，在库存分配表erp_stock_assign组织数据写入任务明细表erp_picking_task_details_new
SELECT @maxtask_id:=max(task_id) from  erp_picking_task_new;

insert into erp_picking_task_details_new_ls(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
SELECT @maxtask_id as task_id,products_sku,products_location,SUM(product_num) as product_num,0 as actual_num,'' as box,0 as status,'' as pick_user,UNIX_TIMESTAMP(NOW()) as create_time,0 as assign_time,0 as box_status,0 as update_time 
from assign_dd3_6F
GROUP BY products_sku,products_location
ORDER BY products_location;

-- 回写 erp_stock_assign 的is_sc标志
-- 优化 update erp_stock_assign set status=300 , task_id=@maxtask_id where orders_id in(select orders_id from a1);
update erp_stock_assign a INNER JOIN a3 b on a.orders_id=b.orders_id set status=300,task_id=@maxtask_id;

-- 临时表也回写标志，减去重复插入数据
-- 优化update assign_a1 set status=300 where orders_id in(select orders_id from a1);
update assign_a1 a INNER JOIN a3 b on a.orders_id=b.orders_id set status=300;


-- 删除临时表
drop table a3;
drop table a3_1;
DROP TABLE assign_dd3_6F;
end if;
-- 循环一次减40
set @mdd3_6=@mdd3_6-@n3;


-- 单个任务生成
-- erp_pick_product
INSERT into erp_database_newest.erp_pick_product(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid from erp_pick_product_ls;

-- erp_picking_task_details_new
insert into erp_picking_task_details_new(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
select task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time from erp_picking_task_details_new_ls;

-- 取得订单号
DROP TABLE IF EXISTS erp_pick_product_ls2;
CREATE TEMPORARY table erp_pick_product_ls2
select DISTINCT orders_id,pick_id from erp_pick_product_ls;
-- 写入日志表erp_operate_log
INSERT INTO erp_database_newest.erp_operate_log(operateUser,operateType,operateMod,operateKey,operateText)
select '30','update','ordersManage',orders_id,concat('生成拣货单(',pick_id,')，订单状态变为已打印') from erp_pick_product_ls2;

-- 取得订单分配里面的任务号，更新待发货订单表的标志及任务号
DROP TABLE IF EXISTS order_dd;
CREATE TEMPORARY table order_dd
select distinct a.orders_id,a.task_id,b.pick_id from erp_stock_assign a inner join erp_pick_product_ls2 b on a.orders_id=b.orders_id;
-- 回写订单标志
update erp_database_newest.erp_orders a INNER JOIN erp_pick_product_ls2 b on a.erp_orders_id=b.orders_id 
set a.orders_status=4,a.orders_print_time=now() where a.orders_status=3;

-- 回写待发货订单标志
update stock_out a INNER JOIN order_dd b on a.erp_orders_id=b.orders_id
set a.orders_status=30,a.task_num=b.task_id,a.print_time=UNIX_TIMESTAMP(NOW()),a.pick_id=b.pick_id;

truncate table erp_pick_product_ls;
truncate table erp_picking_task_details_new_ls;

end while;


/* -----------------------多多  订单---跨区-----------------------*/
select @mdd3:=COUNT(*) from assign_a1 where status=200 and is_span=1 and pick_type=3;
while @mdd3>=@n3 do 
-- 订单大于40,循环执行写入
DROP TABLE IF EXISTS a3;
-- 取得跨区多多订单的前40
-- 参数传入
SET @slsql="CREATE TEMPORARY table a3 
select orders_id
from assign_a1 
where status=200 and is_span=1 and pick_type=3
GROUP BY orders_id
ORDER BY MAX(products_location)
LIMIT ?,?";
PREPARE STMT FROM @slsql;
EXECUTE STMT USING @m,@n3;
deallocate prepare STMT;
-- 取得订单的篮子号
DROP TABLE IF EXISTS a3_1;
CREATE TEMPORARY table a3_1
select orders_id,(@i:=@i+1) as basket_num from a3,(select @i:=0) as it;


DROP TABLE IF EXISTS assign_dd3_kq;
-- 单
CREATE TEMPORARY table assign_dd3_kq
select b.basket_num,a.orders_id,a.pick_type,a.status,a.products_sku,a.products_location,a.s_warehouse_id,a.product_num,a.assign_num,a.is_span,floor
from assign_a1 a INNER JOIN a3_1 b ON a.orders_id=b.orders_id;


-- 订单数据组织写入对应表，更新相关标志。非最后一次分配，不满100订单不给分配
IF (select count(*) from a3)=@n3
then

-- 根据库存分配表取得订单号，在订单表获取物流ID的结果集
-- 优化select @i:=GROUP_CONCAT(DISTINCT shipmentAutoMatched) From erp_database_newest.erp_orders  where erp_orders_id in(select orders_id from a3);
-- 根据订单分配取得楼层的组合
select @i2:=GROUP_CONCAT(DISTINCT floor) From assign_dd3_kq;

-- 在库存分配表erp_stock_assign组织数据写入拣货汇总表 erp_pick
INSERT into erp_database_newest.erp_pick(status,type,warehouse,create_time,uid,order_num,sku_num,num,shipment_id,order_type,pick_start_time,pick_end_time,pick_uid,pick_warehouse,pick_user,pick_action_time,pick_status)
select 1 as status,pick_type as type,s_warehouse_id as warehouse,UNIX_TIMESTAMP(NOW()) as create_time,0 as uid,count(distinct orders_id) as order_num,count(distinct products_sku) as sku_num,sum(assign_num) as num,
0 as shipment_id,0 as order_type,0 as pick_start_time,0 as pick_end_time,0 as pick_uid,s_warehouse_id as pick_warehouse,0 as pick_user,0 as pick_action_time,0 as pick_status
from assign_dd3_kq;-- 拣货单表


-- 取得拣货汇总表的最大id，在库存分配表erp_stock_assign组织数据写入拣货明细表erp_pick_product
SELECT @maxid:=max(id) from erp_database_newest.erp_pick;

INSERT into erp_pick_product_ls(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select @maxid as pick_id,orders_id,products_sku as product_sku,sum(assign_num) as product_num,0 as scan_num,0 as scan_uid,1 as status,0 as scan_time,UNIX_TIMESTAMP(NOW()) as create_time,0 as return_time,
0 as ship_time,0 as page_num,basket_num,0 as ship_uid
from assign_dd3_kq
GROUP BY orders_id,products_sku;-- 拣货详情表 



-- 在库存分配表erp_stock_assign中查询要分配的任务量，数据组织插入任务汇总表erp_picking_task_new
INSERT into erp_picking_task_new(pick_id,pick_type,sku_num,num,status,pick_user,pick_status,create_time,box,floor,update_time,warehouse,floor_num)
select @maxid as pick_id,pick_type,count(distinct products_sku) as sku_num,sum(assign_num) as num,1 as status,'' as pick_user,0 as pick_status,UNIX_TIMESTAMP(NOW()) as create_time,0 as box,0 as floor,0 as update_time,s_warehouse_id as warehouse, @i2 as floor_num
from assign_dd3_kq;

-- 取得任务汇总表的最大task_id，在库存分配表erp_stock_assign组织数据写入任务明细表erp_picking_task_details_new
SELECT @maxtask_id:=max(task_id) from  erp_picking_task_new;

insert into erp_picking_task_details_new_ls(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
SELECT @maxtask_id as task_id,products_sku,products_location,SUM(product_num) as product_num,0 as actual_num,'' as box,0 as status,'' as pick_user,UNIX_TIMESTAMP(NOW()) as create_time,0 as assign_time,0 as box_status,0 as update_time 
from assign_dd3_kq
GROUP BY products_sku,products_location
ORDER BY products_location;

-- 回写 erp_stock_assign 的is_sc标志
-- 优化 update erp_stock_assign set status=300 , task_id=@maxtask_id where orders_id in(select orders_id from a1);
update erp_stock_assign a INNER JOIN a3 b on a.orders_id=b.orders_id set status=300,task_id=@maxtask_id;

-- 临时表也回写标志，减去重复插入数据
-- 优化update assign_a1 set status=300 where orders_id in(select orders_id from a1);
update assign_a1 a INNER JOIN a3 b on a.orders_id=b.orders_id set status=300;

-- 删除临时表
drop table a3;
drop table a3_1;
DROP TABLE assign_dd3_kq;
end if;
-- 循环一次减40
set @mdd3=@mdd3-@n3;


-- 单个任务生成
-- erp_pick_product
INSERT into erp_database_newest.erp_pick_product(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid from erp_pick_product_ls;

-- erp_picking_task_details_new
insert into erp_picking_task_details_new(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
select task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time from erp_picking_task_details_new_ls;

-- 取得订单号
DROP TABLE IF EXISTS erp_pick_product_ls2;
CREATE TEMPORARY table erp_pick_product_ls2
select DISTINCT orders_id,pick_id from erp_pick_product_ls;
-- 写入日志表erp_operate_log
INSERT INTO erp_database_newest.erp_operate_log(operateUser,operateType,operateMod,operateKey,operateText)
select '30','update','ordersManage',orders_id,concat('生成拣货单(',pick_id,')，订单状态变为已打印') from erp_pick_product_ls2;

-- 取得订单分配里面的任务号，更新待发货订单表的标志及任务号
DROP TABLE IF EXISTS order_dd;
CREATE TEMPORARY table order_dd
select distinct a.orders_id,a.task_id,b.pick_id from erp_stock_assign a inner join erp_pick_product_ls2 b on a.orders_id=b.orders_id;
-- 回写订单标志
update erp_database_newest.erp_orders a INNER JOIN erp_pick_product_ls2 b on a.erp_orders_id=b.orders_id 
set a.orders_status=4,a.orders_print_time=now() where a.orders_status=3;

-- 回写待发货订单标志
update stock_out a INNER JOIN order_dd b on a.erp_orders_id=b.orders_id
set a.orders_status=30,a.task_num=b.task_id,a.print_time=UNIX_TIMESTAMP(NOW()),a.pick_id=b.pick_id;

truncate table erp_pick_product_ls;
truncate table erp_picking_task_details_new_ls;
end while;
/*
-- 临时表数据写入系统表
-- erp_pick_product
INSERT into erp_database_newest.erp_pick_product(pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid)
select pick_id,orders_id,product_sku,product_num,scan_num,scan_uid,status,scan_time,create_time,return_time,ship_time,page_num,basket_num,ship_uid from erp_pick_product_ls;

-- erp_picking_task_details_new
insert into erp_picking_task_details_new(task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time)
select task_id,product_sku,products_location,product_num,actual_num,box,status,pick_user,create_time,assign_time,box_status,update_time from erp_picking_task_details_new_ls;

-- 取得订单号
DROP TABLE IF EXISTS erp_pick_product_ls2;
CREATE TEMPORARY table erp_pick_product_ls2
select DISTINCT orders_id,pick_id from erp_pick_product_ls;
-- 写入日志表erp_operate_log
INSERT INTO erp_database_newest.erp_operate_log(operateUser,operateType,operateMod,operateKey,operateText)
select '30','update','ordersManage',orders_id,concat('生成拣货单(',pick_id,')，订单状态变为已打印') from erp_pick_product_ls2;

-- 取得订单分配里面的任务号，更新待发货订单表的标志及任务号
DROP TABLE IF EXISTS order_dd;
CREATE TEMPORARY table order_dd
select distinct a.orders_id,a.task_id,b.pick_id from erp_stock_assign a inner join erp_pick_product_ls2 b on a.orders_id=b.orders_id;
-- 回写订单标志
update erp_database_newest.erp_orders a,erp_pick_product_ls2 b set a.orders_status=4,a.orders_print_time=now() where a.erp_orders_id=b.orders_id and a.orders_status=3;

-- 回写待发货订单标志
update stock_out a,order_dd b set a.orders_status=30,a.task_num=b.task_id,a.print_time=UNIX_TIMESTAMP(NOW()),a.pick_id=b.pick_id where a.erp_orders_id=b.orders_id;
*/

-- 删除临时表
drop table erp_pick_product_ls;
drop table erp_picking_task_details_new_ls;

drop table erp_pick_product_ls2;
drop table order_dd;
drop table assign_a1;

-- 事物回滚或执行
 IF t_error = 1 then  
ROLLBACK;  
ELSE  
COMMIT;  
end if;  


END



任务4  



BEGIN

 DECLARE t_error INTEGER DEFAULT 0;  

 DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET t_error=1;  

   -- 开启事物

 START TRANSACTION;  

-- 该存储过程用于东莞仓重算总库存表

-- 东莞仓架位库存合计

drop table if EXISTS new_pro;

CREATE TEMPORARY table new_pro

select products_sku,sum(stock) as stock,sum(assign_stock) as assign_stock,sum(stock)-sum(assign_stock) as 可继续分配库存

from  erp_stock_list where s_warehouse_id='1035' -- and products_location<>'pick_dock'

GROUP BY products_sku;

-- 东莞仓erp_stock_detail库存表

drop table if EXISTS old_sto;

CREATE TEMPORARY table old_sto

select products_id,products_sku,sum(actual_stock) as actual_stock

from erp_database_newest.erp_stock_detail where stock_warehouse_id='1035'-- 库存总表

GROUP BY products_id,products_sku;

CREATE INDEX pro_a on new_pro(products_sku);

CREATE INDEX pro_b on old_sto(products_sku);

-- 比对erp_stock_list 和erp_stock_detail表的差异数

drop table if EXISTS old_stock;

CREATE TEMPORARY table old_stock

select b.*,stock-actual_stock as 差异数,b.actual_stock+(stock-actual_stock) as 更新后库存

from new_pro a RIGHT JOIN old_sto b on a.products_sku=b.products_sku 

where a.stock<>b.actual_stock 

ORDER BY b.actual_stock+(stock-actual_stock) desc;

CREATE INDEX pro_c on old_stock(products_sku);

-- 写入wms的日志表

INSERT INTO erp_stock_log(po,po_type,type,fr_loc,to_loc,sku,fr_qty,to_qty,fr_trackid,to_trackid,time,stock_remark,m_user,warehouse)

select 0,0,'ov','0','0',products_sku,actual_stock,更新后库存,'0','0',NOW(),'老库存erp_stock_detail更新库存',0,1035 from old_stock;

-- 写入erp_stock_detail_operate_record_detail 出库日志

INSERT INTO erp_database_newest.erp_stock_detail_operate_record_detail(operate_type,product_id,operate_count,stock,operate_time)

select 'in',products_id,差异数,更新后库存,NOW() from old_stock;

-- 写入出库库统计表

INSERT into erp_database_newest.erp_orders_record(products_sku,orders_record_from,orders_record_price,orders_record_count,user_id,orders_record_type,

orders_record_status,orders_record_time,orders_record_reason,orders_record_year,orders_record_month,recordType)

select products_sku,'盘溢' as orders_record_from,0 as orders_record_price,差异数 as orders_record_count,0 as user_id,2 as orders_record_type,

1 as orders_record_status,NOW(),'库存差异' as orders_record_reason,year(NOW()) as orders_record_year,month(NOW()) as orders_record_month,1 as recordType 

from old_stock;

-- 重算erp的erp_stock_detail 库存

update new_pro a RIGHT JOIN erp_database_newest.erp_stock_detail b on a.products_sku=b.products_sku

set b.actual_stock=b.actual_stock+(stock-actual_stock)

where a.stock<>b.actual_stock  and b.stock_warehouse_id='1035';

-- 事物回滚或执行

 IF t_error = 1 then  

ROLLBACK;  

ELSE  

COMMIT;  

end if;  

END



任务 5 


BEGIN
-- 初始化 深圳仓的盘点表
delete from check_inventory.erp_pandian_stock where s_warehouse_id=1000;
delete from check_inventory.erp_pandian_initial where s_warehouse_id=1000;
-- 有库存的sku写入盘点表
INSERT into check_inventory.erp_pandian_initial(products_id,products_sku,products_location,s_warehouse_id,product_name,stock,create_time)
select a.products_id,a.products_sku,CONCAT_WS(',',a.products_location,c.products_location) as products_location,
1000 as s_warehouse_id,a.products_name_cn as product_name,ifnull(b.actual_stock,0) as stock
,UNIX_TIMESTAMP(NOW()) as create_time
from erp_database_newest.erp_products_data a 
INNER JOIN erp_database_newest.erp_stock_detail b on a.products_id=b.products_id
LEFT JOIN erp_database_newest.erp_sku_temporary_location c on a.products_sku=c.sku and c.products_location<>''
where a.product_warehouse_id=1000 and b.actual_stock>0 and a.products_sku<>'PJBFA0001';

END



任务6 

BEGIN

IF (select COUNT(1) from erp_stock_list a where products_location<>'pick_dock' and stock=0 
and not EXISTS (select 1 from erp_stock_list b where a.products_sku=b.products_sku and products_location='pick_dock'))>0
then
-- 清除原备份数据
TRUNCATE table erp_stock_list_clean_backups;

-- 写入备份
INSERT into erp_stock_list_clean_backups
select * from erp_stock_list;

-- 定期清除
delete a from erp_stock_list a LEFT JOIN erp_stock_list b on a.products_sku=b.products_sku 
and b.products_location='pick_dock'
where a.stock=0 and a.products_location<>'pick_dock'
and b.products_sku is null;
-- 清除pick_dock数量为0 的数据
DELETE from erp_stock_list where stock=0 and products_location='pick_dock';
end if;

END


任务 7

BEGIN
-- 取得8点之前还没分配的订单号
drop table if EXISTS dfdd_hz;
CREATE TEMPORARY table dfdd_hz
select  DISTINCT b.erp_orders_id
from  erp_database_newest.erp_orders b INNER JOIN stock_out a on a.erp_orders_id=b.erp_orders_id 
where a.orders_status=0 and a.orders_warehouse_id=1035 and b.orders_status=3 and b.orders_is_backorder=0 and b.orders_warehouse_id=1035;
-- 创建索引，加快检索速度
CREATE INDEX a01 on dfdd_hz(erp_orders_id);
-- 取得现在wms库存可用数量
drop table if EXISTS ckkc;
CREATE TEMPORARY table ckkc
select products_sku,sum(case when frozen_stock+assign_stock>stock then 0 else stock-frozen_stock-assign_stock end) as kyshl 
from erp_stock_list
where products_location<>'pick_dock' and stock>0 group by products_sku;
-- 创建索引，加快检索速度
CREATE INDEX a02 on ckkc(products_sku);
-- 取得wms可分配库存不足的订单
drop table if EXISTS dfdd;
CREATE TEMPORARY table dfdd
select a.erp_orders_id from stock_out_detail a INNER JOIN dfdd_hz b on a.erp_orders_id=b.erp_orders_id
LEFT JOIN ckkc c on c.products_sku=a.sku
where ifnull(kyshl,0)<a.need_num;
-- 创建索引，加快检索速度
CREATE INDEX a03 on dfdd(erp_orders_id);

-- 备份订单的跟踪号等信息 ERP_rollback_Tracking_num

/*insert into ERP_rollback_Tracking_num(erp_orders_id,orders_shipping_code,shipmentAutoMatched,orders_warehouse_id,insert_time)

select erp_orders_id,orders_shipping_code,shipmentAutoMatched,orders_warehouse_id,NOW()

from erp_database_newest.erp_orders where erp_orders_id in (select erp_orders_id from dfdd);*/


-- 写入日志表erp_operate_log
INSERT INTO erp_database_newest.erp_operate_log(operateUser,operateType,operateMod,operateKey,operateText)
select '30','update','ordersManage',erp_orders_id,'进入wms分配架位库存不足,回滚欠货状态，待重新分配仓库' from dfdd;

-- 更新 orders表的跟踪号、物流、仓库、是否欠货,让订单重新匹配仓库物流等信息/跟踪号、物流 暂时不需要清 -- orders_shipping_code='',shipmentAutoMatched=0,orders_warehouse_id=0,
update erp_database_newest.erp_orders a INNER JOIN dfdd b on a.erp_orders_id=b.erp_orders_id set orders_is_backorder=1;

-- 删除stock_out，之后重新捉取
delete from stock_out where erp_orders_id in (select erp_orders_id from dfdd);
-- 删除stock_out_detail，之后重新捉取
delete from stock_out_detail where erp_orders_id in (select erp_orders_id from dfdd);

drop table dfdd_hz;
drop table ckkc;
drop table dfdd;

END


任务8 

BEGIN
-- 初始化 东莞的盘点表
delete from check_inventory.erp_pandian_stock where s_warehouse_id=1035;
delete from check_inventory.erp_pandian_initial where s_warehouse_id=1035;
-- 有库存的sku写入盘点表
INSERT into check_inventory.erp_pandian_initial(products_id,products_sku,products_location,s_warehouse_id,product_name,stock,create_time)
select a.products_id,a.products_sku,b.products_location,1035 as s_warehouse_id,a.products_name_cn as product_name,ifnull(b.stock,0) as stock
,UNIX_TIMESTAMP(NOW()) as create_time
from erp_database_newest.erp_products_data a 
INNER JOIN wms.erp_stock_list b on a.products_id=b.products_id
where a.product_warehouse_id=1035 and b.stock>0 and b.products_location<>'pick_dock' and a.products_sku<>'PJBFA0001';

END








